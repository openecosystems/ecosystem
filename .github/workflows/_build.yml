name: build
on:
  workflow_call:
    inputs:
      go_version:
        required: false
        type: string
      go-version:
        required: false
        type: string
        default: stable
      go-version-file:
        required: false
        type: string
      working-directory:
        required: false
        type: string
    secrets:
      gh_pat:
        required: false
permissions:
  contents: write
  pull-requests: write
jobs:
#  vulnerability:
#    runs-on: ubuntu-latest
#    env:
#      GH_PAT: ${{ secrets.gh_pat }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - run: |
#          git config --global url."https://${{ secrets.gh_pat }}@github.com/openecosystems".insteadOf "https://github.com/openecosystems"
#        if: env.GH_PAT != null
#      - uses: actions/setup-go@v5
#        with:
#          go-version: stable
#          cache: true
#          check-latest: true
#      - uses: pnpm/action-setup@v4
#        with:
#          version: 9
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 20
#          cache: 'pnpm'
#      - run: pnpm install --frozen-lockfile
#      - uses: nrwl/nx-set-shas@v4
#      - run: go install golang.org/x/vuln/cmd/govulncheck@latest
#      - run: pnpm exec nx affected -t vulnerability --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: "on"
      GH_PAT: ${{ secrets.gh_pat }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - run: pnpm dlx nx-cloud start-ci-run --distribute-on=".nx/workflows/distribution-config.yaml" #--stop-agents-after="build"

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install node dependencies
        run: pnpm install --frozen-lockfile

      - name: Set Shas
        uses: nrwl/nx-set-shas@v4

      - name: Run NX
        #run: pnpm exec nx affected -t build testA --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
        run: pnpm exec nx affected -t distribute --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
        #run: pnpm exec nx run apps-clients-public-cli-v2alpha-oeco:distribute

      - name: Merge coverage reports
        run: |
          mkdir -p ./coverage
          find ./coverage -name "coverage.txt" -exec cat {} + > ./coverage/coverage.txt

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: openecosystems/ecosystem
          files: "./coverage/coverage.txt"

  dependabot:
    #needs: [ build, vulnerability ]
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@dbb049abf0d677abbd7f7eee0375145b417fdd34 # v2.2.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
