syntax = "proto3";

package platform.iam.v2alpha;

import "google/api/annotations.proto";
import "platform/options/v2/annotations.proto";
import "platform/spec/v2/spec.proto";
import "google/protobuf/timestamp.proto";
import "platform/type/v2/file.proto";
import "platform/type/v2/credential.proto";

option (platform.options.v2.network_file) = {type: NETWORK_TYPE_UNDERLAY;};
option (platform.options.v2.language) = {languages: [LANGUAGE_TYPE_GOLANG]};
option (platform.options.v2.configuration) = {enabled: true,};
option (platform.options.v2.graphql) = {enabled: true};
option (platform.options.v2.api_file) = {
  type: API_TYPE_PUBLIC;
  cycle: API_LIFECYCLE_ALPHA;
  interface: API_INTERFACE_TYPE_DISCOVERABLE;
};
option (platform.options.v2.entity) = {
  entity: "account_authority";
  entity_plural: "account_authorities";
  type: ENTITY_TYPE_UNSPECIFIED;
  namespace: "jan";
  consistency: ENTITY_CONSISTENCY_EVENTUAL;
  versionable: true;
};

option go_package = "github.com/openecosystems/ecosystem/libs/public/go/protobuf/gen/platform/iam/v2alpha;iamv2alphapb";

message AccountAuthorityConfiguration {

  string pki = 1;

}

service AccountAuthorityService {

  /* Create an Account Authority */

  //Method to create an Account Authority to manage the ecosystem partners
  rpc CreateAccountAuthority(CreateAccountAuthorityRequest) returns (CreateAccountAuthorityResponse) {
    option (platform.options.v2.cqrs) = {type: CQRS_TYPE_MUTATION_CREATE};
    option (platform.options.v2.api_method) = {shortname: "create"};
    option (google.api.http) = {
      post: "/v2alpha/iam/aa/create"
      body: "*"
    };
  }

  // Delete CA
  // Evict Member of Ecosystem

}

// Supported event type for subscription.
enum AccountAuthorityType {
  ACCOUNT_AUTHORITY_TYPE_UNSPECIFIED = 0; // Unspecified or unknown subscription type.
  ACCOUNT_AUTHORITY_TYPE_ORGANIZATION = 1; // AccountAuthority for an organization.
  ACCOUNT_AUTHORITY_TYPE_ECOSYSTEM = 2; // AccountAuthority for an ecosystem
  ACCOUNT_AUTHORITY_TYPE_USER = 3; // AccountAuthority for a user.
}

// The current status of a event
enum EventAccountAuthorityStatus {
  EVENT_ACCOUNT_AUTHORITY_STATUS_UNSPECIFIED = 0; // Unspecified or unknown status.
  EVENT_ACCOUNT_AUTHORITY_STATUS_CREATING = 1; // AccountAuthority is being created.
  EVENT_ACCOUNT_AUTHORITY_STATUS_ERROR = 4; // Error.
}

enum AccountAuthorityCommands {
  // Base class is
  option (platform.options.v2.spec) = {type: SPEC_ENUM_TYPE_COMMANDS};

  ACCOUNT_AUTHORITY_COMMANDS_UNSPECIFIED = 0; // Unspecified or unknown command
  ACCOUNT_AUTHORITY_COMMANDS_CREATE_ACCOUNT_AUTHORITY = 1;
}

enum AccountAuthorityEvents {
  option (platform.options.v2.spec) = {type: SPEC_ENUM_TYPE_EVENTS};

  // Unspecified or unknown event.
  ACCOUNT_AUTHORITY_EVENTS_UNSPECIFIED = 0;

  // Event AccountAuthority complete.
  ACCOUNT_AUTHORITY_EVENTS_CREATED_ACCOUNT_AUTHORITY = 1 [(platform.options.v2.billing) = {
    billable: true,
    metered: true
  }];

}



// Request for CreateAccountAuthority
message CreateAccountAuthorityRequest {
  option (platform.options.v2.graph) = {type: GRAPH_TYPE_INPUT};

  // Name of the Account Authority. For example, 'Open Ecosystems, Inc.'
  string name = 1;

  platform.type.v2.Curve curve = 2;

  //google.protobuf.Duration duration = 3;

  // Encrypt key with this passphrase and write out key in an encrypted format
  string encrypt_key_passphrase = 4;

}

// Response to CreateAccountAuthority
message CreateAccountAuthorityResponse {
  option (platform.options.v2.graph) = {type: GRAPH_TYPE_OUTPUT};

  // The response context
  spec.v2.SpecResponseContext spec_context = 1;

  AccountAuthority account_authority = 2;
}

message AccountAuthority {
  option (platform.options.v2.graph) = {type: GRAPH_TYPE_OUTPUT};

  // Identifier for this Account Authority
  string id = 1 [(platform.options.v2.entity_field) = {key: true}];

  // Timestamp indicating when this event subscription was created.
  google.protobuf.Timestamp created_at = 2;

  // Timestamp indicating when this event subscription was last updated.
  google.protobuf.Timestamp updated_at = 3;

  platform.type.v2.Credential credential = 4;
}
