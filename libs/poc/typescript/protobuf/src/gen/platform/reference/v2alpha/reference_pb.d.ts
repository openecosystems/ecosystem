// @generated by protoc-gen-es v2.2.3
// @generated from file platform/reference/v2alpha/reference.proto (package platform.reference.v2alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from '@bufbuild/protobuf/codegenv1';
import type { Message } from '@bufbuild/protobuf';
import type { SpecResponseContext } from '../../spec/v2/spec_pb';
import type { Timestamp } from '@bufbuild/protobuf/wkt';

/**
 * Describes the file platform/reference/v2alpha/reference.proto.
 */
export declare const file_platform_reference_v2alpha_reference: GenFile;

/**
 * @generated from message platform.reference.v2alpha.ReferenceConfiguration
 */
export declare type ReferenceConfiguration = Message<'platform.reference.v2alpha.ReferenceConfiguration'> & {};

/**
 * Describes the message platform.reference.v2alpha.ReferenceConfiguration.
 * Use `create(ReferenceConfigurationSchema)` to create a new message.
 */
export declare const ReferenceConfigurationSchema: GenMessage<ReferenceConfiguration>;

/**
 * @generated from message platform.reference.v2alpha.UnaryRequest
 */
export declare type UnaryRequest = Message<'platform.reference.v2alpha.UnaryRequest'> & {
    /**
     * @generated from field: platform.reference.v2alpha.ClientMessage message = 1;
     */
    message?: ClientMessage;
};

/**
 * Describes the message platform.reference.v2alpha.UnaryRequest.
 * Use `create(UnaryRequestSchema)` to create a new message.
 */
export declare const UnaryRequestSchema: GenMessage<UnaryRequest>;

/**
 * @generated from message platform.reference.v2alpha.UnaryResponse
 */
export declare type UnaryResponse = Message<'platform.reference.v2alpha.UnaryResponse'> & {
    /**
     * The response context
     *
     * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
     */
    specContext?: SpecResponseContext;

    /**
     * @generated from field: platform.reference.v2alpha.ServerMessage message = 2;
     */
    message?: ServerMessage;
};

/**
 * Describes the message platform.reference.v2alpha.UnaryResponse.
 * Use `create(UnaryResponseSchema)` to create a new message.
 */
export declare const UnaryResponseSchema: GenMessage<UnaryResponse>;

/**
 * @generated from message platform.reference.v2alpha.ServerStreamingRequest
 */
export declare type ServerStreamingRequest = Message<'platform.reference.v2alpha.ServerStreamingRequest'> & {
    /**
     * @generated from field: platform.reference.v2alpha.ClientMessage message = 1;
     */
    message?: ClientMessage;
};

/**
 * Describes the message platform.reference.v2alpha.ServerStreamingRequest.
 * Use `create(ServerStreamingRequestSchema)` to create a new message.
 */
export declare const ServerStreamingRequestSchema: GenMessage<ServerStreamingRequest>;

/**
 * @generated from message platform.reference.v2alpha.ServerStreamingResponse
 */
export declare type ServerStreamingResponse = Message<'platform.reference.v2alpha.ServerStreamingResponse'> & {
    /**
     * @generated from field: platform.reference.v2alpha.ServerMessage message = 1;
     */
    message?: ServerMessage;
};

/**
 * Describes the message platform.reference.v2alpha.ServerStreamingResponse.
 * Use `create(ServerStreamingResponseSchema)` to create a new message.
 */
export declare const ServerStreamingResponseSchema: GenMessage<ServerStreamingResponse>;

/**
 * @generated from message platform.reference.v2alpha.ServerMessage
 */
export declare type ServerMessage = Message<'platform.reference.v2alpha.ServerMessage'> & {
    /**
     * @generated from field: string user = 1;
     */
    user: string;

    /**
     * @generated from field: string text = 2;
     */
    text: string;
};

/**
 * Describes the message platform.reference.v2alpha.ServerMessage.
 * Use `create(ServerMessageSchema)` to create a new message.
 */
export declare const ServerMessageSchema: GenMessage<ServerMessage>;

/**
 * @generated from message platform.reference.v2alpha.ClientMessage
 */
export declare type ClientMessage = Message<'platform.reference.v2alpha.ClientMessage'> & {
    /**
     * @generated from field: string user = 1;
     */
    user: string;

    /**
     * @generated from field: string text = 2;
     */
    text: string;
};

/**
 * Describes the message platform.reference.v2alpha.ClientMessage.
 * Use `create(ClientMessageSchema)` to create a new message.
 */
export declare const ClientMessageSchema: GenMessage<ClientMessage>;

/**
 * @generated from message platform.reference.v2alpha.Reference
 */
export declare type Reference = Message<'platform.reference.v2alpha.Reference'> & {
    /**
     * @generated from field: string id = 1;
     */
    id: string;

    /**
     * Timestamp indicating when this message was created.
     *
     * @generated from field: google.protobuf.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;

    /**
     * Timestamp indicating when this message was last updated.
     *
     * @generated from field: google.protobuf.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
};

/**
 * Describes the message platform.reference.v2alpha.Reference.
 * Use `create(ReferenceSchema)` to create a new message.
 */
export declare const ReferenceSchema: GenMessage<Reference>;

/**
 * @generated from service platform.reference.v2alpha.ReferenceService
 */
export declare const ReferenceService: GenService<{
    /**
     * @generated from rpc platform.reference.v2alpha.ReferenceService.Unary
     */
    unary: {
        methodKind: 'unary';
        input: typeof UnaryRequestSchema;
        output: typeof UnaryResponseSchema;
    };
    /**
     * @generated from rpc platform.reference.v2alpha.ReferenceService.ServerStreaming
     */
    serverStreaming: {
        methodKind: 'server_streaming';
        input: typeof ServerStreamingRequestSchema;
        output: typeof ServerStreamingResponseSchema;
    };
}>;
