{{ $entityNameFromField := entityNameFromField . }}
{{- if .Type.IsEnum -}}
// IsEnum
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}.String() != "" && ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} = {{ enumTypePackage . }}{{ .Type.Enum.Name.UpperCamelCase }}(bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(int))}

{{- else if isMap . -}}
// IsMap
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(map[{{ mapKeyTypePackage . }}{{ mapKeyType . }}]{{ mapValueTypePackage . }}{{ mapValueType . }})}

{{- else if .Type.IsRepeated -}}
// IsRepeated
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].([]{{ sliceValueTypePackage . }}{{ sliceValueType . }})}

{{- else if isTimestamp . -}}
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} = timestamppb.New(time.Unix(int64(bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(int)), 0))}

{{- else if isDuration . -}}
// IsDuration
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} = durationpb.New(time.Duration(int64(bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(int))))}


{{- else if isString . -}}
// IsString
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(string)}

{{- else if isInteger32 . -}}
// IsInteger32
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(int32)}

{{- else if isUnsignedInteger32 . -}}
// IsUnsignedInteger32
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(uint32)}

{{- else if isInteger64 . -}}
// IsInteger64
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(int64)}

{{- else if isUnsignedInteger64 . -}}
// IsUnsignedInteger64
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(uint64)}

{{- else if isFloat32 . -}}
// IsFloat32
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(float32)}

{{- else if isFloat64 . -}}
// IsFloat32
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(float64)}

{{- else if isBoolean . -}}
// IsBoolean
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].(bool)}

{{- else if isByte . -}}
// IsByte
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }}, _ = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].([]byte)}

{{- else if isStructPB . -}}
// IsStructPB
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {
    mapValue := spec.ConvertToJSON(bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]).(map[string]interface{})
    val, err := structpb.NewStruct(mapValue)
    if err != nil {
        return nil, err
    }
    entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} = val
}

{{- else if isStruct . -}}
// IsStruct
_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
if ok {
    jsonBytes, _ := bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin].([]byte)
    var val *{{ structTypePackage . }}{{ structType . }}
    if err := json.Unmarshal(jsonBytes, &val); err != nil {
        return nil, err
    }
    entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} = val
}

{{- else if .Type.IsEmbed -}}
// IsEmbed
//_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
//if entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} != nil && ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} = bins[{{ entityNameFromField . }}{{ .Name.UpperCamelCase }}Bin].(string)}

{{- else -}}
// ELSE
//_, ok = bins[{{ $entityNameFromField.UpperCamelCase }}{{ .Name.UpperCamelCase }}Bin]
//if entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} != "" && ok {entity.{{ .Message.Name }}.{{ .Name.UpperCamelCase }} = bins[{{ entityNameFromField . }}{{ .Name.UpperCamelCase }}Bin].(string)}
{{- end -}}
