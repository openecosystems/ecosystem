// Code generated by protoc-gen-platform protobuf/data-catalog. DO NOT EDIT.

// @generated by protoc-gen-es v2.2.3
// @generated from file platform/ontology/v2alpha/spec_data_catalog.proto (package platform.ontology.v2alpha, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_platform_options_v2_annotations } from "../../options/v2/annotations_pb";

/**
 * Describes the file platform/ontology/v2alpha/spec_data_catalog.proto.
 */
export const file_platform_ontology_v2alpha_spec_data_catalog = /*@__PURE__*/
  fileDesc("", [file_platform_options_v2_annotations]);

/**
 * Describes the message platform.ontology.v2alpha.SpecDataCatalog.
 * Use `create(SpecDataCatalogSchema)` to create a new message.
 */
export const SpecDataCatalogSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 0);

/**
 * Describes the message platform.ontology.v2alpha.Audit.
 * Use `create(AuditSchema)` to create a new message.
 */
export const AuditSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 1);

/**
 * Describes the message platform.ontology.v2alpha.Cli.
 * Use `create(CliSchema)` to create a new message.
 */
export const CliSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 2);

/**
 * Describes the message platform.ontology.v2alpha.Communication.
 * Use `create(CommunicationSchema)` to create a new message.
 */
export const CommunicationSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 3);

/**
 * Describes the message platform.ontology.v2alpha.Configuration.
 * Use `create(ConfigurationSchema)` to create a new message.
 */
export const ConfigurationSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 4);

/**
 * Describes the message platform.ontology.v2alpha.Cryptography.
 * Use `create(CryptographySchema)` to create a new message.
 */
export const CryptographySchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 5);

/**
 * Describes the message platform.ontology.v2alpha.Dns.
 * Use `create(DnsSchema)` to create a new message.
 */
export const DnsSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 6);

/**
 * Describes the message platform.ontology.v2alpha.Edge.
 * Use `create(EdgeSchema)` to create a new message.
 */
export const EdgeSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 7);

/**
 * Describes the message platform.ontology.v2alpha.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 8);

/**
 * Describes the message platform.ontology.v2alpha.Iam.
 * Use `create(IamSchema)` to create a new message.
 */
export const IamSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 9);

/**
 * Describes the message platform.ontology.v2alpha.Mesh.
 * Use `create(MeshSchema)` to create a new message.
 */
export const MeshSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 10);

/**
 * Describes the message platform.ontology.v2alpha.Ontology.
 * Use `create(OntologySchema)` to create a new message.
 */
export const OntologySchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 11);

/**
 * Describes the message platform.ontology.v2alpha.Options.
 * Use `create(OptionsSchema)` to create a new message.
 */
export const OptionsSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 12);

/**
 * Describes the message platform.ontology.v2alpha.Reference.
 * Use `create(ReferenceSchema)` to create a new message.
 */
export const ReferenceSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 13);

/**
 * Describes the message platform.ontology.v2alpha.Spec.
 * Use `create(SpecSchema)` to create a new message.
 */
export const SpecSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 14);

/**
 * Describes the message platform.ontology.v2alpha.System.
 * Use `create(SystemSchema)` to create a new message.
 */
export const SystemSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 15);

/**
 * Describes the message platform.ontology.v2alpha.Type.
 * Use `create(TypeSchema)` to create a new message.
 */
export const TypeSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 16);

/**
 * Describes the message platform.ontology.v2alpha.AuditV2Alpha.
 * Use `create(AuditV2AlphaSchema)` to create a new message.
 */
export const AuditV2AlphaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 17);

/**
 * Describes the message platform.ontology.v2alpha.ConfigurationV2Alpha.
 * Use `create(ConfigurationV2AlphaSchema)` to create a new message.
 */
export const ConfigurationV2AlphaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 18);

/**
 * Describes the message platform.ontology.v2alpha.CertificateV2Alpha.
 * Use `create(CertificateV2AlphaSchema)` to create a new message.
 */
export const CertificateV2AlphaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 19);

/**
 * Describes the message platform.ontology.v2alpha.CertificateAuthorityV2Alpha.
 * Use `create(CertificateAuthorityV2AlphaSchema)` to create a new message.
 */
export const CertificateAuthorityV2AlphaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 20);

/**
 * Describes the message platform.ontology.v2alpha.EventSubscriptionV2Alpha.
 * Use `create(EventSubscriptionV2AlphaSchema)` to create a new message.
 */
export const EventSubscriptionV2AlphaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 21);

/**
 * Describes the message platform.ontology.v2alpha.ReferenceV2Alpha.
 * Use `create(ReferenceV2AlphaSchema)` to create a new message.
 */
export const ReferenceV2AlphaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 22);

/**
 * Describes the message platform.ontology.v2alpha.SystemV2Alpha.
 * Use `create(SystemV2AlphaSchema)` to create a new message.
 */
export const SystemV2AlphaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 23);

/**
 * Describes the message platform.ontology.v2alpha.PreferenceCenterV1Beta.
 * Use `create(PreferenceCenterV1BetaSchema)` to create a new message.
 */
export const PreferenceCenterV1BetaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 24);

/**
 * Describes the message platform.ontology.v2alpha.PreferenceCenterV1Alpha.
 * Use `create(PreferenceCenterV1AlphaSchema)` to create a new message.
 */
export const PreferenceCenterV1AlphaSchema = /*@__PURE__*/
  messageDesc(file_platform_ontology_v2alpha_spec_data_catalog, 25);

