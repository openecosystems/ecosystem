// @generated by protoc-gen-es v2.2.3
// @generated from file platform/cryptography/v2alpha/certificate_authority.proto (package platform.cryptography.v2alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import type { SpecResponseContext } from "../../spec/v2/spec_pb";
import type { File } from "../../type/v2/file_pb";

/**
 * Describes the file platform/cryptography/v2alpha/certificate_authority.proto.
 */
export declare const file_platform_cryptography_v2alpha_certificate_authority: GenFile;

/**
 * @generated from message platform.cryptography.v2alpha.CertificateAuthorityConfiguration
 */
export declare type CertificateAuthorityConfiguration = Message<"platform.cryptography.v2alpha.CertificateAuthorityConfiguration"> & {
  /**
   * @generated from field: string pki = 1;
   */
  pki: string;
};

/**
 * Describes the message platform.cryptography.v2alpha.CertificateAuthorityConfiguration.
 * Use `create(CertificateAuthorityConfigurationSchema)` to create a new message.
 */
export declare const CertificateAuthorityConfigurationSchema: GenMessage<CertificateAuthorityConfiguration>;

/**
 * Request for CreateCertificateAuthority
 *
 * @generated from message platform.cryptography.v2alpha.CreateCertificateAuthorityRequest
 */
export declare type CreateCertificateAuthorityRequest = Message<"platform.cryptography.v2alpha.CreateCertificateAuthorityRequest"> & {
  /**
   * Name of the Certificate Authority. For example, 'Open Ecosystems, Inc.'
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: platform.cryptography.v2alpha.Curve curve = 2;
   */
  curve: Curve;

  /**
   * @generated from field: google.protobuf.Duration duration = 3;
   */
  duration?: Duration;

  /**
   * Encrypt key with this passphrase and write out key in an encrypted format
   *
   * @generated from field: string encrypt_key_passphrase = 4;
   */
  encryptKeyPassphrase: string;
};

/**
 * Describes the message platform.cryptography.v2alpha.CreateCertificateAuthorityRequest.
 * Use `create(CreateCertificateAuthorityRequestSchema)` to create a new message.
 */
export declare const CreateCertificateAuthorityRequestSchema: GenMessage<CreateCertificateAuthorityRequest>;

/**
 * Response to CreateCertificateAuthority
 *
 * @generated from message platform.cryptography.v2alpha.CreateCertificateAuthorityResponse
 */
export declare type CreateCertificateAuthorityResponse = Message<"platform.cryptography.v2alpha.CreateCertificateAuthorityResponse"> & {
  /**
   * The response context
   *
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;

  /**
   * @generated from field: platform.cryptography.v2alpha.CertificateAuthority certificate_authority = 2;
   */
  certificateAuthority?: CertificateAuthority;
};

/**
 * Describes the message platform.cryptography.v2alpha.CreateCertificateAuthorityResponse.
 * Use `create(CreateCertificateAuthorityResponseSchema)` to create a new message.
 */
export declare const CreateCertificateAuthorityResponseSchema: GenMessage<CreateCertificateAuthorityResponse>;

/**
 * @generated from message platform.cryptography.v2alpha.CertificateAuthority
 */
export declare type CertificateAuthority = Message<"platform.cryptography.v2alpha.CertificateAuthority"> & {
  /**
   * Identifier for this Certificate Authority
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Timestamp indicating when this event subscription was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * Timestamp indicating when this event subscription was last updated.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: platform.cryptography.v2alpha.Curve curve = 5;
   */
  curve: Curve;

  /**
   * @generated from field: google.protobuf.Duration duration = 6;
   */
  duration?: Duration;

  /**
   * @generated from field: platform.type.v2.File ca_cert = 7;
   */
  caCert?: File;

  /**
   * @generated from field: platform.type.v2.File ca_key = 8;
   */
  caKey?: File;

  /**
   * @generated from field: platform.type.v2.File ca_qr_code = 9;
   */
  caQrCode?: File;
};

/**
 * Describes the message platform.cryptography.v2alpha.CertificateAuthority.
 * Use `create(CertificateAuthoritySchema)` to create a new message.
 */
export declare const CertificateAuthoritySchema: GenMessage<CertificateAuthority>;

/**
 * Supported event type for subscription.
 *
 * @generated from enum platform.cryptography.v2alpha.CertificateAuthorityType
 */
export enum CertificateAuthorityType {
  /**
   * Unspecified or unknown subscription type.
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * CertificateAuthority for an organization.
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_TYPE_ORGANIZATION = 1;
   */
  ORGANIZATION = 1,

  /**
   * CertificateAuthority for an ecosystem
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_TYPE_ECOSYSTEM = 2;
   */
  ECOSYSTEM = 2,

  /**
   * CertificateAuthority for a user.
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_TYPE_USER = 3;
   */
  USER = 3,
}

/**
 * Describes the enum platform.cryptography.v2alpha.CertificateAuthorityType.
 */
export declare const CertificateAuthorityTypeSchema: GenEnum<CertificateAuthorityType>;

/**
 * The current status of a event
 *
 * @generated from enum platform.cryptography.v2alpha.EventCertificateAuthorityStatus
 */
export enum EventCertificateAuthorityStatus {
  /**
   * Unspecified or unknown status.
   *
   * @generated from enum value: EVENT_CERTIFICATE_AUTHORITY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * CertificateAuthority is being created.
   *
   * @generated from enum value: EVENT_CERTIFICATE_AUTHORITY_STATUS_CREATING = 1;
   */
  CREATING = 1,

  /**
   * Error.
   *
   * @generated from enum value: EVENT_CERTIFICATE_AUTHORITY_STATUS_ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum platform.cryptography.v2alpha.EventCertificateAuthorityStatus.
 */
export declare const EventCertificateAuthorityStatusSchema: GenEnum<EventCertificateAuthorityStatus>;

/**
 * @generated from enum platform.cryptography.v2alpha.CertificateAuthorityCommands
 */
export enum CertificateAuthorityCommands {
  /**
   * Unspecified or unknown command
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_COMMANDS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CERTIFICATE_AUTHORITY_COMMANDS_CREATE_CERTIFICATE_AUTHORITY = 1;
   */
  CREATE_CERTIFICATE_AUTHORITY = 1,
}

/**
 * Describes the enum platform.cryptography.v2alpha.CertificateAuthorityCommands.
 */
export declare const CertificateAuthorityCommandsSchema: GenEnum<CertificateAuthorityCommands>;

/**
 * @generated from enum platform.cryptography.v2alpha.CertificateAuthorityEvents
 */
export enum CertificateAuthorityEvents {
  /**
   * Unspecified or unknown event.
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_EVENTS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Event CertificateAuthority complete.
   *
   * @generated from enum value: CERTIFICATE_AUTHORITY_EVENTS_CREATED_CERTIFICATE_AUTHORITY = 1;
   */
  CREATED_CERTIFICATE_AUTHORITY = 1,
}

/**
 * Describes the enum platform.cryptography.v2alpha.CertificateAuthorityEvents.
 */
export declare const CertificateAuthorityEventsSchema: GenEnum<CertificateAuthorityEvents>;

/**
 * @generated from enum platform.cryptography.v2alpha.Curve
 */
export enum Curve {
  /**
   * @generated from enum value: CURVE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CURVE_EDDSA = 1;
   */
  EDDSA = 1,

  /**
   * @generated from enum value: CURVE_ECDSA = 2;
   */
  ECDSA = 2,
}

/**
 * Describes the enum platform.cryptography.v2alpha.Curve.
 */
export declare const CurveSchema: GenEnum<Curve>;

/**
 * @generated from service platform.cryptography.v2alpha.CertificateAuthorityService
 */
export declare const CertificateAuthorityService: GenService<{
  /**
   * Method to CreateCertificateAuthority to events based on scopes
   *
   * @generated from rpc platform.cryptography.v2alpha.CertificateAuthorityService.CreateCertificateAuthority
   */
  createCertificateAuthority: {
    methodKind: "unary";
    input: typeof CreateCertificateAuthorityRequestSchema;
    output: typeof CreateCertificateAuthorityResponseSchema;
  },
}>;

