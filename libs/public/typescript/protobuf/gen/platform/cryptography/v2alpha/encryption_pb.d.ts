// @generated by protoc-gen-es v2.2.3
// @generated from file platform/cryptography/v2alpha/encryption.proto (package platform.cryptography.v2alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file platform/cryptography/v2alpha/encryption.proto.
 */
export declare const file_platform_cryptography_v2alpha_encryption: GenFile;

/**
 * @generated from message platform.cryptography.v2alpha.EncryptionConfiguration
 */
export declare type EncryptionConfiguration = Message<"platform.cryptography.v2alpha.EncryptionConfiguration"> & {
};

/**
 * Describes the message platform.cryptography.v2alpha.EncryptionConfiguration.
 * Use `create(EncryptionConfigurationSchema)` to create a new message.
 */
export declare const EncryptionConfigurationSchema: GenMessage<EncryptionConfiguration>;

/**
 * @generated from message platform.cryptography.v2alpha.EncryptionContext
 */
export declare type EncryptionContext = Message<"platform.cryptography.v2alpha.EncryptionContext"> & {
  /**
   * TODO: Revisit these types.
   *
   * @generated from field: string user = 1;
   */
  user: string;

  /**
   * @generated from field: string entity = 2;
   */
  entity: string;

  /**
   * @generated from field: string principal = 3;
   */
  principal: string;

  /**
   * @generated from field: string intent = 4;
   */
  intent: string;
};

/**
 * Describes the message platform.cryptography.v2alpha.EncryptionContext.
 * Use `create(EncryptionContextSchema)` to create a new message.
 */
export declare const EncryptionContextSchema: GenMessage<EncryptionContext>;

/**
 * @generated from message platform.cryptography.v2alpha.CipherText
 */
export declare type CipherText = Message<"platform.cryptography.v2alpha.CipherText"> & {
  /**
   * @generated from field: bytes cipher_text = 1;
   */
  cipherText: Uint8Array;

  /**
   * @generated from field: platform.cryptography.v2alpha.EncryptionContext encryption_context = 2;
   */
  encryptionContext?: EncryptionContext;
};

/**
 * Describes the message platform.cryptography.v2alpha.CipherText.
 * Use `create(CipherTextSchema)` to create a new message.
 */
export declare const CipherTextSchema: GenMessage<CipherText>;

/**
 * @generated from message platform.cryptography.v2alpha.EncryptRequest
 */
export declare type EncryptRequest = Message<"platform.cryptography.v2alpha.EncryptRequest"> & {
  /**
   * @generated from field: bytes plain_text = 1;
   */
  plainText: Uint8Array;

  /**
   * @generated from field: bytes associated_data = 2;
   */
  associatedData: Uint8Array;
};

/**
 * Describes the message platform.cryptography.v2alpha.EncryptRequest.
 * Use `create(EncryptRequestSchema)` to create a new message.
 */
export declare const EncryptRequestSchema: GenMessage<EncryptRequest>;

/**
 * @generated from message platform.cryptography.v2alpha.EncryptResponse
 */
export declare type EncryptResponse = Message<"platform.cryptography.v2alpha.EncryptResponse"> & {
  /**
   * @generated from oneof platform.cryptography.v2alpha.EncryptResponse.result
   */
  result: {
    /**
     * @generated from field: platform.cryptography.v2alpha.CipherText cipher_text = 1;
     */
    value: CipherText;
    case: "cipherText";
  } | {
    /**
     * @generated from field: string err = 2;
     */
    value: string;
    case: "err";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message platform.cryptography.v2alpha.EncryptResponse.
 * Use `create(EncryptResponseSchema)` to create a new message.
 */
export declare const EncryptResponseSchema: GenMessage<EncryptResponse>;

/**
 * @generated from message platform.cryptography.v2alpha.DecryptRequest
 */
export declare type DecryptRequest = Message<"platform.cryptography.v2alpha.DecryptRequest"> & {
  /**
   * @generated from field: platform.cryptography.v2alpha.CipherText cipher_text = 1;
   */
  cipherText?: CipherText;

  /**
   * @generated from field: bytes associated_data = 2;
   */
  associatedData: Uint8Array;
};

/**
 * Describes the message platform.cryptography.v2alpha.DecryptRequest.
 * Use `create(DecryptRequestSchema)` to create a new message.
 */
export declare const DecryptRequestSchema: GenMessage<DecryptRequest>;

/**
 * @generated from message platform.cryptography.v2alpha.DecryptResponse
 */
export declare type DecryptResponse = Message<"platform.cryptography.v2alpha.DecryptResponse"> & {
  /**
   * @generated from oneof platform.cryptography.v2alpha.DecryptResponse.result
   */
  result: {
    /**
     * @generated from field: bytes plain_text = 1;
     */
    value: Uint8Array;
    case: "plainText";
  } | {
    /**
     * @generated from field: string err = 2;
     */
    value: string;
    case: "err";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message platform.cryptography.v2alpha.DecryptResponse.
 * Use `create(DecryptResponseSchema)` to create a new message.
 */
export declare const DecryptResponseSchema: GenMessage<DecryptResponse>;

/**
 * @generated from service platform.cryptography.v2alpha.EncryptionService
 */
export declare const EncryptionService: GenService<{
  /**
   * @generated from rpc platform.cryptography.v2alpha.EncryptionService.Encrypt
   */
  encrypt: {
    methodKind: "unary";
    input: typeof EncryptRequestSchema;
    output: typeof EncryptResponseSchema;
  },
  /**
   * @generated from rpc platform.cryptography.v2alpha.EncryptionService.Decrypt
   */
  decrypt: {
    methodKind: "unary";
    input: typeof DecryptRequestSchema;
    output: typeof DecryptResponseSchema;
  },
}>;

