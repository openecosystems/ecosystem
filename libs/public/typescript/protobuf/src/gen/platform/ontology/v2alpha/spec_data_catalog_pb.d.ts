// Code generated by protoc-gen-platform protobuf/data-catalog. DO NOT EDIT.

// @generated by protoc-gen-es v2.2.3
// @generated from file platform/ontology/v2alpha/spec_data_catalog.proto (package platform.ontology.v2alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { ClassificationType } from "../../options/v2/annotations_pb";

/**
 * Describes the file platform/ontology/v2alpha/spec_data_catalog.proto.
 */
export declare const file_platform_ontology_v2alpha_spec_data_catalog: GenFile;

/**
 * @generated from message platform.ontology.v2alpha.SpecDataCatalog
 */
export declare type SpecDataCatalog = Message<"platform.ontology.v2alpha.SpecDataCatalog"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.Advertisement advertisement = 1;
   */
  advertisement?: Advertisement;

  /**
   * @generated from field: platform.ontology.v2alpha.Audit audit = 2;
   */
  audit?: Audit;

  /**
   * @generated from field: platform.ontology.v2alpha.Cli cli = 3;
   */
  cli?: Cli;

  /**
   * @generated from field: platform.ontology.v2alpha.Communication communication = 4;
   */
  communication?: Communication;

  /**
   * @generated from field: platform.ontology.v2alpha.Configuration configuration = 5;
   */
  configuration?: Configuration;

  /**
   * @generated from field: platform.ontology.v2alpha.Cryptography cryptography = 6;
   */
  cryptography?: Cryptography;

  /**
   * @generated from field: platform.ontology.v2alpha.Dns dns = 7;
   */
  dns?: Dns;

  /**
   * @generated from field: platform.ontology.v2alpha.Ecosystem ecosystem = 8;
   */
  ecosystem?: Ecosystem;

  /**
   * @generated from field: platform.ontology.v2alpha.Edge edge = 9;
   */
  edge?: Edge;

  /**
   * @generated from field: platform.ontology.v2alpha.Iam iam = 10;
   */
  iam?: Iam;

  /**
   * @generated from field: platform.ontology.v2alpha.Mesh mesh = 11;
   */
  mesh?: Mesh;

  /**
   * @generated from field: platform.ontology.v2alpha.Ontology ontology = 12;
   */
  ontology?: Ontology;

  /**
   * @generated from field: platform.ontology.v2alpha.Options options = 13;
   */
  options?: Options;

  /**
   * @generated from field: platform.ontology.v2alpha.Reference reference = 14;
   */
  reference?: Reference;

  /**
   * @generated from field: platform.ontology.v2alpha.Spec spec = 15;
   */
  spec?: Spec;

  /**
   * @generated from field: platform.ontology.v2alpha.System system = 16;
   */
  system?: System;

  /**
   * @generated from field: platform.ontology.v2alpha.Type type = 17;
   */
  type?: Type;
};

/**
 * Describes the message platform.ontology.v2alpha.SpecDataCatalog.
 * Use `create(SpecDataCatalogSchema)` to create a new message.
 */
export declare const SpecDataCatalogSchema: GenMessage<SpecDataCatalog>;

/**
 * @generated from message platform.ontology.v2alpha.Advertisement
 */
export declare type Advertisement = Message<"platform.ontology.v2alpha.Advertisement"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.DecisionV1 decision_v1 = 1;
   */
  decisionV1?: DecisionV1;
};

/**
 * Describes the message platform.ontology.v2alpha.Advertisement.
 * Use `create(AdvertisementSchema)` to create a new message.
 */
export declare const AdvertisementSchema: GenMessage<Advertisement>;

/**
 * @generated from message platform.ontology.v2alpha.Audit
 */
export declare type Audit = Message<"platform.ontology.v2alpha.Audit"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.AuditV2Alpha audit_v2alpha = 2;
   */
  auditV2alpha?: AuditV2Alpha;
};

/**
 * Describes the message platform.ontology.v2alpha.Audit.
 * Use `create(AuditSchema)` to create a new message.
 */
export declare const AuditSchema: GenMessage<Audit>;

/**
 * @generated from message platform.ontology.v2alpha.Cli
 */
export declare type Cli = Message<"platform.ontology.v2alpha.Cli"> & {
};

/**
 * Describes the message platform.ontology.v2alpha.Cli.
 * Use `create(CliSchema)` to create a new message.
 */
export declare const CliSchema: GenMessage<Cli>;

/**
 * @generated from message platform.ontology.v2alpha.Communication
 */
export declare type Communication = Message<"platform.ontology.v2alpha.Communication"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.PreferenceCenterV1Beta preference_center_v1beta = 3;
   */
  preferenceCenterV1beta?: PreferenceCenterV1Beta;

  /**
   * @generated from field: platform.ontology.v2alpha.PreferenceCenterV1Alpha preference_center_v1alpha = 4;
   */
  preferenceCenterV1alpha?: PreferenceCenterV1Alpha;
};

/**
 * Describes the message platform.ontology.v2alpha.Communication.
 * Use `create(CommunicationSchema)` to create a new message.
 */
export declare const CommunicationSchema: GenMessage<Communication>;

/**
 * @generated from message platform.ontology.v2alpha.Configuration
 */
export declare type Configuration = Message<"platform.ontology.v2alpha.Configuration"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.ConfigurationV2Alpha configuration_v2alpha = 5;
   */
  configurationV2alpha?: ConfigurationV2Alpha;
};

/**
 * Describes the message platform.ontology.v2alpha.Configuration.
 * Use `create(ConfigurationSchema)` to create a new message.
 */
export declare const ConfigurationSchema: GenMessage<Configuration>;

/**
 * @generated from message platform.ontology.v2alpha.Cryptography
 */
export declare type Cryptography = Message<"platform.ontology.v2alpha.Cryptography"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.CertificateV2Alpha certificate_v2alpha = 6;
   */
  certificateV2alpha?: CertificateV2Alpha;
};

/**
 * Describes the message platform.ontology.v2alpha.Cryptography.
 * Use `create(CryptographySchema)` to create a new message.
 */
export declare const CryptographySchema: GenMessage<Cryptography>;

/**
 * @generated from message platform.ontology.v2alpha.Dns
 */
export declare type Dns = Message<"platform.ontology.v2alpha.Dns"> & {
};

/**
 * Describes the message platform.ontology.v2alpha.Dns.
 * Use `create(DnsSchema)` to create a new message.
 */
export declare const DnsSchema: GenMessage<Dns>;

/**
 * @generated from message platform.ontology.v2alpha.Ecosystem
 */
export declare type Ecosystem = Message<"platform.ontology.v2alpha.Ecosystem"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.EcosystemV2Alpha ecosystem_v2alpha = 7;
   */
  ecosystemV2alpha?: EcosystemV2Alpha;
};

/**
 * Describes the message platform.ontology.v2alpha.Ecosystem.
 * Use `create(EcosystemSchema)` to create a new message.
 */
export declare const EcosystemSchema: GenMessage<Ecosystem>;

/**
 * @generated from message platform.ontology.v2alpha.Edge
 */
export declare type Edge = Message<"platform.ontology.v2alpha.Edge"> & {
};

/**
 * Describes the message platform.ontology.v2alpha.Edge.
 * Use `create(EdgeSchema)` to create a new message.
 */
export declare const EdgeSchema: GenMessage<Edge>;

/**
 * @generated from message platform.ontology.v2alpha.Iam
 */
export declare type Iam = Message<"platform.ontology.v2alpha.Iam"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.AccountV2Alpha account_v2alpha = 8;
   */
  accountV2alpha?: AccountV2Alpha;

  /**
   * @generated from field: platform.ontology.v2alpha.AccountAuthorityV2Alpha account_authority_v2alpha = 9;
   */
  accountAuthorityV2alpha?: AccountAuthorityV2Alpha;
};

/**
 * Describes the message platform.ontology.v2alpha.Iam.
 * Use `create(IamSchema)` to create a new message.
 */
export declare const IamSchema: GenMessage<Iam>;

/**
 * @generated from message platform.ontology.v2alpha.Mesh
 */
export declare type Mesh = Message<"platform.ontology.v2alpha.Mesh"> & {
};

/**
 * Describes the message platform.ontology.v2alpha.Mesh.
 * Use `create(MeshSchema)` to create a new message.
 */
export declare const MeshSchema: GenMessage<Mesh>;

/**
 * @generated from message platform.ontology.v2alpha.Ontology
 */
export declare type Ontology = Message<"platform.ontology.v2alpha.Ontology"> & {
};

/**
 * Describes the message platform.ontology.v2alpha.Ontology.
 * Use `create(OntologySchema)` to create a new message.
 */
export declare const OntologySchema: GenMessage<Ontology>;

/**
 * @generated from message platform.ontology.v2alpha.Options
 */
export declare type Options = Message<"platform.ontology.v2alpha.Options"> & {
};

/**
 * Describes the message platform.ontology.v2alpha.Options.
 * Use `create(OptionsSchema)` to create a new message.
 */
export declare const OptionsSchema: GenMessage<Options>;

/**
 * @generated from message platform.ontology.v2alpha.Reference
 */
export declare type Reference = Message<"platform.ontology.v2alpha.Reference"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.ReferenceV2Alpha reference_v2alpha = 10;
   */
  referenceV2alpha?: ReferenceV2Alpha;
};

/**
 * Describes the message platform.ontology.v2alpha.Reference.
 * Use `create(ReferenceSchema)` to create a new message.
 */
export declare const ReferenceSchema: GenMessage<Reference>;

/**
 * @generated from message platform.ontology.v2alpha.Spec
 */
export declare type Spec = Message<"platform.ontology.v2alpha.Spec"> & {
};

/**
 * Describes the message platform.ontology.v2alpha.Spec.
 * Use `create(SpecSchema)` to create a new message.
 */
export declare const SpecSchema: GenMessage<Spec>;

/**
 * @generated from message platform.ontology.v2alpha.System
 */
export declare type System = Message<"platform.ontology.v2alpha.System"> & {
  /**
   * @generated from field: platform.ontology.v2alpha.SystemV2Alpha system_v2alpha = 11;
   */
  systemV2alpha?: SystemV2Alpha;
};

/**
 * Describes the message platform.ontology.v2alpha.System.
 * Use `create(SystemSchema)` to create a new message.
 */
export declare const SystemSchema: GenMessage<System>;

/**
 * @generated from message platform.ontology.v2alpha.Type
 */
export declare type Type = Message<"platform.ontology.v2alpha.Type"> & {
};

/**
 * Describes the message platform.ontology.v2alpha.Type.
 * Use `create(TypeSchema)` to create a new message.
 */
export declare const TypeSchema: GenMessage<Type>;

/**
 * @generated from message platform.ontology.v2alpha.DecisionV1
 */
export declare type DecisionV1 = Message<"platform.ontology.v2alpha.DecisionV1"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType ad_id = 1;
   */
  adId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType advertiser_id = 2;
   */
  advertiserId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType creative_id = 3;
   */
  creativeId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType flight_id = 4;
   */
  flightId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType campaign_id = 5;
   */
  campaignId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType priority_id = 6;
   */
  priorityId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType click_url = 7;
   */
  clickUrl: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType contents = 8;
   */
  contents: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType impression_url = 9;
   */
  impressionUrl: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType events = 10;
   */
  events: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType matched_points = 11;
   */
  matchedPoints: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType pricing = 12;
   */
  pricing: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.DecisionV1.
 * Use `create(DecisionV1Schema)` to create a new message.
 */
export declare const DecisionV1Schema: GenMessage<DecisionV1>;

/**
 * @generated from message platform.ontology.v2alpha.AuditV2Alpha
 */
export declare type AuditV2Alpha = Message<"platform.ontology.v2alpha.AuditV2Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 2;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 3;
   */
  updatedAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType entry = 4;
   */
  entry: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType jurisdiction = 5;
   */
  jurisdiction: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.AuditV2Alpha.
 * Use `create(AuditV2AlphaSchema)` to create a new message.
 */
export declare const AuditV2AlphaSchema: GenMessage<AuditV2Alpha>;

/**
 * @generated from message platform.ontology.v2alpha.ConfigurationV2Alpha
 */
export declare type ConfigurationV2Alpha = Message<"platform.ontology.v2alpha.ConfigurationV2Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType organization_slug = 2;
   */
  organizationSlug: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType workspace_slug = 3;
   */
  workspaceSlug: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 4;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 5;
   */
  updatedAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType source_id = 6;
   */
  sourceId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType type = 7;
   */
  type: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType status = 8;
   */
  status: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType status_details = 9;
   */
  statusDetails: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType parent_id = 10;
   */
  parentId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType data_catalog = 13;
   */
  dataCatalog: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType clinical_catalog = 14;
   */
  clinicalCatalog: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType platform_configuration = 15;
   */
  platformConfiguration: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType platform_configurations = 16;
   */
  platformConfigurations: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType solution_configurations = 17;
   */
  solutionConfigurations: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType connector_configurations = 18;
   */
  connectorConfigurations: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.ConfigurationV2Alpha.
 * Use `create(ConfigurationV2AlphaSchema)` to create a new message.
 */
export declare const ConfigurationV2AlphaSchema: GenMessage<ConfigurationV2Alpha>;

/**
 * @generated from message platform.ontology.v2alpha.CertificateV2Alpha
 */
export declare type CertificateV2Alpha = Message<"platform.ontology.v2alpha.CertificateV2Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 2;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 3;
   */
  updatedAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType name = 4;
   */
  name: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType duration = 6;
   */
  duration: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType certificate = 7;
   */
  certificate: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.CertificateV2Alpha.
 * Use `create(CertificateV2AlphaSchema)` to create a new message.
 */
export declare const CertificateV2AlphaSchema: GenMessage<CertificateV2Alpha>;

/**
 * @generated from message platform.ontology.v2alpha.EcosystemV2Alpha
 */
export declare type EcosystemV2Alpha = Message<"platform.ontology.v2alpha.EcosystemV2Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType slug = 2;
   */
  slug: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 3;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 4;
   */
  updatedAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType source_id = 5;
   */
  sourceId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType type = 6;
   */
  type: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType status = 7;
   */
  status: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType status_details = 8;
   */
  statusDetails: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType name = 9;
   */
  name: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType short_description = 10;
   */
  shortDescription: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType description = 11;
   */
  description: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType cidr = 12;
   */
  cidr: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.EcosystemV2Alpha.
 * Use `create(EcosystemV2AlphaSchema)` to create a new message.
 */
export declare const EcosystemV2AlphaSchema: GenMessage<EcosystemV2Alpha>;

/**
 * @generated from message platform.ontology.v2alpha.AccountV2Alpha
 */
export declare type AccountV2Alpha = Message<"platform.ontology.v2alpha.AccountV2Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 2;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 3;
   */
  updatedAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType credential = 4;
   */
  credential: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.AccountV2Alpha.
 * Use `create(AccountV2AlphaSchema)` to create a new message.
 */
export declare const AccountV2AlphaSchema: GenMessage<AccountV2Alpha>;

/**
 * @generated from message platform.ontology.v2alpha.AccountAuthorityV2Alpha
 */
export declare type AccountAuthorityV2Alpha = Message<"platform.ontology.v2alpha.AccountAuthorityV2Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 2;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 3;
   */
  updatedAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType credential = 4;
   */
  credential: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.AccountAuthorityV2Alpha.
 * Use `create(AccountAuthorityV2AlphaSchema)` to create a new message.
 */
export declare const AccountAuthorityV2AlphaSchema: GenMessage<AccountAuthorityV2Alpha>;

/**
 * @generated from message platform.ontology.v2alpha.ReferenceV2Alpha
 */
export declare type ReferenceV2Alpha = Message<"platform.ontology.v2alpha.ReferenceV2Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 2;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 3;
   */
  updatedAt: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.ReferenceV2Alpha.
 * Use `create(ReferenceV2AlphaSchema)` to create a new message.
 */
export declare const ReferenceV2AlphaSchema: GenMessage<ReferenceV2Alpha>;

/**
 * @generated from message platform.ontology.v2alpha.SystemV2Alpha
 */
export declare type SystemV2Alpha = Message<"platform.ontology.v2alpha.SystemV2Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType enabled_at = 2;
   */
  enabledAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 3;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 4;
   */
  updatedAt: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.SystemV2Alpha.
 * Use `create(SystemV2AlphaSchema)` to create a new message.
 */
export declare const SystemV2AlphaSchema: GenMessage<SystemV2Alpha>;

/**
 * @generated from message platform.ontology.v2alpha.PreferenceCenterV1Beta
 */
export declare type PreferenceCenterV1Beta = Message<"platform.ontology.v2alpha.PreferenceCenterV1Beta"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 2;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 3;
   */
  updatedAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType anonymous_id = 4;
   */
  anonymousId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType email = 5;
   */
  email: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType external_id = 6;
   */
  externalId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType phone_number = 7;
   */
  phoneNumber: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType first_name = 8;
   */
  firstName: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType last_name = 9;
   */
  lastName: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType postal_code = 10;
   */
  postalCode: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType city = 11;
   */
  city: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType state_province_region = 12;
   */
  stateProvinceRegion: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType country = 13;
   */
  country: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType list_ids = 14;
   */
  listIds: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType segment_ids = 15;
   */
  segmentIds: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType email_subscription = 16;
   */
  emailSubscription: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.PreferenceCenterV1Beta.
 * Use `create(PreferenceCenterV1BetaSchema)` to create a new message.
 */
export declare const PreferenceCenterV1BetaSchema: GenMessage<PreferenceCenterV1Beta>;

/**
 * @generated from message platform.ontology.v2alpha.PreferenceCenterV1Alpha
 */
export declare type PreferenceCenterV1Alpha = Message<"platform.ontology.v2alpha.PreferenceCenterV1Alpha"> & {
  /**
   * @generated from field: platform.options.v2.ClassificationType id = 1;
   */
  id: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType created_at = 2;
   */
  createdAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType updated_at = 3;
   */
  updatedAt: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType anonymous_id = 4;
   */
  anonymousId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType email = 5;
   */
  email: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType external_id = 6;
   */
  externalId: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType phone_number = 7;
   */
  phoneNumber: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType first_name = 8;
   */
  firstName: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType last_name = 9;
   */
  lastName: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType postal_code = 10;
   */
  postalCode: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType city = 11;
   */
  city: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType state_province_region = 12;
   */
  stateProvinceRegion: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType country = 13;
   */
  country: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType list_ids = 14;
   */
  listIds: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType segment_ids = 15;
   */
  segmentIds: ClassificationType;

  /**
   * @generated from field: platform.options.v2.ClassificationType email_subscription = 16;
   */
  emailSubscription: ClassificationType;
};

/**
 * Describes the message platform.ontology.v2alpha.PreferenceCenterV1Alpha.
 * Use `create(PreferenceCenterV1AlphaSchema)` to create a new message.
 */
export declare const PreferenceCenterV1AlphaSchema: GenMessage<PreferenceCenterV1Alpha>;

