// @generated by protoc-gen-es v2.2.3
// @generated from file platform/iam/v2alpha/account.proto (package platform.iam.v2alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Curve } from "./account_authority_pb";
import type { File } from "../../type/v2/file_pb";
import type { SpecResponseContext } from "../../spec/v2/spec_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file platform/iam/v2alpha/account.proto.
 */
export declare const file_platform_iam_v2alpha_account: GenFile;

/**
 * @generated from message platform.iam.v2alpha.AccountConfiguration
 */
export declare type AccountConfiguration = Message<"platform.iam.v2alpha.AccountConfiguration"> & {
};

/**
 * Describes the message platform.iam.v2alpha.AccountConfiguration.
 * Use `create(AccountConfigurationSchema)` to create a new message.
 */
export declare const AccountConfigurationSchema: GenMessage<AccountConfiguration>;

/**
 * Request for CreateAccount
 *
 * @generated from message platform.iam.v2alpha.CreateAccountRequest
 */
export declare type CreateAccountRequest = Message<"platform.iam.v2alpha.CreateAccountRequest"> & {
  /**
   * Name of the Account. For example, 'Open Ecosystems, Inc.'
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: platform.iam.v2alpha.Curve curve = 2;
   */
  curve: Curve;

  /**
   * @generated from field: platform.type.v2.File cert = 3;
   */
  cert?: File;
};

/**
 * Describes the message platform.iam.v2alpha.CreateAccountRequest.
 * Use `create(CreateAccountRequestSchema)` to create a new message.
 */
export declare const CreateAccountRequestSchema: GenMessage<CreateAccountRequest>;

/**
 * Response to CreateAccount
 *
 * @generated from message platform.iam.v2alpha.CreateAccountResponse
 */
export declare type CreateAccountResponse = Message<"platform.iam.v2alpha.CreateAccountResponse"> & {
  /**
   * The response context
   *
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;

  /**
   * @generated from field: platform.iam.v2alpha.Account account = 2;
   */
  account?: Account;
};

/**
 * Describes the message platform.iam.v2alpha.CreateAccountResponse.
 * Use `create(CreateAccountResponseSchema)` to create a new message.
 */
export declare const CreateAccountResponseSchema: GenMessage<CreateAccountResponse>;

/**
 * @generated from message platform.iam.v2alpha.Account
 */
export declare type Account = Message<"platform.iam.v2alpha.Account"> & {
  /**
   * Identifier for this Account
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Timestamp indicating when this event subscription was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * Timestamp indicating when this event subscription was last updated.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string hostname = 5;
   */
  hostname: string;

  /**
   * @generated from field: string ip = 6;
   */
  ip: string;

  /**
   * @generated from field: google.protobuf.Duration duration = 7;
   */
  duration?: Duration;

  /**
   * @generated from field: platform.type.v2.File ca_cert = 8;
   */
  caCert?: File;

  /**
   * @generated from field: platform.type.v2.File signed_cert = 9;
   */
  signedCert?: File;
};

/**
 * Describes the message platform.iam.v2alpha.Account.
 * Use `create(AccountSchema)` to create a new message.
 */
export declare const AccountSchema: GenMessage<Account>;

/**
 * Supported event type for subscription.
 *
 * @generated from enum platform.iam.v2alpha.AccountType
 */
export enum AccountType {
  /**
   * Unspecified or unknown subscription type.
   *
   * @generated from enum value: ACCOUNT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Account for an organization.
   *
   * @generated from enum value: ACCOUNT_TYPE_ORGANIZATION = 1;
   */
  ORGANIZATION = 1,

  /**
   * Account for a user.
   *
   * @generated from enum value: ACCOUNT_TYPE_USER = 2;
   */
  USER = 2,
}

/**
 * Describes the enum platform.iam.v2alpha.AccountType.
 */
export declare const AccountTypeSchema: GenEnum<AccountType>;

/**
 * The current status of a event
 *
 * @generated from enum platform.iam.v2alpha.EventAccountStatus
 */
export enum EventAccountStatus {
  /**
   * Unspecified or unknown status.
   *
   * @generated from enum value: EVENT_ACCOUNT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Account is being created.
   *
   * @generated from enum value: EVENT_ACCOUNT_STATUS_CREATING = 1;
   */
  CREATING = 1,

  /**
   * Error.
   *
   * @generated from enum value: EVENT_ACCOUNT_STATUS_ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum platform.iam.v2alpha.EventAccountStatus.
 */
export declare const EventAccountStatusSchema: GenEnum<EventAccountStatus>;

/**
 * @generated from enum platform.iam.v2alpha.AccountCommands
 */
export enum AccountCommands {
  /**
   * Unspecified or unknown command
   *
   * @generated from enum value: ACCOUNT_COMMANDS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACCOUNT_COMMANDS_CREATE_ACCOUNT = 1;
   */
  CREATE_ACCOUNT = 1,
}

/**
 * Describes the enum platform.iam.v2alpha.AccountCommands.
 */
export declare const AccountCommandsSchema: GenEnum<AccountCommands>;

/**
 * @generated from enum platform.iam.v2alpha.AccountEvents
 */
export enum AccountEvents {
  /**
   * Unspecified or unknown event.
   *
   * @generated from enum value: ACCOUNT_EVENTS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Event Account complete.
   *
   * @generated from enum value: ACCOUNT_EVENTS_CREATED_ACCOUNT = 1;
   */
  CREATED_ACCOUNT = 1,
}

/**
 * Describes the enum platform.iam.v2alpha.AccountEvents.
 */
export declare const AccountEventsSchema: GenEnum<AccountEvents>;

/**
 * @generated from service platform.iam.v2alpha.AccountService
 */
export declare const AccountService: GenService<{
  /**
   * Create an Account to connect to an ecosystem
   *
   * @generated from rpc platform.iam.v2alpha.AccountService.CreateAccount
   */
  createAccount: {
    methodKind: "unary";
    input: typeof CreateAccountRequestSchema;
    output: typeof CreateAccountResponseSchema;
  },
}>;

