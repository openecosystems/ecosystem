// @generated by protoc-gen-es v2.2.3
// @generated from file platform/ecosystem/v2alpha/ecosystem.proto (package platform.ecosystem.v2alpha, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_platform_options_v2_annotations } from "../../options/v2/annotations_pb";
import { file_platform_spec_v2_spec } from "../../spec/v2/spec_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";

/**
 * Describes the file platform/ecosystem/v2alpha/ecosystem.proto.
 */
export const file_platform_ecosystem_v2alpha_ecosystem = /*@__PURE__*/
  fileDesc("CipwbGF0Zm9ybS9lY29zeXN0ZW0vdjJhbHBoYS9lY29zeXN0ZW0ucHJvdG8SGnBsYXRmb3JtLmVjb3N5c3RlbS52MmFscGhhIloKFkVjb3N5c3RlbUNvbmZpZ3VyYXRpb24SQAoGY2xvc2VkGAEgASgIQjDStxgsCioaJklzIHRoaXMgZWNvc3lzdGVtIG9wZW4gdG8gY29ubmVjdGlvbnM/KAEihwMKFkNyZWF0ZUVjb3N5c3RlbVJlcXVlc3QSkAEKBHNsdWcYASABKAlCgQG6SH66AXsKC3NsdWdfZm9ybWF0EkdzbHVnIG11c3QgYmUgMyAtIDI0IGNoYXJhY3RlcnMgbG9uZyBhbmQgb25seSBjb250YWluIGxldHRlcnMgYW5kIGRpZ2l0cxojdGhpcy5tYXRjaGVzKCdeW0EtWmEtejAtOV17MywyNH0kJykSNwoEdHlwZRgDIAEoDjIpLnBsYXRmb3JtLmVjb3N5c3RlbS52MmFscGhhLkVjb3N5c3RlbVR5cGUSFwoEbmFtZRgEIAEoCUIJukgGcgQQAxgQEiUKEXNob3J0X2Rlc2NyaXB0aW9uGAUgASgJQgq6SAdyBRAFGP8BEh8KC2Rlc2NyaXB0aW9uGAYgASgJQgq6SAdyBRAFGIAIEjgKBGNpZHIYByABKAlCKrpIJ7oBJAoMdmFsaWRfcHJlZml4EgEuGhF0aGlzLmlzSXBQcmVmaXgoKToG+rYYAggBIpgBChdDcmVhdGVFY29zeXN0ZW1SZXNwb25zZRI7CgxzcGVjX2NvbnRleHQYASABKAsyJS5wbGF0Zm9ybS5zcGVjLnYyLlNwZWNSZXNwb25zZUNvbnRleHQSOAoJZWNvc3lzdGVtGAIgASgLMiUucGxhdGZvcm0uZWNvc3lzdGVtLnYyYWxwaGEuRWNvc3lzdGVtOgb6thgCCAIisAEKE0dldEVjb3N5c3RlbVJlcXVlc3QSkAEKBHNsdWcYASABKAlCgQG6SH66AXsKC3NsdWdfZm9ybWF0EkdzbHVnIG11c3QgYmUgMyAtIDI0IGNoYXJhY3RlcnMgbG9uZyBhbmQgb25seSBjb250YWluIGxldHRlcnMgYW5kIGRpZ2l0cxojdGhpcy5tYXRjaGVzKCdeW0EtWmEtejAtOV17MywyNH0kJyk6Bvq2GAIIASKVAQoUR2V0RWNvc3lzdGVtUmVzcG9uc2USOwoMc3BlY19jb250ZXh0GAEgASgLMiUucGxhdGZvcm0uc3BlYy52Mi5TcGVjUmVzcG9uc2VDb250ZXh0EjgKCWVjb3N5c3RlbRgCIAEoCzIlLnBsYXRmb3JtLmVjb3N5c3RlbS52MmFscGhhLkVjb3N5c3RlbToG+rYYAggCIlEKFUxpc3RFY29zeXN0ZW1zUmVxdWVzdBIcCglwYWdlX3NpemUYASABKA1CCbpIBioEGAogABISCgpwYWdlX3Rva2VuGAIgASgJOgb6thgCCAEixQEKFkxpc3RFY29zeXN0ZW1zUmVzcG9uc2USOwoMc3BlY19jb250ZXh0GAEgASgLMiUucGxhdGZvcm0uc3BlYy52Mi5TcGVjUmVzcG9uc2VDb250ZXh0EhIKCnRvdGFsX3NpemUYAiABKAUSFwoPbmV4dF9wYWdlX3Rva2VuGAMgASgJEjkKCmVjb3N5c3RlbXMYBCADKAsyJS5wbGF0Zm9ybS5lY29zeXN0ZW0udjJhbHBoYS5FY29zeXN0ZW06Bvq2GAIIAiIqChBFY29zeXN0ZW1zRmlsdGVyEg4KBmZpbHRlchgBIAEoCToG+rYYAggBIpQCChZVcGRhdGVFY29zeXN0ZW1SZXF1ZXN0EpABCgRzbHVnGAEgASgJQoEBukh+ugF7CgtzbHVnX2Zvcm1hdBJHc2x1ZyBtdXN0IGJlIDMgLSAyNCBjaGFyYWN0ZXJzIGxvbmcgYW5kIG9ubHkgY29udGFpbiBsZXR0ZXJzIGFuZCBkaWdpdHMaI3RoaXMubWF0Y2hlcygnXltBLVphLXowLTldezMsMjR9JCcpEhcKBG5hbWUYBCABKAlCCbpIBnIEEAMYEBIlChFzaG9ydF9kZXNjcmlwdGlvbhgFIAEoCUIKukgHcgUQBRj/ARIfCgtkZXNjcmlwdGlvbhgGIAEoCUIKukgHcgUQBRiACDoG+rYYAggBIpgBChdVcGRhdGVFY29zeXN0ZW1SZXNwb25zZRI7CgxzcGVjX2NvbnRleHQYASABKAsyJS5wbGF0Zm9ybS5zcGVjLnYyLlNwZWNSZXNwb25zZUNvbnRleHQSOAoJZWNvc3lzdGVtGAIgASgLMiUucGxhdGZvcm0uZWNvc3lzdGVtLnYyYWxwaGEuRWNvc3lzdGVtOgb6thgCCAIiswEKFkRlbGV0ZUVjb3N5c3RlbVJlcXVlc3QSkAEKBHNsdWcYASABKAlCgQG6SH66AXsKC3NsdWdfZm9ybWF0EkdzbHVnIG11c3QgYmUgMyAtIDI0IGNoYXJhY3RlcnMgbG9uZyBhbmQgb25seSBjb250YWluIGxldHRlcnMgYW5kIGRpZ2l0cxojdGhpcy5tYXRjaGVzKCdeW0EtWmEtejAtOV17MywyNH0kJyk6Bvq2GAIIASKYAQoXRGVsZXRlRWNvc3lzdGVtUmVzcG9uc2USOwoMc3BlY19jb250ZXh0GAEgASgLMiUucGxhdGZvcm0uc3BlYy52Mi5TcGVjUmVzcG9uc2VDb250ZXh0EjgKCWVjb3N5c3RlbRgCIAEoCzIlLnBsYXRmb3JtLmVjb3N5c3RlbS52MmFscGhhLkVjb3N5c3RlbToG+rYYAggCIoIDCglFY29zeXN0ZW0SCgoCaWQYASABKAkSFAoEc2x1ZxgCIAEoCUIGyrcYAggBEi4KCmNyZWF0ZWRfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhEKCXNvdXJjZV9pZBgFIAEoCRI3CgR0eXBlGAYgASgOMikucGxhdGZvcm0uZWNvc3lzdGVtLnYyYWxwaGEuRWNvc3lzdGVtVHlwZRI7CgZzdGF0dXMYByABKA4yKy5wbGF0Zm9ybS5lY29zeXN0ZW0udjJhbHBoYS5FY29zeXN0ZW1TdGF0dXMSFgoOc3RhdHVzX2RldGFpbHMYCCABKAkSDAoEbmFtZRgJIAEoCRIZChFzaG9ydF9kZXNjcmlwdGlvbhgKIAEoCRITCgtkZXNjcmlwdGlvbhgLIAEoCRIMCgRjaWRyGAwgASgJOgb6thgCCAIqggEKDUVjb3N5c3RlbVR5cGUSHgoaRUNPU1lTVEVNX1RZUEVfVU5TUEVDSUZJRUQQABIZChVFQ09TWVNURU1fVFlQRV9QVUJMSUMQARIaChZFQ09TWVNURU1fVFlQRV9QUklWQVRFEAISGgoWRUNPU1lTVEVNX1RZUEVfUEFUSUVOVBADKugBCg9FY29zeXN0ZW1TdGF0dXMSIAocRUNPU1lTVEVNX1NUQVRVU19VTlNQRUNJRklFRBAAEh0KGUVDT1NZU1RFTV9TVEFUVVNfQ1JFQVRJTkcQARIbChdFQ09TWVNURU1fU1RBVFVTX0FDVElWRRACEh0KGUVDT1NZU1RFTV9TVEFUVVNfSU5BQ1RJVkUQAxIdChlFQ09TWVNURU1fU1RBVFVTX1VQREFUSU5HEAQSHQoZRUNPU1lTVEVNX1NUQVRVU19ERUxFVElORxAFEhoKFkVDT1NZU1RFTV9TVEFUVVNfRVJST1IQBirYAQoWRWNvc3lzdGVtQmlsbGluZ1N0YXR1cxIoCiRFQ09TWVNURU1fQklMTElOR19TVEFUVVNfVU5TUEVDSUZJRUQQABIjCh9FQ09TWVNURU1fQklMTElOR19TVEFUVVNfQUNUSVZFEAESJQohRUNPU1lTVEVNX0JJTExJTkdfU1RBVFVTX0lOQUNUSVZFEAISJAogRUNPU1lTVEVNX0JJTExJTkdfU1RBVFVTX1dBUk5JTkcQAxIiCh5FQ09TWVNURU1fQklMTElOR19TVEFUVVNfRVJST1IQBCqcAQoRRWNvc3lzdGVtQ29tbWFuZHMSIgoeRUNPU1lTVEVNX0NPTU1BTkRTX1VOU1BFQ0lGSUVEEAASHQoZRUNPU1lTVEVNX0NPTU1BTkRTX0NSRUFURRABEh0KGUVDT1NZU1RFTV9DT01NQU5EU19VUERBVEUQAhIdChlFQ09TWVNURU1fQ09NTUFORFNfREVMRVRFEAMaBpK4GAIIAyq7AQoPRWNvc3lzdGVtRXZlbnRzEiAKHEVDT1NZU1RFTV9FVkVOVFNfVU5TUEVDSUZJRUQQABIkChhFQ09TWVNURU1fRVZFTlRTX0NSRUFURUQQARoG4rgYAggBEhwKGEVDT1NZU1RFTV9FVkVOVFNfVVBEQVRFRBACEhwKGEVDT1NZU1RFTV9FVkVOVFNfREVMRVRFRBADEhwKGEVDT1NZU1RFTV9FVkVOVFNfRVJST1JFRBAEGgaSuBgCCAQy/QYKEEVjb3N5c3RlbVNlcnZpY2USqwEKD0NyZWF0ZUVjb3N5c3RlbRIyLnBsYXRmb3JtLmVjb3N5c3RlbS52MmFscGhhLkNyZWF0ZUVjb3N5c3RlbVJlcXVlc3QaMy5wbGF0Zm9ybS5lY29zeXN0ZW0udjJhbHBoYS5DcmVhdGVFY29zeXN0ZW1SZXNwb25zZSIvorYYCCoGY3JlYXRlqrYYAggCgtPkkwIXOgEqIhIvdjJhbHBoYS9lY29zeXN0ZW0SowEKDkxpc3RFY29zeXN0ZW1zEjEucGxhdGZvcm0uZWNvc3lzdGVtLnYyYWxwaGEuTGlzdEVjb3N5c3RlbXNSZXF1ZXN0GjIucGxhdGZvcm0uZWNvc3lzdGVtLnYyYWxwaGEuTGlzdEVjb3N5c3RlbXNSZXNwb25zZSIqorYYBioEbGlzdKq2GAIICILT5JMCFBISL3YyYWxwaGEvZWNvc3lzdGVtEqMBCgxHZXRFY29zeXN0ZW0SLy5wbGF0Zm9ybS5lY29zeXN0ZW0udjJhbHBoYS5HZXRFY29zeXN0ZW1SZXF1ZXN0GjAucGxhdGZvcm0uZWNvc3lzdGVtLnYyYWxwaGEuR2V0RWNvc3lzdGVtUmVzcG9uc2UiMKK2GAUqA2dldKq2GAIICoLT5JMCGxIZL3YyYWxwaGEvZWNvc3lzdGVtL3tzbHVnfRKyAQoPVXBkYXRlRWNvc3lzdGVtEjIucGxhdGZvcm0uZWNvc3lzdGVtLnYyYWxwaGEuVXBkYXRlRWNvc3lzdGVtUmVxdWVzdBozLnBsYXRmb3JtLmVjb3N5c3RlbS52MmFscGhhLlVwZGF0ZUVjb3N5c3RlbVJlc3BvbnNlIjaithgIKgZ1cGRhdGWqthgCCAOC0+STAh46ASoaGS92MmFscGhhL2Vjb3N5c3RlbS97c2x1Z30SrwEKD0RlbGV0ZUVjb3N5c3RlbRIyLnBsYXRmb3JtLmVjb3N5c3RlbS52MmFscGhhLkRlbGV0ZUVjb3N5c3RlbVJlcXVlc3QaMy5wbGF0Zm9ybS5lY29zeXN0ZW0udjJhbHBoYS5EZWxldGVFY29zeXN0ZW1SZXNwb25zZSIzorYYCCoGZGVsZXRlqrYYAggEgtPkkwIbKhkvdjJhbHBoYS9lY29zeXN0ZW0ve3NsdWd9GgjStRgECAMQAUKQAVpJbGlicy9wdWJsaWMvZ28vcHJvdG9idWYvZ2VuL3BsYXRmb3JtL2Vjb3N5c3RlbS92MmFscGhhO2Vjb3N5c3RlbXYyYWxwaGFwYoLEEwIIA4K1GAYIAxABGAKKtRggCgllY29zeXN0ZW0SCmVjb3N5c3RlbXMiA2phbigCOAGStRgDCgEDmrUYAKK1GAIIAWIGcHJvdG8z", [file_platform_options_v2_annotations, file_platform_spec_v2_spec, file_google_api_annotations, file_google_protobuf_timestamp, file_buf_validate_validate]);

/**
 * Describes the message platform.ecosystem.v2alpha.EcosystemConfiguration.
 * Use `create(EcosystemConfigurationSchema)` to create a new message.
 */
export const EcosystemConfigurationSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 0);

/**
 * Describes the message platform.ecosystem.v2alpha.CreateEcosystemRequest.
 * Use `create(CreateEcosystemRequestSchema)` to create a new message.
 */
export const CreateEcosystemRequestSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 1);

/**
 * Describes the message platform.ecosystem.v2alpha.CreateEcosystemResponse.
 * Use `create(CreateEcosystemResponseSchema)` to create a new message.
 */
export const CreateEcosystemResponseSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 2);

/**
 * Describes the message platform.ecosystem.v2alpha.GetEcosystemRequest.
 * Use `create(GetEcosystemRequestSchema)` to create a new message.
 */
export const GetEcosystemRequestSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 3);

/**
 * Describes the message platform.ecosystem.v2alpha.GetEcosystemResponse.
 * Use `create(GetEcosystemResponseSchema)` to create a new message.
 */
export const GetEcosystemResponseSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 4);

/**
 * Describes the message platform.ecosystem.v2alpha.ListEcosystemsRequest.
 * Use `create(ListEcosystemsRequestSchema)` to create a new message.
 */
export const ListEcosystemsRequestSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 5);

/**
 * Describes the message platform.ecosystem.v2alpha.ListEcosystemsResponse.
 * Use `create(ListEcosystemsResponseSchema)` to create a new message.
 */
export const ListEcosystemsResponseSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 6);

/**
 * Describes the message platform.ecosystem.v2alpha.EcosystemsFilter.
 * Use `create(EcosystemsFilterSchema)` to create a new message.
 */
export const EcosystemsFilterSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 7);

/**
 * Describes the message platform.ecosystem.v2alpha.UpdateEcosystemRequest.
 * Use `create(UpdateEcosystemRequestSchema)` to create a new message.
 */
export const UpdateEcosystemRequestSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 8);

/**
 * Describes the message platform.ecosystem.v2alpha.UpdateEcosystemResponse.
 * Use `create(UpdateEcosystemResponseSchema)` to create a new message.
 */
export const UpdateEcosystemResponseSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 9);

/**
 * Describes the message platform.ecosystem.v2alpha.DeleteEcosystemRequest.
 * Use `create(DeleteEcosystemRequestSchema)` to create a new message.
 */
export const DeleteEcosystemRequestSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 10);

/**
 * Describes the message platform.ecosystem.v2alpha.DeleteEcosystemResponse.
 * Use `create(DeleteEcosystemResponseSchema)` to create a new message.
 */
export const DeleteEcosystemResponseSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 11);

/**
 * Describes the message platform.ecosystem.v2alpha.Ecosystem.
 * Use `create(EcosystemSchema)` to create a new message.
 */
export const EcosystemSchema = /*@__PURE__*/
  messageDesc(file_platform_ecosystem_v2alpha_ecosystem, 12);

/**
 * Describes the enum platform.ecosystem.v2alpha.EcosystemType.
 */
export const EcosystemTypeSchema = /*@__PURE__*/
  enumDesc(file_platform_ecosystem_v2alpha_ecosystem, 0);

/**
 * Supported ecosystem type
 *
 * @generated from enum platform.ecosystem.v2alpha.EcosystemType
 */
export const EcosystemType = /*@__PURE__*/
  tsEnum(EcosystemTypeSchema);

/**
 * Describes the enum platform.ecosystem.v2alpha.EcosystemStatus.
 */
export const EcosystemStatusSchema = /*@__PURE__*/
  enumDesc(file_platform_ecosystem_v2alpha_ecosystem, 1);

/**
 * The current status of a ecosystem
 *
 * @generated from enum platform.ecosystem.v2alpha.EcosystemStatus
 */
export const EcosystemStatus = /*@__PURE__*/
  tsEnum(EcosystemStatusSchema);

/**
 * Describes the enum platform.ecosystem.v2alpha.EcosystemBillingStatus.
 */
export const EcosystemBillingStatusSchema = /*@__PURE__*/
  enumDesc(file_platform_ecosystem_v2alpha_ecosystem, 2);

/**
 * The current billing status of a ecosystem
 *
 * @generated from enum platform.ecosystem.v2alpha.EcosystemBillingStatus
 */
export const EcosystemBillingStatus = /*@__PURE__*/
  tsEnum(EcosystemBillingStatusSchema);

/**
 * Describes the enum platform.ecosystem.v2alpha.EcosystemCommands.
 */
export const EcosystemCommandsSchema = /*@__PURE__*/
  enumDesc(file_platform_ecosystem_v2alpha_ecosystem, 3);

/**
 * @generated from enum platform.ecosystem.v2alpha.EcosystemCommands
 */
export const EcosystemCommands = /*@__PURE__*/
  tsEnum(EcosystemCommandsSchema);

/**
 * Describes the enum platform.ecosystem.v2alpha.EcosystemEvents.
 */
export const EcosystemEventsSchema = /*@__PURE__*/
  enumDesc(file_platform_ecosystem_v2alpha_ecosystem, 4);

/**
 * @generated from enum platform.ecosystem.v2alpha.EcosystemEvents
 */
export const EcosystemEvents = /*@__PURE__*/
  tsEnum(EcosystemEventsSchema);

/**
 * @generated from service platform.ecosystem.v2alpha.EcosystemService
 */
export const EcosystemService = /*@__PURE__*/
  serviceDesc(file_platform_ecosystem_v2alpha_ecosystem, 0);

