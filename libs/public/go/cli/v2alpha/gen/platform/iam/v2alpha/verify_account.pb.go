// Code generated by protoc-gen-platform go/cli-methods. DO NOT EDIT.
// source: platform/iam/v2alpha/account.proto

package iamv2alphapbcmd

import (
	"connectrpc.com/connect"
	"context"
	"encoding/json"
	"fmt"
	"github.com/apex/log"
	"github.com/spf13/cobra"
	"google.golang.org/protobuf/encoding/protojson"
	cliv2alphalib "libs/public/go/cli/v2alpha"
	"libs/public/go/protobuf/gen/platform/iam/v2alpha/iamv2alphapbconnect"
	"libs/public/go/sdk/v2alpha"
	"net/http"
	"os"

	"libs/public/go/protobuf/gen/platform/iam/v2alpha"
)

var (
	verifyAccountRequest      string
	verifyAccountFieldMask    string
	verifyAccountValidateOnly bool
)

var VerifyAccountV2AlphaCmd = &cobra.Command{
	Use:   "verify",
	Short: `Verify an existing account`,
	Long:  `[ Verify ]`,
	Run: func(cmd *cobra.Command, args []string) {

		log.Debug("Calling verifyAccount account")
		settings := cmd.Root().Context().Value(sdkv2alphalib.SettingsContextKey).(*cliv2alphalib.Configuration)

		_request, err := cmd.Flags().GetString("request")
		if err != nil {
			fmt.Println(err)
			os.Exit(1)
		}
		if _request == "" {
			_request = "{}"
		}

		_r := iamv2alphapb.VerifyAccountRequest{}
		err = protojson.Unmarshal([]byte(_request), &_r)
		if err != nil {
			fmt.Println(err)
			os.Exit(1)
		}

		sdkv2alphalib.Overrides.FieldMask = verifyAccountFieldMask
		sdkv2alphalib.Overrides.ValidateOnly = verifyAccountValidateOnly

		request := connect.NewRequest[iamv2alphapb.VerifyAccountRequest](&_r)
		// Add GZIP Support: connect.WithSendGzip(),
		httpClient := http.DefaultClient
		url := "https://" + settings.Platform.Endpoint
		if settings.Platform.Insecure {
			url = "http://" + settings.Platform.Endpoint
		}
		client := iamv2alphapbconnect.NewAccountServiceClient(httpClient, url, connect.WithInterceptors(cliv2alphalib.NewCLIInterceptor(settings, sdkv2alphalib.Overrides)))

		response, err := client.VerifyAccount(context.Background(), request)
		if err != nil {
			fmt.Println(err)
			os.Exit(1)
		}

		val, _ := json.MarshalIndent(&response, "", "    ")
		fmt.Println(string(val))
	},
}

func init() {
	VerifyAccountV2AlphaCmd.PersistentFlags().StringVarP(&verifyAccountRequest, "request", "r", "{}", "Request for api call")
	VerifyAccountV2AlphaCmd.PersistentFlags().BoolVar(&verifyAccountValidateOnly, "validate-only", false, "Only validate this request without modifying the resource")
	VerifyAccountV2AlphaCmd.PersistentFlags().StringVarP(&verifyAccountFieldMask, "field-mask", "m", "", "Limit the returned response fields")
}
