// Code generated by protoc-gen-platform go/cli-methods. DO NOT EDIT.
// source: platform/configuration/v2alpha/configuration.proto

package configurationv2alphapbcmd

import (
	"connectrpc.com/connect"
	"context"
	"encoding/json"
	"fmt"
	"github.com/apex/log"
	"github.com/spf13/cobra"
	"google.golang.org/protobuf/encoding/protojson"
	"libs/public/go/sdk/gen/configuration/v2alpha"
	"libs/public/go/sdk/v2alpha"
	"os"

	"libs/public/go/protobuf/gen/platform/configuration/v2alpha"
)

var (
	publishConfigurationRequest      string
	publishConfigurationFieldMask    string
	publishConfigurationValidateOnly bool
)

var PublishConfigurationV2AlphaCmd = &cobra.Command{
	Use:   "publish",
	Short: `Publish configuration for an ecosystem`,
	Long:  `[]`,
	Run: func(cmd *cobra.Command, args []string) {

		log.Debug("Calling publishConfiguration configuration")

		_request, err := cmd.Flags().GetString("request")
		if err != nil {
			fmt.Println(err)
			os.Exit(1)
		}
		if _request == "" {
			_request = "{}"
		}

		_r := configurationv2alphapb.PublishConfigurationRequest{}
		err = protojson.Unmarshal([]byte(_request), &_r)
		if err != nil {
			fmt.Println(err)
			os.Exit(1)
		}

		sdkv2alphalib.Overrides.FieldMask = publishConfigurationFieldMask
		sdkv2alphalib.Overrides.ValidateOnly = publishConfigurationValidateOnly

		request := connect.NewRequest[configurationv2alphapb.PublishConfigurationRequest](&_r)
		// Add GZIP Support: connect.WithSendGzip(),
		client := *configurationv2alphapbsdk.NewConfigurationServiceSpecClient(sdkv2alphalib.Config, sdkv2alphalib.Config.Platform.Mesh.Endpoint, connect.WithInterceptors(sdkv2alphalib.NewCLIInterceptor(sdkv2alphalib.Config, sdkv2alphalib.Overrides)))

		response, err := client.PublishConfiguration(context.Background(), request)
		if err != nil {
			fmt.Println(err)
			os.Exit(1)
		}

		val, _ := json.MarshalIndent(&response, "", "    ")
		fmt.Println(string(val))
	},
}

func init() {
	PublishConfigurationV2AlphaCmd.PersistentFlags().StringVarP(&publishConfigurationRequest, "request", "r", "{}", "Request for api call")
	PublishConfigurationV2AlphaCmd.PersistentFlags().BoolVar(&publishConfigurationValidateOnly, "validate-only", false, "Only validate this request without modifying the resource")
	PublishConfigurationV2AlphaCmd.PersistentFlags().StringVarP(&publishConfigurationFieldMask, "field-mask", "m", "", "Limit the returned response fields")
}
