// Code generated by protoc-gen-platform go/entity-unspecified. DO NOT EDIT.
// source: platform/iam/v2alpha/account_authority.proto

package iamv2alphapbmodel

import (
	"context"
	"encoding/json"

	"errors"
	"github.com/openecosystems/ecosystem/libs/public/go/sdk/v2alpha"
	"google.golang.org/protobuf/types/known/anypb"
	"libs/public/go/protobuf/gen/platform/iam/v2alpha"

	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	specv2pb "libs/protobuf/go/protobuf/gen/platform/spec/v2"
	typev2pb "libs/protobuf/go/protobuf/gen/platform/type/v2"
)

type AccountAuthoritySpecEntity struct {
	AccountAuthority *iamv2alphapb.AccountAuthority
}

func NewAccountAuthoritySpecEntity(specContext *specv2pb.SpecContext) (*AccountAuthoritySpecEntity, error) {

	return &AccountAuthoritySpecEntity{
		AccountAuthority: &iamv2alphapb.AccountAuthority{},
	}, nil

}

func NewAccountAuthoritySpecEntityFromSpec(ctx context.Context, s *specv2pb.Spec) (*AccountAuthoritySpecEntity, error) {
	data := &iamv2alphapb.AccountAuthority{}
	err := sdkv2alphalib.GetDataFromSpec[*iamv2alphapb.AccountAuthority](ctx, s, data)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(err)
	}

	return &AccountAuthoritySpecEntity{
		AccountAuthority: data,
	}, nil
}

func (entity *AccountAuthoritySpecEntity) ToProto() (*iamv2alphapb.AccountAuthority, error) {

	return entity.AccountAuthority, nil

}

func (entity *AccountAuthoritySpecEntity) ToEvent() (*string, error) {

	bytes, err := json.Marshal(entity)
	if err != nil {
		return nil, err
	}

	event := string(bytes)

	return &event, nil

}

func (entity *AccountAuthoritySpecEntity) FromEvent(event *string) (*AccountAuthoritySpecEntity, error) {

	bytes := []byte(*event)
	err := json.Unmarshal(bytes, entity)
	if err != nil {
		return nil, err
	}

	return entity, nil

}

func (entity *AccountAuthoritySpecEntity) MarshalEntity() (*anypb.Any, error) {

	d, err := anypb.New(entity.AccountAuthority)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to marshall entity"), err)
	}

	return d, nil

}

func (entity *AccountAuthoritySpecEntity) MarshalProto() (*anypb.Any, error) {

	proto, err := entity.ToProto()
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to convert entity to proto"), err)
	}

	d, err := anypb.New(proto)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to marshall proto"), err)
	}

	return d, nil

}

func (entity *AccountAuthoritySpecEntity) TypeName() string {
	return "accountAuthority"
}

func (entity *AccountAuthoritySpecEntity) CommandTopic() string {
	return CommandDataAccountAuthorityTopic
}

func (entity *AccountAuthoritySpecEntity) EventTopic() string {
	return EventDataAccountAuthorityTopic
}

func (entity *AccountAuthoritySpecEntity) RoutineTopic() string {
	return RoutineDataAccountAuthorityTopic
}

func (entity *AccountAuthoritySpecEntity) TopicWildcard() string {
	return AccountAuthorityTypeNameEventPrefix + ">"
}

func (entity *AccountAuthoritySpecEntity) SystemName() string {
	return "iam"
}

func (entity *AccountAuthoritySpecEntity) internal() {

	var _ timestamppb.Timestamp
	//created_at

	var _ timestamppb.Timestamp
	//updated_at

	var _ *typev2pb.Credential
}
