// Code generated by protoc-gen-platform go/entity-unspecified. DO NOT EDIT.
// source: platform/configuration/v2alpha/configuration.proto

package configurationv2alphapbmodel

import (
	"context"
	"encoding/json"

	"errors"
	"github.com/segmentio/ksuid"
	"libs/public/go/protobuf/gen/platform/configuration/v2alpha"
	"libs/public/go/sdk/v2alpha"

	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	specv2pb "libs/protobuf/go/protobuf/gen/platform/spec/v2"
	ontologyv2alphapb "libs/public/go/protobuf/gen/platform/ontology/v2alpha"
)

type ConfigurationSpecEntity struct {
	Configuration *configurationv2alphapb.Configuration
}

func NewConfigurationSpecEntity(specContext *specv2pb.SpecContext) (*ConfigurationSpecEntity, error) {

	id := ksuid.New()
	createdAt := timestamppb.Now()

	return &ConfigurationSpecEntity{
		Configuration: &configurationv2alphapb.Configuration{
			Id:        id.String(),
			CreatedAt: createdAt,
			UpdatedAt: createdAt,
		},
	}, nil

}

func NewConfigurationSpecEntityFromSpec(ctx context.Context, s *specv2pb.Spec) (*ConfigurationSpecEntity, error) {
	data := &configurationv2alphapb.Configuration{}
	err := sdkv2alphalib.GetDataFromSpec[*configurationv2alphapb.Configuration](ctx, s, data)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(err)
	}

	return &ConfigurationSpecEntity{
		Configuration: data,
	}, nil
}

func (entity *ConfigurationSpecEntity) ToProto() (*configurationv2alphapb.Configuration, error) {

	return entity.Configuration, nil

}

func (entity *ConfigurationSpecEntity) ToEvent() (*string, error) {

	bytes, err := json.Marshal(entity)
	if err != nil {
		return nil, err
	}

	event := string(bytes)

	return &event, nil

}

func (entity *ConfigurationSpecEntity) FromEvent(event *string) (*ConfigurationSpecEntity, error) {

	bytes := []byte(*event)
	err := json.Unmarshal(bytes, entity)
	if err != nil {
		return nil, err
	}

	return entity, nil

}

func (entity *ConfigurationSpecEntity) MarshalEntity() (*anypb.Any, error) {

	d, err := anypb.New(entity.Configuration)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to marshall entity"), err)
	}

	return d, nil

}

func (entity *ConfigurationSpecEntity) MarshalProto() (*anypb.Any, error) {

	proto, err := entity.ToProto()
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to convert entity to proto"), err)
	}

	d, err := anypb.New(proto)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to marshall proto"), err)
	}

	return d, nil

}

func (entity *ConfigurationSpecEntity) TypeName() string {
	return "configuration"
}

func (entity *ConfigurationSpecEntity) CommandTopic() string {
	return CommandDataConfigurationTopic
}

func (entity *ConfigurationSpecEntity) EventTopic() string {
	return EventDataConfigurationTopic
}

func (entity *ConfigurationSpecEntity) RoutineTopic() string {
	return RoutineDataConfigurationTopic
}

func (entity *ConfigurationSpecEntity) TopicWildcard() string {
	return ConfigurationTypeNameEventPrefix + ">"
}

func (entity *ConfigurationSpecEntity) SystemName() string {
	return "configuration"
}

func (entity *ConfigurationSpecEntity) internal() {

	var _ timestamppb.Timestamp
	//created_at

	var _ timestamppb.Timestamp
	//updated_at

	var _ *configurationv2alphapb.ConfigurationType

	var _ *configurationv2alphapb.ConfigurationStatus

	var _ *ontologyv2alphapb.SpecDataCatalog

	var _ *configurationv2alphapb.SpecPlatformConfiguration

	//platform_configurations

	//solution_configurations

	//connector_configurations
}
