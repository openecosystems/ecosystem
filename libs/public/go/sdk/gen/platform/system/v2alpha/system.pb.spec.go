// Code generated by protoc-gen-platform go/spec. DO NOT EDIT.
// source: platform/system/v2alpha/system.proto

package systemv2alphapb

type SystemCommand int
type SystemEvent int

const (
	SystemTypeName                         string = "system"
	SystemTypeNamePlural                   string = "systems"
	SystemTypeNameScreamingCamelCase       string = "SYSTEM"
	SystemTypeNamePluralScreamingCamelCase string = "SYSTEMS"
	SystemTypeNameEventPrefix              string = "system."
)

const (
	SystemCommandsUnspecified SystemCommand = iota
	SystemCommandsEnable      SystemCommand = iota
	SystemCommandsDisable     SystemCommand = iota
	UnrecognizedSystemCommand SystemCommand = -1
)

const (
	SystemEventsUnspecified SystemEvent = iota
	SystemEventsEnabled     SystemEvent = iota
	SystemEventsDisabled    SystemEvent = iota
	UnrecognizedSystemEvent SystemEvent = -1
)

const (
	CommandDataSystemTopic  string = "system.data.command"
	EventDataSystemTopic    string = "system.data.event"
	RoutineDataSystemTopic  string = "system.data.routine"
	UnrecognizedSystemTopic string = "unrecognized"
)

func (c SystemCommand) CommandName() string {

	switch c {

	case SystemCommandsUnspecified:
		return "SystemCommandsUnspecified"
	case SystemCommandsEnable:
		return "SystemCommandsEnable"
	case SystemCommandsDisable:
		return "SystemCommandsDisable"
	default:
		return "UnrecognizedSystemCommand"
	}

}

func (e SystemEvent) EventName() string {

	switch e {

	case SystemEventsUnspecified:
		return "SystemEventsUnspecified"
	case SystemEventsEnabled:
		return "SystemEventsEnabled"
	case SystemEventsDisabled:
		return "SystemEventsDisabled"
	default:
		return "UnrecognizedSystemEvent"
	}

}

func (c SystemCommand) CommandTopic() string {

	switch c {

	case SystemCommandsUnspecified:
		return CommandDataSystemTopic
	case SystemCommandsEnable:
		return CommandDataSystemTopic
	case SystemCommandsDisable:
		return CommandDataSystemTopic
	default:
		return UnrecognizedSystemTopic
	}

}

func (e SystemEvent) EventTopic() string {

	switch e {

	case SystemEventsUnspecified:
		return EventDataSystemTopic
	case SystemEventsEnabled:
		return EventDataSystemTopic
	case SystemEventsDisabled:
		return EventDataSystemTopic
	default:
		return UnrecognizedSystemTopic
	}

}

func (c SystemCommand) CommandTopicWildcard() string {
	return SystemTypeNameEventPrefix + ">"
}

func (e SystemEvent) EventTopicWildcard() string {
	return SystemTypeNameEventPrefix + ">"
}

func GetSystemCommand(command string) SystemCommand {

	switch command {

	case "SystemCommandsUnspecified":
		return SystemCommandsUnspecified
	case "SystemCommandsEnable":
		return SystemCommandsEnable
	case "SystemCommandsDisable":
		return SystemCommandsDisable
	default:
		return UnrecognizedSystemCommand
	}
}

func GetSystemEvent(event string) SystemEvent {

	switch event {

	case "SystemEventsUnspecified":
		return SystemEventsUnspecified
	case "SystemEventsEnabled":
		return SystemEventsEnabled
	case "SystemEventsDisabled":
		return SystemEventsDisabled
	default:
		return UnrecognizedSystemEvent
	}
}
