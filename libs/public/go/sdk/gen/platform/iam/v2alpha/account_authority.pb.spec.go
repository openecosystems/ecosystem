// Code generated by protoc-gen-platform go/spec. DO NOT EDIT.
// source: platform/iam/v2alpha/account_authority.proto

package iamv2alphapb

type AccountAuthorityCommand int
type AccountAuthorityEvent int

const (
	AccountAuthorityTypeName                         string = "accountAuthority"
	AccountAuthorityTypeNamePlural                   string = "accountAuthorities"
	AccountAuthorityTypeNameScreamingCamelCase       string = "ACCOUNT_AUTHORITY"
	AccountAuthorityTypeNamePluralScreamingCamelCase string = "ACCOUNT_AUTHORITIES"
	AccountAuthorityTypeNameEventPrefix              string = "accountAuthority."
)

const (
	AccountAuthorityCommandsUnspecified            AccountAuthorityCommand = iota
	AccountAuthorityCommandsCreateAccountAuthority AccountAuthorityCommand = iota
	UnrecognizedAccountAuthorityCommand            AccountAuthorityCommand = -1
)

const (
	AccountAuthorityEventsUnspecified             AccountAuthorityEvent = iota
	AccountAuthorityEventsCreatedAccountAuthority AccountAuthorityEvent = iota
	UnrecognizedAccountAuthorityEvent             AccountAuthorityEvent = -1
)

const (
	CommandDataAccountAuthorityTopic  string = "accountAuthority.data.command"
	EventDataAccountAuthorityTopic    string = "accountAuthority.data.event"
	RoutineDataAccountAuthorityTopic  string = "accountAuthority.data.routine"
	UnrecognizedAccountAuthorityTopic string = "unrecognized"
)

func (c AccountAuthorityCommand) CommandName() string {

	switch c {

	case AccountAuthorityCommandsUnspecified:
		return "AccountAuthorityCommandsUnspecified"
	case AccountAuthorityCommandsCreateAccountAuthority:
		return "AccountAuthorityCommandsCreateAccountAuthority"
	default:
		return "UnrecognizedAccountAuthorityCommand"
	}

}

func (e AccountAuthorityEvent) EventName() string {

	switch e {

	case AccountAuthorityEventsUnspecified:
		return "AccountAuthorityEventsUnspecified"
	case AccountAuthorityEventsCreatedAccountAuthority:
		return "AccountAuthorityEventsCreatedAccountAuthority"
	default:
		return "UnrecognizedAccountAuthorityEvent"
	}

}

func (c AccountAuthorityCommand) CommandTopic() string {

	switch c {

	case AccountAuthorityCommandsUnspecified:
		return CommandDataAccountAuthorityTopic
	case AccountAuthorityCommandsCreateAccountAuthority:
		return CommandDataAccountAuthorityTopic
	default:
		return UnrecognizedAccountAuthorityTopic
	}

}

func (e AccountAuthorityEvent) EventTopic() string {

	switch e {

	case AccountAuthorityEventsUnspecified:
		return EventDataAccountAuthorityTopic
	case AccountAuthorityEventsCreatedAccountAuthority:
		return EventDataAccountAuthorityTopic
	default:
		return UnrecognizedAccountAuthorityTopic
	}

}

func (c AccountAuthorityCommand) CommandTopicWildcard() string {
	return AccountAuthorityTypeNameEventPrefix + ">"
}

func (e AccountAuthorityEvent) EventTopicWildcard() string {
	return AccountAuthorityTypeNameEventPrefix + ">"
}

func GetAccountAuthorityCommand(command string) AccountAuthorityCommand {

	switch command {

	case "AccountAuthorityCommandsUnspecified":
		return AccountAuthorityCommandsUnspecified
	case "AccountAuthorityCommandsCreateAccountAuthority":
		return AccountAuthorityCommandsCreateAccountAuthority
	default:
		return UnrecognizedAccountAuthorityCommand
	}
}

func GetAccountAuthorityEvent(event string) AccountAuthorityEvent {

	switch event {

	case "AccountAuthorityEventsUnspecified":
		return AccountAuthorityEventsUnspecified
	case "AccountAuthorityEventsCreatedAccountAuthority":
		return AccountAuthorityEventsCreatedAccountAuthority
	default:
		return UnrecognizedAccountAuthorityEvent
	}
}
