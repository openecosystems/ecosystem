// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: platform/iam/v2alpha/account.proto

package iamv2alphapb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	_ "libs/protobuf/go/protobuf/gen/platform/options/v2"
	v21 "libs/protobuf/go/protobuf/gen/platform/spec/v2"
	v2 "libs/protobuf/go/protobuf/gen/platform/type/v2"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Supported account type for subscription.
type AccountType int32

const (
	AccountType_ACCOUNT_TYPE_UNSPECIFIED  AccountType = 0 // Unspecified or unknown subscription type.
	AccountType_ACCOUNT_TYPE_ORGANIZATION AccountType = 1 // Account for an organization.
	AccountType_ACCOUNT_TYPE_USER         AccountType = 2 // Account for a user.
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "ACCOUNT_TYPE_UNSPECIFIED",
		1: "ACCOUNT_TYPE_ORGANIZATION",
		2: "ACCOUNT_TYPE_USER",
	}
	AccountType_value = map[string]int32{
		"ACCOUNT_TYPE_UNSPECIFIED":  0,
		"ACCOUNT_TYPE_ORGANIZATION": 1,
		"ACCOUNT_TYPE_USER":         2,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_iam_v2alpha_account_proto_enumTypes[0].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_platform_iam_v2alpha_account_proto_enumTypes[0]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{0}
}

// The current status of a account
type EventAccountStatus int32

const (
	EventAccountStatus_EVENT_ACCOUNT_STATUS_UNSPECIFIED EventAccountStatus = 0 // Unspecified or unknown status.
	EventAccountStatus_EVENT_ACCOUNT_STATUS_CREATING    EventAccountStatus = 1 // Account is being created.
	EventAccountStatus_EVENT_ACCOUNT_STATUS_VERIFYING   EventAccountStatus = 2 // Account is being verified.
	EventAccountStatus_EVENT_ACCOUNT_STATUS_SIGNING     EventAccountStatus = 3 // Account is being signed.
	EventAccountStatus_EVENT_ACCOUNT_STATUS_ERROR       EventAccountStatus = 4 // Error.
)

// Enum value maps for EventAccountStatus.
var (
	EventAccountStatus_name = map[int32]string{
		0: "EVENT_ACCOUNT_STATUS_UNSPECIFIED",
		1: "EVENT_ACCOUNT_STATUS_CREATING",
		2: "EVENT_ACCOUNT_STATUS_VERIFYING",
		3: "EVENT_ACCOUNT_STATUS_SIGNING",
		4: "EVENT_ACCOUNT_STATUS_ERROR",
	}
	EventAccountStatus_value = map[string]int32{
		"EVENT_ACCOUNT_STATUS_UNSPECIFIED": 0,
		"EVENT_ACCOUNT_STATUS_CREATING":    1,
		"EVENT_ACCOUNT_STATUS_VERIFYING":   2,
		"EVENT_ACCOUNT_STATUS_SIGNING":     3,
		"EVENT_ACCOUNT_STATUS_ERROR":       4,
	}
)

func (x EventAccountStatus) Enum() *EventAccountStatus {
	p := new(EventAccountStatus)
	*p = x
	return p
}

func (x EventAccountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventAccountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_iam_v2alpha_account_proto_enumTypes[1].Descriptor()
}

func (EventAccountStatus) Type() protoreflect.EnumType {
	return &file_platform_iam_v2alpha_account_proto_enumTypes[1]
}

func (x EventAccountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventAccountStatus.Descriptor instead.
func (EventAccountStatus) EnumDescriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{1}
}

type AccountCommands int32

const (
	AccountCommands_ACCOUNT_COMMANDS_UNSPECIFIED    AccountCommands = 0 // Unspecified or unknown command
	AccountCommands_ACCOUNT_COMMANDS_CREATE_ACCOUNT AccountCommands = 1
	AccountCommands_ACCOUNT_COMMANDS_VERIFY_ACCOUNT AccountCommands = 2
	AccountCommands_ACCOUNT_COMMANDS_SIGN_ACCOUNT   AccountCommands = 3
)

// Enum value maps for AccountCommands.
var (
	AccountCommands_name = map[int32]string{
		0: "ACCOUNT_COMMANDS_UNSPECIFIED",
		1: "ACCOUNT_COMMANDS_CREATE_ACCOUNT",
		2: "ACCOUNT_COMMANDS_VERIFY_ACCOUNT",
		3: "ACCOUNT_COMMANDS_SIGN_ACCOUNT",
	}
	AccountCommands_value = map[string]int32{
		"ACCOUNT_COMMANDS_UNSPECIFIED":    0,
		"ACCOUNT_COMMANDS_CREATE_ACCOUNT": 1,
		"ACCOUNT_COMMANDS_VERIFY_ACCOUNT": 2,
		"ACCOUNT_COMMANDS_SIGN_ACCOUNT":   3,
	}
)

func (x AccountCommands) Enum() *AccountCommands {
	p := new(AccountCommands)
	*p = x
	return p
}

func (x AccountCommands) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountCommands) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_iam_v2alpha_account_proto_enumTypes[2].Descriptor()
}

func (AccountCommands) Type() protoreflect.EnumType {
	return &file_platform_iam_v2alpha_account_proto_enumTypes[2]
}

func (x AccountCommands) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountCommands.Descriptor instead.
func (AccountCommands) EnumDescriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{2}
}

type AccountEvents int32

const (
	// Unspecified or unknown account.
	AccountEvents_ACCOUNT_EVENTS_UNSPECIFIED AccountEvents = 0
	// Event Account complete.
	AccountEvents_ACCOUNT_EVENTS_CREATED_ACCOUNT  AccountEvents = 1
	AccountEvents_ACCOUNT_EVENTS_VERIFIED_ACCOUNT AccountEvents = 2
	AccountEvents_ACCOUNT_EVENTS_SIGNED_ACCOUNT   AccountEvents = 3
)

// Enum value maps for AccountEvents.
var (
	AccountEvents_name = map[int32]string{
		0: "ACCOUNT_EVENTS_UNSPECIFIED",
		1: "ACCOUNT_EVENTS_CREATED_ACCOUNT",
		2: "ACCOUNT_EVENTS_VERIFIED_ACCOUNT",
		3: "ACCOUNT_EVENTS_SIGNED_ACCOUNT",
	}
	AccountEvents_value = map[string]int32{
		"ACCOUNT_EVENTS_UNSPECIFIED":      0,
		"ACCOUNT_EVENTS_CREATED_ACCOUNT":  1,
		"ACCOUNT_EVENTS_VERIFIED_ACCOUNT": 2,
		"ACCOUNT_EVENTS_SIGNED_ACCOUNT":   3,
	}
)

func (x AccountEvents) Enum() *AccountEvents {
	p := new(AccountEvents)
	*p = x
	return p
}

func (x AccountEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_iam_v2alpha_account_proto_enumTypes[3].Descriptor()
}

func (AccountEvents) Type() protoreflect.EnumType {
	return &file_platform_iam_v2alpha_account_proto_enumTypes[3]
}

func (x AccountEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountEvents.Descriptor instead.
func (AccountEvents) EnumDescriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{3}
}

type AccountConfiguration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountConfiguration) Reset() {
	*x = AccountConfiguration{}
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountConfiguration) ProtoMessage() {}

func (x *AccountConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountConfiguration.ProtoReflect.Descriptor instead.
func (*AccountConfiguration) Descriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{0}
}

// Request for CreateAccount
type CreateAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the Account. For example, 'Open Ecosystems, Inc.'
	Name          string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Curve         Curve    `protobuf:"varint,2,opt,name=curve,proto3,enum=platform.iam.v2alpha.Curve" json:"curve,omitempty"`
	Cert          *v2.File `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAccountRequest) GetCurve() Curve {
	if x != nil {
		return x.Curve
	}
	return Curve_CURVE_UNSPECIFIED
}

func (x *CreateAccountRequest) GetCert() *v2.File {
	if x != nil {
		return x.Cert
	}
	return nil
}

// Response to CreateAccount
type CreateAccountResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The response context
	SpecContext   *v21.SpecResponseContext `protobuf:"bytes,1,opt,name=spec_context,json=specContext,proto3" json:"spec_context,omitempty"`
	Account       *Account                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccountResponse) Reset() {
	*x = CreateAccountResponse{}
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResponse) ProtoMessage() {}

func (x *CreateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAccountResponse) GetSpecContext() *v21.SpecResponseContext {
	if x != nil {
		return x.SpecContext
	}
	return nil
}

func (x *CreateAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

// Request for VerifyAccount
type VerifyAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicCert    *v2.File               `protobuf:"bytes,1,opt,name=public_cert,json=publicCert,proto3" json:"public_cert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyAccountRequest) Reset() {
	*x = VerifyAccountRequest{}
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyAccountRequest) ProtoMessage() {}

func (x *VerifyAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyAccountRequest.ProtoReflect.Descriptor instead.
func (*VerifyAccountRequest) Descriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyAccountRequest) GetPublicCert() *v2.File {
	if x != nil {
		return x.PublicCert
	}
	return nil
}

// Response to VerifyAccount
type VerifyAccountResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The response context
	SpecContext   *v21.SpecResponseContext `protobuf:"bytes,1,opt,name=spec_context,json=specContext,proto3" json:"spec_context,omitempty"`
	Account       *Account                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyAccountResponse) Reset() {
	*x = VerifyAccountResponse{}
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyAccountResponse) ProtoMessage() {}

func (x *VerifyAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyAccountResponse.ProtoReflect.Descriptor instead.
func (*VerifyAccountResponse) Descriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyAccountResponse) GetSpecContext() *v21.SpecResponseContext {
	if x != nil {
		return x.SpecContext
	}
	return nil
}

func (x *VerifyAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

// Request for SignAccount
type SignAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PublicCert    *v2.File               `protobuf:"bytes,2,opt,name=public_cert,json=publicCert,proto3" json:"public_cert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignAccountRequest) Reset() {
	*x = SignAccountRequest{}
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignAccountRequest) ProtoMessage() {}

func (x *SignAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignAccountRequest.ProtoReflect.Descriptor instead.
func (*SignAccountRequest) Descriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{5}
}

func (x *SignAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SignAccountRequest) GetPublicCert() *v2.File {
	if x != nil {
		return x.PublicCert
	}
	return nil
}

// Response to VerifyAccount
type SignAccountResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The response context
	SpecContext   *v21.SpecResponseContext `protobuf:"bytes,1,opt,name=spec_context,json=specContext,proto3" json:"spec_context,omitempty"`
	Account       *Account                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignAccountResponse) Reset() {
	*x = SignAccountResponse{}
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignAccountResponse) ProtoMessage() {}

func (x *SignAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignAccountResponse.ProtoReflect.Descriptor instead.
func (*SignAccountResponse) Descriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{6}
}

func (x *SignAccountResponse) GetSpecContext() *v21.SpecResponseContext {
	if x != nil {
		return x.SpecContext
	}
	return nil
}

func (x *SignAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type Account struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier for this Account
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Timestamp indicating when this account subscription was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp indicating when this account subscription was last updated.
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Credential    *v2.Credential         `protobuf:"bytes,4,opt,name=credential,proto3" json:"credential,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_platform_iam_v2alpha_account_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_platform_iam_v2alpha_account_proto_rawDescGZIP(), []int{7}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Account) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Account) GetCredential() *v2.Credential {
	if x != nil {
		return x.Credential
	}
	return nil
}

var File_platform_iam_v2alpha_account_proto protoreflect.FileDescriptor

var file_platform_iam_v2alpha_account_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76,
	0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x76,
	0x32, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x32, 0x2f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x52, 0x05, 0x63, 0x75,
	0x72, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x3a,
	0x06, 0xfa, 0xb6, 0x18, 0x02, 0x08, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b,
	0x73, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x06, 0xfa, 0xb6, 0x18, 0x02, 0x08, 0x02, 0x22, 0x57, 0x0a, 0x14,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x65, 0x72, 0x74, 0x3a, 0x06, 0xfa,
	0xb6, 0x18, 0x02, 0x08, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x73, 0x70,
	0x65, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x3a, 0x06, 0xfa, 0xb6, 0x18, 0x02, 0x08, 0x02, 0x22, 0x69, 0x0a, 0x12, 0x53, 0x69,
	0x67, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x65, 0x72, 0x74, 0x3a, 0x06, 0xfa,
	0xb6, 0x18, 0x02, 0x08, 0x01, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0c, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x3a, 0x06, 0xfa, 0xb6, 0x18, 0x02, 0x08, 0x02, 0x22, 0xdd, 0x01, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xca, 0xb7, 0x18, 0x02, 0x08, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x3a, 0x06, 0xfa, 0xb6, 0x18, 0x02, 0x08, 0x02, 0x2a, 0x61, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x2a, 0xc3, 0x01, 0x0a, 0x12,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x20, 0x0a, 0x1c, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x04, 0x2a, 0xa8, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x53,
	0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x02, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x41, 0x4e, 0x44, 0x53, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0x03, 0x1a, 0x06, 0x92, 0xb8, 0x18, 0x02, 0x08, 0x03, 0x2a, 0xad, 0x01, 0x0a,
	0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e,
	0x0a, 0x1a, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2c,
	0x0a, 0x1e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x01, 0x1a, 0x08, 0xe2, 0xb8, 0x18, 0x04, 0x08, 0x01, 0x18, 0x01, 0x12, 0x23, 0x0a, 0x1f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x56,
	0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x02, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x53, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0x03, 0x1a, 0x06, 0x92, 0xb8, 0x18, 0x02, 0x08, 0x04, 0x32, 0xe0, 0x03, 0x0a,
	0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x97, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0xa2, 0xb6, 0x18, 0x0a,
	0x20, 0x02, 0x2a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xaa, 0xb6, 0x18, 0x02, 0x08, 0x02,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x32, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x12, 0x9e, 0x01, 0x0a, 0x0d, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0xa2, 0xb6, 0x18, 0x0a, 0x20, 0x02, 0x2a, 0x06, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0xaa, 0xb6, 0x18, 0x02, 0x08, 0x03, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x69, 0x61,
	0x6d, 0x2f, 0x61, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x92, 0x01, 0x0a, 0x0b, 0x53,
	0x69, 0x67, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2e, 0xa2, 0xb6, 0x18, 0x06, 0x2a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0xaa, 0xb6, 0x18, 0x02, 0x08,
	0x03, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x32, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x42,
	0x82, 0x01, 0x82, 0xc4, 0x13, 0x02, 0x08, 0x01, 0x82, 0xb5, 0x18, 0x06, 0x08, 0x03, 0x10, 0x01,
	0x18, 0x02, 0x8a, 0xb5, 0x18, 0x1c, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x03, 0x6a, 0x61, 0x6e, 0x28, 0x02,
	0x38, 0x01, 0x92, 0xb5, 0x18, 0x03, 0x0a, 0x01, 0x03, 0x9a, 0xb5, 0x18, 0x02, 0x08, 0x01, 0xa2,
	0xb5, 0x18, 0x02, 0x08, 0x01, 0x5a, 0x3d, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x2f,
	0x76, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x69, 0x61, 0x6d, 0x76, 0x32, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_platform_iam_v2alpha_account_proto_rawDescOnce sync.Once
	file_platform_iam_v2alpha_account_proto_rawDescData []byte
)

func file_platform_iam_v2alpha_account_proto_rawDescGZIP() []byte {
	file_platform_iam_v2alpha_account_proto_rawDescOnce.Do(func() {
		file_platform_iam_v2alpha_account_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_iam_v2alpha_account_proto_rawDesc), len(file_platform_iam_v2alpha_account_proto_rawDesc)))
	})
	return file_platform_iam_v2alpha_account_proto_rawDescData
}

var file_platform_iam_v2alpha_account_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_platform_iam_v2alpha_account_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_platform_iam_v2alpha_account_proto_goTypes = []any{
	(AccountType)(0),                // 0: platform.iam.v2alpha.AccountType
	(EventAccountStatus)(0),         // 1: platform.iam.v2alpha.EventAccountStatus
	(AccountCommands)(0),            // 2: platform.iam.v2alpha.AccountCommands
	(AccountEvents)(0),              // 3: platform.iam.v2alpha.AccountEvents
	(*AccountConfiguration)(nil),    // 4: platform.iam.v2alpha.AccountConfiguration
	(*CreateAccountRequest)(nil),    // 5: platform.iam.v2alpha.CreateAccountRequest
	(*CreateAccountResponse)(nil),   // 6: platform.iam.v2alpha.CreateAccountResponse
	(*VerifyAccountRequest)(nil),    // 7: platform.iam.v2alpha.VerifyAccountRequest
	(*VerifyAccountResponse)(nil),   // 8: platform.iam.v2alpha.VerifyAccountResponse
	(*SignAccountRequest)(nil),      // 9: platform.iam.v2alpha.SignAccountRequest
	(*SignAccountResponse)(nil),     // 10: platform.iam.v2alpha.SignAccountResponse
	(*Account)(nil),                 // 11: platform.iam.v2alpha.Account
	(Curve)(0),                      // 12: platform.iam.v2alpha.Curve
	(*v2.File)(nil),                 // 13: platform.type.v2.File
	(*v21.SpecResponseContext)(nil), // 14: platform.spec.v2.SpecResponseContext
	(*timestamppb.Timestamp)(nil),   // 15: google.protobuf.Timestamp
	(*v2.Credential)(nil),           // 16: platform.type.v2.Credential
}
var file_platform_iam_v2alpha_account_proto_depIdxs = []int32{
	12, // 0: platform.iam.v2alpha.CreateAccountRequest.curve:type_name -> platform.iam.v2alpha.Curve
	13, // 1: platform.iam.v2alpha.CreateAccountRequest.cert:type_name -> platform.type.v2.File
	14, // 2: platform.iam.v2alpha.CreateAccountResponse.spec_context:type_name -> platform.spec.v2.SpecResponseContext
	11, // 3: platform.iam.v2alpha.CreateAccountResponse.account:type_name -> platform.iam.v2alpha.Account
	13, // 4: platform.iam.v2alpha.VerifyAccountRequest.public_cert:type_name -> platform.type.v2.File
	14, // 5: platform.iam.v2alpha.VerifyAccountResponse.spec_context:type_name -> platform.spec.v2.SpecResponseContext
	11, // 6: platform.iam.v2alpha.VerifyAccountResponse.account:type_name -> platform.iam.v2alpha.Account
	13, // 7: platform.iam.v2alpha.SignAccountRequest.public_cert:type_name -> platform.type.v2.File
	14, // 8: platform.iam.v2alpha.SignAccountResponse.spec_context:type_name -> platform.spec.v2.SpecResponseContext
	11, // 9: platform.iam.v2alpha.SignAccountResponse.account:type_name -> platform.iam.v2alpha.Account
	15, // 10: platform.iam.v2alpha.Account.created_at:type_name -> google.protobuf.Timestamp
	15, // 11: platform.iam.v2alpha.Account.updated_at:type_name -> google.protobuf.Timestamp
	16, // 12: platform.iam.v2alpha.Account.credential:type_name -> platform.type.v2.Credential
	5,  // 13: platform.iam.v2alpha.AccountService.CreateAccount:input_type -> platform.iam.v2alpha.CreateAccountRequest
	7,  // 14: platform.iam.v2alpha.AccountService.VerifyAccount:input_type -> platform.iam.v2alpha.VerifyAccountRequest
	9,  // 15: platform.iam.v2alpha.AccountService.SignAccount:input_type -> platform.iam.v2alpha.SignAccountRequest
	6,  // 16: platform.iam.v2alpha.AccountService.CreateAccount:output_type -> platform.iam.v2alpha.CreateAccountResponse
	8,  // 17: platform.iam.v2alpha.AccountService.VerifyAccount:output_type -> platform.iam.v2alpha.VerifyAccountResponse
	10, // 18: platform.iam.v2alpha.AccountService.SignAccount:output_type -> platform.iam.v2alpha.SignAccountResponse
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_platform_iam_v2alpha_account_proto_init() }
func file_platform_iam_v2alpha_account_proto_init() {
	if File_platform_iam_v2alpha_account_proto != nil {
		return
	}
	file_platform_iam_v2alpha_account_authority_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_iam_v2alpha_account_proto_rawDesc), len(file_platform_iam_v2alpha_account_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_platform_iam_v2alpha_account_proto_goTypes,
		DependencyIndexes: file_platform_iam_v2alpha_account_proto_depIdxs,
		EnumInfos:         file_platform_iam_v2alpha_account_proto_enumTypes,
		MessageInfos:      file_platform_iam_v2alpha_account_proto_msgTypes,
	}.Build()
	File_platform_iam_v2alpha_account_proto = out.File
	file_platform_iam_v2alpha_account_proto_goTypes = nil
	file_platform_iam_v2alpha_account_proto_depIdxs = nil
}
