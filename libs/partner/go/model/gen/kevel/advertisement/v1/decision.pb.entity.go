// Code generated by protoc-gen-platform go/entity-unspecified. DO NOT EDIT.
// source: kevel/advertisement/v1/decision.proto

package advertisementv1pbmodel

import (
	"context"
	"encoding/json"

	"errors"
	"github.com/openecosystems/ecosystem/libs/partner/go/protobuf/gen/kevel/advertisement/v1"
	"github.com/openecosystems/ecosystem/libs/public/go/sdk/v2alpha"
	"google.golang.org/protobuf/types/known/anypb"

	specv2pb "github.com/openecosystems/ecosystem/libs/protobuf/go/protobuf/gen/platform/spec/v2"
)

type DecisionSpecEntity struct {
	Decision *advertisementv1pb.Decision
}

func NewDecisionSpecEntity(specContext *specv2pb.SpecContext) (*DecisionSpecEntity, error) {

	return &DecisionSpecEntity{
		Decision: &advertisementv1pb.Decision{},
	}, nil

}

func NewDecisionSpecEntityFromSpec(ctx context.Context, s *specv2pb.Spec) (*DecisionSpecEntity, error) {
	data := &advertisementv1pb.Decision{}
	err := sdkv2alphalib.GetDataFromSpec[*advertisementv1pb.Decision](ctx, s, data)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(err)
	}

	return &DecisionSpecEntity{
		Decision: data,
	}, nil
}

func (entity *DecisionSpecEntity) ToProto() (*advertisementv1pb.Decision, error) {

	return entity.Decision, nil

}

func (entity *DecisionSpecEntity) ToEvent() (*string, error) {

	bytes, err := json.Marshal(entity)
	if err != nil {
		return nil, err
	}

	event := string(bytes)

	return &event, nil

}

func (entity *DecisionSpecEntity) FromEvent(event *string) (*DecisionSpecEntity, error) {

	bytes := []byte(*event)
	err := json.Unmarshal(bytes, entity)
	if err != nil {
		return nil, err
	}

	return entity, nil

}

func (entity *DecisionSpecEntity) MarshalEntity() (*anypb.Any, error) {

	d, err := anypb.New(entity.Decision)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to marshall entity"), err)
	}

	return d, nil

}

func (entity *DecisionSpecEntity) MarshalProto() (*anypb.Any, error) {

	proto, err := entity.ToProto()
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to convert entity to proto"), err)
	}

	d, err := anypb.New(proto)
	if err != nil {
		return nil, sdkv2alphalib.ErrServerInternal.WithInternalErrorDetail(errors.New("failed to marshall proto"), err)
	}

	return d, nil

}

func (entity *DecisionSpecEntity) TypeName() string {
	return "decision"
}

func (entity *DecisionSpecEntity) CommandTopic() string {
	return CommandDataDecisionTopic
}

func (entity *DecisionSpecEntity) EventTopic() string {
	return EventDataDecisionTopic
}

func (entity *DecisionSpecEntity) RoutineTopic() string {
	return RoutineDataDecisionTopic
}

func (entity *DecisionSpecEntity) TopicWildcard() string {
	return DecisionTypeNameEventPrefix + ">"
}

func (entity *DecisionSpecEntity) SystemName() string {
	return "advertisement"
}

func (entity *DecisionSpecEntity) internal() {

	var _ *advertisementv1pb.PricingData
}
