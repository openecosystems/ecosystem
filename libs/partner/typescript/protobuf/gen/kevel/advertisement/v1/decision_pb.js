// @generated by protoc-gen-es v2.2.3
// @generated from file kevel/advertisement/v1/decision.proto (package decision, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_protobuf_descriptor, file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file kevel/advertisement/v1/decision.proto.
 */
export const file_kevel_advertisement_v1_decision = /*@__PURE__*/
  fileDesc("CiVrZXZlbC9hZHZlcnRpc2VtZW50L3YxL2RlY2lzaW9uLnByb3RvEghkZWNpc2lvbiIJCgdDb25zZW50ItoDCg9EZWNpc2lvblJlcXVlc3QSJwoKcGxhY2VtZW50cxgBIAMoCzITLmRlY2lzaW9uLlBsYWNlbWVudBIcCgR1c2VyGAIgASgLMg4uZGVjaXNpb24uVXNlchIQCghrZXl3b3JkcxgDIAMoCRILCgN1cmwYBCABKAkSEAoIcmVmZXJyZXIYBSABKAkSCgoCaXAYBiABKAkSGQoRYmxvY2tlZF9jcmVhdGl2ZXMYByADKAMSEQoJaXNfbW9iaWxlGAggASgIEhwKFGluY2x1ZGVfcHJpY2luZ19kYXRhGAkgASgIEg8KB25vdHJhY2sYCiABKAgSHAoUZW5hYmxlX2JvdF9maWx0ZXJpbmcYCyABKAgSGAoQZW5hYmxlX3VzZXJfZGJpcBgMIAEoCBIiCgdjb25zZW50GA0gASgLMhEuZGVjaXNpb24uQ29uc2VudBIRCglkZXZpY2VfaWQYDiABKAkSEAoIcGFyYWxsZWwYDyABKAgSGQoRaW50ZW5kZWRfbGF0aXR1ZGUYECABKAISGgoSaW50ZW5kZWRfbG9uZ2l0dWRlGBEgASgCEg4KBnJhZGl1cxgSIAEoAhIeChZpbmNsdWRlX21hdGNoZWRfcG9pbnRzGBMgASgIIgwKClByb3BlcnRpZXMiCwoJT3ZlcnJpZGVzIpoBCgtDb250ZW50S2V5cxJOChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMYASADKAsyLy5kZWNpc2lvbi5Db250ZW50S2V5cy5BZGRpdGlvbmFsUHJvcGVydGllc0VudHJ5GjsKGUFkZGl0aW9uYWxQcm9wZXJ0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIJCgdBZFF1ZXJ5IscECglQbGFjZW1lbnQSEAoIZGl2X25hbWUYASABKAkSEgoKbmV0d29ya19pZBgCIAEoBRIPCgdzaXRlX2lkGAMgASgFEhAKCGFkX3R5cGVzGAQgAygDEhAKCHpvbmVfaWRzGAUgAygDEhMKC2NhbXBhaWduX2lkGAYgASgFEhEKCWZsaWdodF9pZBgHIAEoBRINCgVhZF9pZBgIIAEoBRIRCgljbGlja191cmwYCSABKAkSKAoKcHJvcGVydGllcxgKIAEoCzIULmRlY2lzaW9uLlByb3BlcnRpZXMSEQoJZXZlbnRfaWRzGAsgAygDEiYKCW92ZXJyaWRlcxgMIAEoCzITLmRlY2lzaW9uLk92ZXJyaWRlcxIrCgxjb250ZW50X2tleXMYDSABKAsyFS5kZWNpc2lvbi5Db250ZW50S2V5cxINCgVjb3VudBgOIAEoBRIXCg9wcm9wb3J0aW9uYWxpdHkYDyABKAgSFgoOZWNwbV9wYXJ0aXRpb24YECABKAkSFwoPZWNwbV9wYXJ0aXRpb25zGBEgAygJEhgKEGV2ZW50X211bHRpcGxpZXIYEiABKAUSFgoOc2tpcF9zZWxlY3Rpb24YEyABKAgSIwoIYWRfcXVlcnkYFCABKAsyES5kZWNpc2lvbi5BZFF1ZXJ5EhMKC2Zsb29yX3ByaWNlGBUgASgCEhEKCWZsb29yX2NwYxgWIAEoAhIrCgxza2lwX2ZpbHRlcnMYFyABKAsyFS5kZWNpc2lvbi5Ta2lwRmlsdGVycyITCgRVc2VyEgsKA2tleRgBIAEoCSLLAgoIRGVjaXNpb24SDQoFYWRfaWQYASABKAMSFQoNYWR2ZXJ0aXNlcl9pZBgCIAEoAxITCgtjcmVhdGl2ZV9pZBgDIAEoAxIRCglmbGlnaHRfaWQYBCABKAMSEwoLY2FtcGFpZ25faWQYBSABKAMSEwoLcHJpb3JpdHlfaWQYBiABKAMSEQoJY2xpY2tfdXJsGAcgASgJEiMKCGNvbnRlbnRzGAggAygLMhEuZGVjaXNpb24uQ29udGVudBIWCg5pbXByZXNzaW9uX3VybBgJIAEoCRIfCgZldmVudHMYCiADKAsyDy5kZWNpc2lvbi5FdmVudBIuCg5tYXRjaGVkX3BvaW50cxgLIAMoCzIWLmRlY2lzaW9uLk1hdGNoZWRQb2ludBImCgdwcmljaW5nGAwgASgLMhUuZGVjaXNpb24uUHJpY2luZ0RhdGEiIAoFRXZlbnQSCgoCaWQYASABKAUSCwoDdXJsGAIgASgJIgYKBERhdGEibgoHQ29udGVudBIMCgR0eXBlGAEgASgJEhAKCHRlbXBsYXRlGAIgASgJEhcKD2N1c3RvbV90ZW1wbGF0ZRgDIAEoCRIcCgRkYXRhGAQgASgLMg4uZGVjaXNpb24uRGF0YRIMCgRib2R5GAUgASgJImQKC1ByaWNpbmdEYXRhEg0KBXByaWNlGAEgASgCEhMKC2NsZWFyX3ByaWNlGAIgASgCEg8KB3JldmVudWUYAyABKAISEQoJcmF0ZV90eXBlGAQgASgDEg0KBWVfY3BtGAUgASgCIgsKCURlY2lzaW9ucyIJCgdFeHBsYWluInwKEERlY2lzaW9uUmVzcG9uc2USHAoEdXNlchgBIAEoCzIOLmRlY2lzaW9uLlVzZXISJgoJZGVjaXNpb25zGAIgASgLMhMuZGVjaXNpb24uRGVjaXNpb25zEiIKB2V4cGxhaW4YAyABKAsyES5kZWNpc2lvbi5FeHBsYWluIkYKDkNvbnNlbnRSZXF1ZXN0EhAKCHVzZXJfa2V5GAEgASgJEiIKB2NvbnNlbnQYAiABKAsyES5kZWNpc2lvbi5Db25zZW50IigKDE1hdGNoZWRQb2ludBILCgNsYXQYASABKAkSCwoDbG9uGAIgASgJIiYKFUdlb0Rpc3RhbmNlU2tpcEZpbHRlchINCgV2YWx1ZRgBIAEoCCImChVHZW9Mb2NhdGlvblNraXBGaWx0ZXISDQoFdmFsdWUYASABKAgiqwIKC1NraXBGaWx0ZXJzEjEKCGRpc3RhbmNlGAEgASgLMh8uZGVjaXNpb24uR2VvRGlzdGFuY2VTa2lwRmlsdGVyEg0KBWZhY2V0GAIgASgIEjQKC2dlb2Rpc3RhbmNlGAMgASgLMh8uZGVjaXNpb24uR2VvRGlzdGFuY2VTa2lwRmlsdGVyEjQKC2dlb2xvY2F0aW9uGAQgASgLMh8uZGVjaXNpb24uR2VvTG9jYXRpb25Ta2lwRmlsdGVyEg8KB2tleXdvcmQYBSABKAgSMQoIbG9jYXRpb24YBiABKAsyHy5kZWNpc2lvbi5HZW9Mb2NhdGlvblNraXBGaWx0ZXISFwoPcGxhY2VtZW50X2xpbWl0GAcgASgIEhEKCXNpdGVfem9uZRgIIAEoCCJKChNHZXREZWNpc2lvbnNSZXF1ZXN0EjMKEGRlY2lzaW9uX3JlcXVlc3QYASABKAsyGS5kZWNpc2lvbi5EZWNpc2lvblJlcXVlc3QiIAoeQWRkQ3VzdG9tUHJvcGVydGllc1JlcXVlc3RCb2R5IpgBChpBZGRDdXN0b21Qcm9wZXJ0aWVzUmVxdWVzdBISCgpuZXR3b3JrX2lkGAEgASgFEhAKCHVzZXJfa2V5GAIgASgJElQKImFkZF9jdXN0b21fcHJvcGVydGllc19yZXF1ZXN0X2JvZHkYAyABKAsyKC5kZWNpc2lvbi5BZGRDdXN0b21Qcm9wZXJ0aWVzUmVxdWVzdEJvZHkiTQoTQWRkSW50ZXJlc3RzUmVxdWVzdBISCgpuZXR3b3JrX2lkGAEgASgFEhAKCHVzZXJfa2V5GAIgASgJEhAKCGludGVyZXN0GAMgASgJInsKHEFkZFJldGFyZ2V0aW5nU2VnbWVudFJlcXVlc3QSEgoKbmV0d29ya19pZBgBIAEoBRIVCg1hZHZlcnRpc2VyX2lkGAIgASgFEh4KFnJldGFyZ2V0aW5nX3NlZ21lbnRfaWQYAyABKAUSEAoIdXNlcl9rZXkYBCABKAkiNQoNT3B0T3V0UmVxdWVzdBISCgpuZXR3b3JrX2lkGAEgASgFEhAKCHVzZXJfa2V5GAIgASgJIjMKC1JlYWRSZXF1ZXN0EhIKCm5ldHdvcmtfaWQYASABKAUSEAoIdXNlcl9rZXkYAiABKAkiCAoGUmVhZE9LIkUKEUlwT3ZlcnJpZGVSZXF1ZXN0EhIKCm5ldHdvcmtfaWQYASABKAUSEAoIdXNlcl9rZXkYAiABKAkSCgoCaXAYAyABKAkiNQoNRm9yZ2V0UmVxdWVzdBISCgpuZXR3b3JrX2lkGAEgASgFEhAKCHVzZXJfa2V5GAIgASgJIlsKEkdkcHJDb25zZW50UmVxdWVzdBISCgpuZXR3b3JrX2lkGAEgASgFEjEKD2NvbnNlbnRfcmVxdWVzdBgCIAEoCzIYLmRlY2lzaW9uLkNvbnNlbnRSZXF1ZXN0Il0KEE1hdGNoVXNlclJlcXVlc3QSEgoKbmV0d29ya19pZBgBIAEoBRIQCgh1c2VyX2tleRgCIAEoCRISCgpwYXJ0bmVyX2lkGAMgASgFEg8KB3VzZXJfaWQYBCABKAUy+AgKD0RlY2lzaW9uU2VydmljZRJsCgxHZXREZWNpc2lvbnMSHS5kZWNpc2lvbi5HZXREZWNpc2lvbnNSZXF1ZXN0GhouZGVjaXNpb24uRGVjaXNpb25SZXNwb25zZSIhgtPkkwIbOhBkZWNpc2lvbl9yZXF1ZXN0IgcvYXBpL3YyEpgBChNBZGRDdXN0b21Qcm9wZXJ0aWVzEiQuZGVjaXNpb24uQWRkQ3VzdG9tUHJvcGVydGllc1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiQ4LT5JMCPToiYWRkX2N1c3RvbV9wcm9wZXJ0aWVzX3JlcXVlc3RfYm9keSIXL3VkYi97bmV0d29ya0lkfS9jdXN0b20SbgoMQWRkSW50ZXJlc3RzEh0uZGVjaXNpb24uQWRkSW50ZXJlc3RzUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIngtPkkwIhEh8vdWRiL3tuZXR3b3JrSWR9L2ludGVyZXN0L2kuZ2lmEqABChVBZGRSZXRhcmdldGluZ1NlZ21lbnQSJi5kZWNpc2lvbi5BZGRSZXRhcmdldGluZ1NlZ21lbnRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IkeC0+STAkESPy91ZGIve25ldHdvcmtJZH0vcnQve2FkdmVydGlzZXJJZH0ve3JldGFyZ2V0aW5nU2VnbWVudElkfS9pLmdpZhJgCgZPcHRPdXQSFy5kZWNpc2lvbi5PcHRPdXRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IiWC0+STAh8SHS91ZGIve25ldHdvcmtJZH0vb3B0b3V0L2kuZ2lmEk4KBFJlYWQSFS5kZWNpc2lvbi5SZWFkUmVxdWVzdBoQLmRlY2lzaW9uLlJlYWRPSyIdgtPkkwIXEhUvdWRiL3tuZXR3b3JrSWR9L3JlYWQSZAoKSXBPdmVycmlkZRIbLmRlY2lzaW9uLklwT3ZlcnJpZGVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IiGC0+STAhsSGS91ZGIve25ldHdvcmtJZH0vaXAvaS5naWYSUwoGRm9yZ2V0EhcuZGVjaXNpb24uRm9yZ2V0UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIYgtPkkwISKhAvdWRiL3tuZXR3b3JrSWR9EnYKC0dkcHJDb25zZW50EhwuZGVjaXNpb24uR2RwckNvbnNlbnRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IjGC0+STAis6D2NvbnNlbnRfcmVxdWVzdCIYL3VkYi97bmV0d29ya0lkfS9jb25zZW50EmQKCU1hdGNoVXNlchIaLmRlY2lzaW9uLk1hdGNoVXNlclJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiI4LT5JMCHRIbL3VkYi97bmV0d29ya0lkfS9zeW5jL2kuZ2lmQgxaCi47ZGVjaXNpb25iBnByb3RvMw", [file_google_api_annotations, file_google_protobuf_descriptor, file_google_protobuf_empty]);

/**
 * Describes the message decision.Consent.
 * Use `create(ConsentSchema)` to create a new message.
 */
export const ConsentSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 0);

/**
 * Describes the message decision.DecisionRequest.
 * Use `create(DecisionRequestSchema)` to create a new message.
 */
export const DecisionRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 1);

/**
 * Describes the message decision.Properties.
 * Use `create(PropertiesSchema)` to create a new message.
 */
export const PropertiesSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 2);

/**
 * Describes the message decision.Overrides.
 * Use `create(OverridesSchema)` to create a new message.
 */
export const OverridesSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 3);

/**
 * Describes the message decision.ContentKeys.
 * Use `create(ContentKeysSchema)` to create a new message.
 */
export const ContentKeysSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 4);

/**
 * Describes the message decision.AdQuery.
 * Use `create(AdQuerySchema)` to create a new message.
 */
export const AdQuerySchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 5);

/**
 * Describes the message decision.Placement.
 * Use `create(PlacementSchema)` to create a new message.
 */
export const PlacementSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 6);

/**
 * Describes the message decision.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 7);

/**
 * Describes the message decision.Decision.
 * Use `create(DecisionSchema)` to create a new message.
 */
export const DecisionSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 8);

/**
 * Describes the message decision.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 9);

/**
 * Describes the message decision.Data.
 * Use `create(DataSchema)` to create a new message.
 */
export const DataSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 10);

/**
 * Describes the message decision.Content.
 * Use `create(ContentSchema)` to create a new message.
 */
export const ContentSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 11);

/**
 * Describes the message decision.PricingData.
 * Use `create(PricingDataSchema)` to create a new message.
 */
export const PricingDataSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 12);

/**
 * Describes the message decision.Decisions.
 * Use `create(DecisionsSchema)` to create a new message.
 */
export const DecisionsSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 13);

/**
 * Describes the message decision.Explain.
 * Use `create(ExplainSchema)` to create a new message.
 */
export const ExplainSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 14);

/**
 * Describes the message decision.DecisionResponse.
 * Use `create(DecisionResponseSchema)` to create a new message.
 */
export const DecisionResponseSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 15);

/**
 * Describes the message decision.ConsentRequest.
 * Use `create(ConsentRequestSchema)` to create a new message.
 */
export const ConsentRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 16);

/**
 * Describes the message decision.MatchedPoint.
 * Use `create(MatchedPointSchema)` to create a new message.
 */
export const MatchedPointSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 17);

/**
 * Describes the message decision.GeoDistanceSkipFilter.
 * Use `create(GeoDistanceSkipFilterSchema)` to create a new message.
 */
export const GeoDistanceSkipFilterSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 18);

/**
 * Describes the message decision.GeoLocationSkipFilter.
 * Use `create(GeoLocationSkipFilterSchema)` to create a new message.
 */
export const GeoLocationSkipFilterSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 19);

/**
 * Describes the message decision.SkipFilters.
 * Use `create(SkipFiltersSchema)` to create a new message.
 */
export const SkipFiltersSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 20);

/**
 * Describes the message decision.GetDecisionsRequest.
 * Use `create(GetDecisionsRequestSchema)` to create a new message.
 */
export const GetDecisionsRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 21);

/**
 * Describes the message decision.AddCustomPropertiesRequestBody.
 * Use `create(AddCustomPropertiesRequestBodySchema)` to create a new message.
 */
export const AddCustomPropertiesRequestBodySchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 22);

/**
 * Describes the message decision.AddCustomPropertiesRequest.
 * Use `create(AddCustomPropertiesRequestSchema)` to create a new message.
 */
export const AddCustomPropertiesRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 23);

/**
 * Describes the message decision.AddInterestsRequest.
 * Use `create(AddInterestsRequestSchema)` to create a new message.
 */
export const AddInterestsRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 24);

/**
 * Describes the message decision.AddRetargetingSegmentRequest.
 * Use `create(AddRetargetingSegmentRequestSchema)` to create a new message.
 */
export const AddRetargetingSegmentRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 25);

/**
 * Describes the message decision.OptOutRequest.
 * Use `create(OptOutRequestSchema)` to create a new message.
 */
export const OptOutRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 26);

/**
 * Describes the message decision.ReadRequest.
 * Use `create(ReadRequestSchema)` to create a new message.
 */
export const ReadRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 27);

/**
 * Describes the message decision.ReadOK.
 * Use `create(ReadOKSchema)` to create a new message.
 */
export const ReadOKSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 28);

/**
 * Describes the message decision.IpOverrideRequest.
 * Use `create(IpOverrideRequestSchema)` to create a new message.
 */
export const IpOverrideRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 29);

/**
 * Describes the message decision.ForgetRequest.
 * Use `create(ForgetRequestSchema)` to create a new message.
 */
export const ForgetRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 30);

/**
 * Describes the message decision.GdprConsentRequest.
 * Use `create(GdprConsentRequestSchema)` to create a new message.
 */
export const GdprConsentRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 31);

/**
 * Describes the message decision.MatchUserRequest.
 * Use `create(MatchUserRequestSchema)` to create a new message.
 */
export const MatchUserRequestSchema = /*@__PURE__*/
  messageDesc(file_kevel_advertisement_v1_decision, 32);

/**
 * @generated from service decision.DecisionService
 */
export const DecisionService = /*@__PURE__*/
  serviceDesc(file_kevel_advertisement_v1_decision, 0);

