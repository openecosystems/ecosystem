// @generated by protoc-gen-es v2.2.3
// @generated from file kevel/advertisement/v1/decision.proto (package kevel.advertisement.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { SpecResponseContext } from "../../../platform/spec/v2/spec_pb";

/**
 * Describes the file kevel/advertisement/v1/decision.proto.
 */
export declare const file_kevel_advertisement_v1_decision: GenFile;

/**
 * @generated from message kevel.advertisement.v1.Consent
 */
export declare type Consent = Message<"kevel.advertisement.v1.Consent"> & {
};

/**
 * Describes the message kevel.advertisement.v1.Consent.
 * Use `create(ConsentSchema)` to create a new message.
 */
export declare const ConsentSchema: GenMessage<Consent>;

/**
 * @generated from message kevel.advertisement.v1.DecisionRequest
 */
export declare type DecisionRequest = Message<"kevel.advertisement.v1.DecisionRequest"> & {
  /**
   * @generated from field: repeated kevel.advertisement.v1.Placement placements = 1;
   */
  placements: Placement[];

  /**
   * @generated from field: kevel.advertisement.v1.User user = 2;
   */
  user?: User;

  /**
   * @generated from field: repeated string keywords = 3;
   */
  keywords: string[];

  /**
   * @generated from field: string url = 4;
   */
  url: string;

  /**
   * @generated from field: string referrer = 5;
   */
  referrer: string;

  /**
   * @generated from field: string ip = 6;
   */
  ip: string;

  /**
   * @generated from field: repeated int64 blocked_creatives = 7;
   */
  blockedCreatives: bigint[];

  /**
   * @generated from field: bool is_mobile = 8;
   */
  isMobile: boolean;

  /**
   * @generated from field: bool include_pricing_data = 9;
   */
  includePricingData: boolean;

  /**
   * @generated from field: bool notrack = 10;
   */
  notrack: boolean;

  /**
   * @generated from field: bool enable_bot_filtering = 11;
   */
  enableBotFiltering: boolean;

  /**
   * @generated from field: bool enable_user_dbip = 12;
   */
  enableUserDbip: boolean;

  /**
   * @generated from field: kevel.advertisement.v1.Consent consent = 13;
   */
  consent?: Consent;

  /**
   * @generated from field: string device_id = 14;
   */
  deviceId: string;

  /**
   * @generated from field: bool parallel = 15;
   */
  parallel: boolean;

  /**
   * @generated from field: float intended_latitude = 16;
   */
  intendedLatitude: number;

  /**
   * @generated from field: float intended_longitude = 17;
   */
  intendedLongitude: number;

  /**
   * @generated from field: float radius = 18;
   */
  radius: number;

  /**
   * @generated from field: bool include_matched_points = 19;
   */
  includeMatchedPoints: boolean;
};

/**
 * Describes the message kevel.advertisement.v1.DecisionRequest.
 * Use `create(DecisionRequestSchema)` to create a new message.
 */
export declare const DecisionRequestSchema: GenMessage<DecisionRequest>;

/**
 * @generated from message kevel.advertisement.v1.Properties
 */
export declare type Properties = Message<"kevel.advertisement.v1.Properties"> & {
};

/**
 * Describes the message kevel.advertisement.v1.Properties.
 * Use `create(PropertiesSchema)` to create a new message.
 */
export declare const PropertiesSchema: GenMessage<Properties>;

/**
 * @generated from message kevel.advertisement.v1.Overrides
 */
export declare type Overrides = Message<"kevel.advertisement.v1.Overrides"> & {
};

/**
 * Describes the message kevel.advertisement.v1.Overrides.
 * Use `create(OverridesSchema)` to create a new message.
 */
export declare const OverridesSchema: GenMessage<Overrides>;

/**
 * @generated from message kevel.advertisement.v1.ContentKeys
 */
export declare type ContentKeys = Message<"kevel.advertisement.v1.ContentKeys"> & {
  /**
   * @generated from field: map<string, string> additional_properties = 1;
   */
  additionalProperties: { [key: string]: string };
};

/**
 * Describes the message kevel.advertisement.v1.ContentKeys.
 * Use `create(ContentKeysSchema)` to create a new message.
 */
export declare const ContentKeysSchema: GenMessage<ContentKeys>;

/**
 * @generated from message kevel.advertisement.v1.AdQuery
 */
export declare type AdQuery = Message<"kevel.advertisement.v1.AdQuery"> & {
};

/**
 * Describes the message kevel.advertisement.v1.AdQuery.
 * Use `create(AdQuerySchema)` to create a new message.
 */
export declare const AdQuerySchema: GenMessage<AdQuery>;

/**
 * @generated from message kevel.advertisement.v1.Placement
 */
export declare type Placement = Message<"kevel.advertisement.v1.Placement"> & {
  /**
   * @generated from field: string div_name = 1;
   */
  divName: string;

  /**
   * @generated from field: int32 network_id = 2;
   */
  networkId: number;

  /**
   * @generated from field: int32 site_id = 3;
   */
  siteId: number;

  /**
   * @generated from field: repeated int64 ad_types = 4;
   */
  adTypes: bigint[];

  /**
   * @generated from field: repeated int64 zone_ids = 5;
   */
  zoneIds: bigint[];

  /**
   * @generated from field: int32 campaign_id = 6;
   */
  campaignId: number;

  /**
   * @generated from field: int32 flight_id = 7;
   */
  flightId: number;

  /**
   * @generated from field: int32 ad_id = 8;
   */
  adId: number;

  /**
   * @generated from field: string click_url = 9;
   */
  clickUrl: string;

  /**
   * @generated from field: kevel.advertisement.v1.Properties properties = 10;
   */
  properties?: Properties;

  /**
   * @generated from field: repeated int64 event_ids = 11;
   */
  eventIds: bigint[];

  /**
   * @generated from field: kevel.advertisement.v1.Overrides overrides = 12;
   */
  overrides?: Overrides;

  /**
   * @generated from field: kevel.advertisement.v1.ContentKeys content_keys = 13;
   */
  contentKeys?: ContentKeys;

  /**
   * @generated from field: int32 count = 14;
   */
  count: number;

  /**
   * @generated from field: bool proportionality = 15;
   */
  proportionality: boolean;

  /**
   * @generated from field: string ecpm_partition = 16;
   */
  ecpmPartition: string;

  /**
   * @generated from field: repeated string ecpm_partitions = 17;
   */
  ecpmPartitions: string[];

  /**
   * @generated from field: int32 event_multiplier = 18;
   */
  eventMultiplier: number;

  /**
   * @generated from field: bool skip_selection = 19;
   */
  skipSelection: boolean;

  /**
   * @generated from field: kevel.advertisement.v1.AdQuery ad_query = 20;
   */
  adQuery?: AdQuery;

  /**
   * @generated from field: float floor_price = 21;
   */
  floorPrice: number;

  /**
   * @generated from field: float floor_cpc = 22;
   */
  floorCpc: number;

  /**
   * @generated from field: kevel.advertisement.v1.SkipFilters skip_filters = 23;
   */
  skipFilters?: SkipFilters;
};

/**
 * Describes the message kevel.advertisement.v1.Placement.
 * Use `create(PlacementSchema)` to create a new message.
 */
export declare const PlacementSchema: GenMessage<Placement>;

/**
 * @generated from message kevel.advertisement.v1.User
 */
export declare type User = Message<"kevel.advertisement.v1.User"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;
};

/**
 * Describes the message kevel.advertisement.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User>;

/**
 * @generated from message kevel.advertisement.v1.Decision
 */
export declare type Decision = Message<"kevel.advertisement.v1.Decision"> & {
  /**
   * @generated from field: int64 ad_id = 1;
   */
  adId: bigint;

  /**
   * @generated from field: int64 advertiser_id = 2;
   */
  advertiserId: bigint;

  /**
   * @generated from field: int64 creative_id = 3;
   */
  creativeId: bigint;

  /**
   * @generated from field: int64 flight_id = 4;
   */
  flightId: bigint;

  /**
   * @generated from field: int64 campaign_id = 5;
   */
  campaignId: bigint;

  /**
   * @generated from field: int64 priority_id = 6;
   */
  priorityId: bigint;

  /**
   * @generated from field: string click_url = 7;
   */
  clickUrl: string;

  /**
   * @generated from field: repeated kevel.advertisement.v1.Content contents = 8;
   */
  contents: Content[];

  /**
   * @generated from field: string impression_url = 9;
   */
  impressionUrl: string;

  /**
   * @generated from field: repeated kevel.advertisement.v1.Event events = 10;
   */
  events: Event[];

  /**
   * @generated from field: repeated kevel.advertisement.v1.MatchedPoint matched_points = 11;
   */
  matchedPoints: MatchedPoint[];

  /**
   * @generated from field: kevel.advertisement.v1.PricingData pricing = 12;
   */
  pricing?: PricingData;
};

/**
 * Describes the message kevel.advertisement.v1.Decision.
 * Use `create(DecisionSchema)` to create a new message.
 */
export declare const DecisionSchema: GenMessage<Decision>;

/**
 * @generated from message kevel.advertisement.v1.Event
 */
export declare type Event = Message<"kevel.advertisement.v1.Event"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string url = 2;
   */
  url: string;
};

/**
 * Describes the message kevel.advertisement.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export declare const EventSchema: GenMessage<Event>;

/**
 * @generated from message kevel.advertisement.v1.Data
 */
export declare type Data = Message<"kevel.advertisement.v1.Data"> & {
};

/**
 * Describes the message kevel.advertisement.v1.Data.
 * Use `create(DataSchema)` to create a new message.
 */
export declare const DataSchema: GenMessage<Data>;

/**
 * @generated from message kevel.advertisement.v1.Content
 */
export declare type Content = Message<"kevel.advertisement.v1.Content"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string template = 2;
   */
  template: string;

  /**
   * @generated from field: string custom_template = 3;
   */
  customTemplate: string;

  /**
   * @generated from field: kevel.advertisement.v1.Data data = 4;
   */
  data?: Data;

  /**
   * @generated from field: string body = 5;
   */
  body: string;
};

/**
 * Describes the message kevel.advertisement.v1.Content.
 * Use `create(ContentSchema)` to create a new message.
 */
export declare const ContentSchema: GenMessage<Content>;

/**
 * @generated from message kevel.advertisement.v1.PricingData
 */
export declare type PricingData = Message<"kevel.advertisement.v1.PricingData"> & {
  /**
   * @generated from field: float price = 1;
   */
  price: number;

  /**
   * @generated from field: float clear_price = 2;
   */
  clearPrice: number;

  /**
   * @generated from field: float revenue = 3;
   */
  revenue: number;

  /**
   * @generated from field: int64 rate_type = 4;
   */
  rateType: bigint;

  /**
   * @generated from field: float e_cpm = 5;
   */
  eCpm: number;
};

/**
 * Describes the message kevel.advertisement.v1.PricingData.
 * Use `create(PricingDataSchema)` to create a new message.
 */
export declare const PricingDataSchema: GenMessage<PricingData>;

/**
 * @generated from message kevel.advertisement.v1.Decisions
 */
export declare type Decisions = Message<"kevel.advertisement.v1.Decisions"> & {
};

/**
 * Describes the message kevel.advertisement.v1.Decisions.
 * Use `create(DecisionsSchema)` to create a new message.
 */
export declare const DecisionsSchema: GenMessage<Decisions>;

/**
 * @generated from message kevel.advertisement.v1.Explain
 */
export declare type Explain = Message<"kevel.advertisement.v1.Explain"> & {
};

/**
 * Describes the message kevel.advertisement.v1.Explain.
 * Use `create(ExplainSchema)` to create a new message.
 */
export declare const ExplainSchema: GenMessage<Explain>;

/**
 * @generated from message kevel.advertisement.v1.GetDecisionsResponse
 */
export declare type GetDecisionsResponse = Message<"kevel.advertisement.v1.GetDecisionsResponse"> & {
  /**
   * The response context
   *
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;

  /**
   * @generated from field: kevel.advertisement.v1.User user = 2;
   */
  user?: User;

  /**
   * @generated from field: kevel.advertisement.v1.Decisions decisions = 3;
   */
  decisions?: Decisions;

  /**
   * @generated from field: kevel.advertisement.v1.Explain explain = 4;
   */
  explain?: Explain;
};

/**
 * Describes the message kevel.advertisement.v1.GetDecisionsResponse.
 * Use `create(GetDecisionsResponseSchema)` to create a new message.
 */
export declare const GetDecisionsResponseSchema: GenMessage<GetDecisionsResponse>;

/**
 * @generated from message kevel.advertisement.v1.ConsentRequest
 */
export declare type ConsentRequest = Message<"kevel.advertisement.v1.ConsentRequest"> & {
  /**
   * @generated from field: string user_key = 1;
   */
  userKey: string;

  /**
   * @generated from field: kevel.advertisement.v1.Consent consent = 2;
   */
  consent?: Consent;
};

/**
 * Describes the message kevel.advertisement.v1.ConsentRequest.
 * Use `create(ConsentRequestSchema)` to create a new message.
 */
export declare const ConsentRequestSchema: GenMessage<ConsentRequest>;

/**
 * @generated from message kevel.advertisement.v1.MatchedPoint
 */
export declare type MatchedPoint = Message<"kevel.advertisement.v1.MatchedPoint"> & {
  /**
   * @generated from field: string lat = 1;
   */
  lat: string;

  /**
   * @generated from field: string lon = 2;
   */
  lon: string;
};

/**
 * Describes the message kevel.advertisement.v1.MatchedPoint.
 * Use `create(MatchedPointSchema)` to create a new message.
 */
export declare const MatchedPointSchema: GenMessage<MatchedPoint>;

/**
 * @generated from message kevel.advertisement.v1.GeoDistanceSkipFilter
 */
export declare type GeoDistanceSkipFilter = Message<"kevel.advertisement.v1.GeoDistanceSkipFilter"> & {
  /**
   * @generated from field: bool value = 1;
   */
  value: boolean;
};

/**
 * Describes the message kevel.advertisement.v1.GeoDistanceSkipFilter.
 * Use `create(GeoDistanceSkipFilterSchema)` to create a new message.
 */
export declare const GeoDistanceSkipFilterSchema: GenMessage<GeoDistanceSkipFilter>;

/**
 * @generated from message kevel.advertisement.v1.GeoLocationSkipFilter
 */
export declare type GeoLocationSkipFilter = Message<"kevel.advertisement.v1.GeoLocationSkipFilter"> & {
  /**
   * @generated from field: bool value = 1;
   */
  value: boolean;
};

/**
 * Describes the message kevel.advertisement.v1.GeoLocationSkipFilter.
 * Use `create(GeoLocationSkipFilterSchema)` to create a new message.
 */
export declare const GeoLocationSkipFilterSchema: GenMessage<GeoLocationSkipFilter>;

/**
 * @generated from message kevel.advertisement.v1.SkipFilters
 */
export declare type SkipFilters = Message<"kevel.advertisement.v1.SkipFilters"> & {
  /**
   * @generated from field: kevel.advertisement.v1.GeoDistanceSkipFilter distance = 1;
   */
  distance?: GeoDistanceSkipFilter;

  /**
   * @generated from field: bool facet = 2;
   */
  facet: boolean;

  /**
   * @generated from field: kevel.advertisement.v1.GeoDistanceSkipFilter geodistance = 3;
   */
  geodistance?: GeoDistanceSkipFilter;

  /**
   * @generated from field: kevel.advertisement.v1.GeoLocationSkipFilter geolocation = 4;
   */
  geolocation?: GeoLocationSkipFilter;

  /**
   * @generated from field: bool keyword = 5;
   */
  keyword: boolean;

  /**
   * @generated from field: kevel.advertisement.v1.GeoLocationSkipFilter location = 6;
   */
  location?: GeoLocationSkipFilter;

  /**
   * @generated from field: bool placement_limit = 7;
   */
  placementLimit: boolean;

  /**
   * @generated from field: bool site_zone = 8;
   */
  siteZone: boolean;
};

/**
 * Describes the message kevel.advertisement.v1.SkipFilters.
 * Use `create(SkipFiltersSchema)` to create a new message.
 */
export declare const SkipFiltersSchema: GenMessage<SkipFilters>;

/**
 * GetDecisionsParameters holds parameters to GetDecisions
 *
 * @generated from message kevel.advertisement.v1.GetDecisionsRequest
 */
export declare type GetDecisionsRequest = Message<"kevel.advertisement.v1.GetDecisionsRequest"> & {
  /**
   * @generated from field: kevel.advertisement.v1.DecisionRequest decision_request = 1;
   */
  decisionRequest?: DecisionRequest;
};

/**
 * Describes the message kevel.advertisement.v1.GetDecisionsRequest.
 * Use `create(GetDecisionsRequestSchema)` to create a new message.
 */
export declare const GetDecisionsRequestSchema: GenMessage<GetDecisionsRequest>;

/**
 * @generated from message kevel.advertisement.v1.AddCustomPropertiesRequestBody
 */
export declare type AddCustomPropertiesRequestBody = Message<"kevel.advertisement.v1.AddCustomPropertiesRequestBody"> & {
};

/**
 * Describes the message kevel.advertisement.v1.AddCustomPropertiesRequestBody.
 * Use `create(AddCustomPropertiesRequestBodySchema)` to create a new message.
 */
export declare const AddCustomPropertiesRequestBodySchema: GenMessage<AddCustomPropertiesRequestBody>;

/**
 * AddCustomPropertiesParameters holds parameters to AddCustomProperties
 *
 * @generated from message kevel.advertisement.v1.AddCustomPropertiesRequest
 */
export declare type AddCustomPropertiesRequest = Message<"kevel.advertisement.v1.AddCustomPropertiesRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: string user_key = 2;
   */
  userKey: string;

  /**
   * @generated from field: kevel.advertisement.v1.AddCustomPropertiesRequestBody add_custom_properties_request_body = 3;
   */
  addCustomPropertiesRequestBody?: AddCustomPropertiesRequestBody;
};

/**
 * Describes the message kevel.advertisement.v1.AddCustomPropertiesRequest.
 * Use `create(AddCustomPropertiesRequestSchema)` to create a new message.
 */
export declare const AddCustomPropertiesRequestSchema: GenMessage<AddCustomPropertiesRequest>;

/**
 * @generated from message kevel.advertisement.v1.AddCustomPropertiesResponse
 */
export declare type AddCustomPropertiesResponse = Message<"kevel.advertisement.v1.AddCustomPropertiesResponse"> & {
  /**
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;
};

/**
 * Describes the message kevel.advertisement.v1.AddCustomPropertiesResponse.
 * Use `create(AddCustomPropertiesResponseSchema)` to create a new message.
 */
export declare const AddCustomPropertiesResponseSchema: GenMessage<AddCustomPropertiesResponse>;

/**
 * AddInterestsParameters holds parameters to AddInterests
 *
 * @generated from message kevel.advertisement.v1.AddInterestsRequest
 */
export declare type AddInterestsRequest = Message<"kevel.advertisement.v1.AddInterestsRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: string user_key = 2;
   */
  userKey: string;

  /**
   * @generated from field: string interest = 3;
   */
  interest: string;
};

/**
 * Describes the message kevel.advertisement.v1.AddInterestsRequest.
 * Use `create(AddInterestsRequestSchema)` to create a new message.
 */
export declare const AddInterestsRequestSchema: GenMessage<AddInterestsRequest>;

/**
 * @generated from message kevel.advertisement.v1.AddInterestsResponse
 */
export declare type AddInterestsResponse = Message<"kevel.advertisement.v1.AddInterestsResponse"> & {
  /**
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;
};

/**
 * Describes the message kevel.advertisement.v1.AddInterestsResponse.
 * Use `create(AddInterestsResponseSchema)` to create a new message.
 */
export declare const AddInterestsResponseSchema: GenMessage<AddInterestsResponse>;

/**
 * AddRetargetingSegmentParameters holds parameters to AddRetargetingSegment
 *
 * @generated from message kevel.advertisement.v1.AddRetargetingSegmentRequest
 */
export declare type AddRetargetingSegmentRequest = Message<"kevel.advertisement.v1.AddRetargetingSegmentRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: int32 advertiser_id = 2;
   */
  advertiserId: number;

  /**
   * @generated from field: int32 retargeting_segment_id = 3;
   */
  retargetingSegmentId: number;

  /**
   * @generated from field: string user_key = 4;
   */
  userKey: string;
};

/**
 * Describes the message kevel.advertisement.v1.AddRetargetingSegmentRequest.
 * Use `create(AddRetargetingSegmentRequestSchema)` to create a new message.
 */
export declare const AddRetargetingSegmentRequestSchema: GenMessage<AddRetargetingSegmentRequest>;

/**
 * @generated from message kevel.advertisement.v1.AddRetargetingSegmentResponse
 */
export declare type AddRetargetingSegmentResponse = Message<"kevel.advertisement.v1.AddRetargetingSegmentResponse"> & {
  /**
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;
};

/**
 * Describes the message kevel.advertisement.v1.AddRetargetingSegmentResponse.
 * Use `create(AddRetargetingSegmentResponseSchema)` to create a new message.
 */
export declare const AddRetargetingSegmentResponseSchema: GenMessage<AddRetargetingSegmentResponse>;

/**
 * OptOutParameters holds parameters to OptOut
 *
 * @generated from message kevel.advertisement.v1.OptOutRequest
 */
export declare type OptOutRequest = Message<"kevel.advertisement.v1.OptOutRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: string user_key = 2;
   */
  userKey: string;
};

/**
 * Describes the message kevel.advertisement.v1.OptOutRequest.
 * Use `create(OptOutRequestSchema)` to create a new message.
 */
export declare const OptOutRequestSchema: GenMessage<OptOutRequest>;

/**
 * @generated from message kevel.advertisement.v1.OptOutResponse
 */
export declare type OptOutResponse = Message<"kevel.advertisement.v1.OptOutResponse"> & {
};

/**
 * Describes the message kevel.advertisement.v1.OptOutResponse.
 * Use `create(OptOutResponseSchema)` to create a new message.
 */
export declare const OptOutResponseSchema: GenMessage<OptOutResponse>;

/**
 * ReadParameters holds parameters to Read
 *
 * @generated from message kevel.advertisement.v1.ReadRequest
 */
export declare type ReadRequest = Message<"kevel.advertisement.v1.ReadRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: string user_key = 2;
   */
  userKey: string;
};

/**
 * Describes the message kevel.advertisement.v1.ReadRequest.
 * Use `create(ReadRequestSchema)` to create a new message.
 */
export declare const ReadRequestSchema: GenMessage<ReadRequest>;

/**
 * @generated from message kevel.advertisement.v1.ReadResponse
 */
export declare type ReadResponse = Message<"kevel.advertisement.v1.ReadResponse"> & {
  /**
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;
};

/**
 * Describes the message kevel.advertisement.v1.ReadResponse.
 * Use `create(ReadResponseSchema)` to create a new message.
 */
export declare const ReadResponseSchema: GenMessage<ReadResponse>;

/**
 * IpOverrideParameters holds parameters to IpOverride
 *
 * @generated from message kevel.advertisement.v1.IpOverrideRequest
 */
export declare type IpOverrideRequest = Message<"kevel.advertisement.v1.IpOverrideRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: string user_key = 2;
   */
  userKey: string;

  /**
   * @generated from field: string ip = 3;
   */
  ip: string;
};

/**
 * Describes the message kevel.advertisement.v1.IpOverrideRequest.
 * Use `create(IpOverrideRequestSchema)` to create a new message.
 */
export declare const IpOverrideRequestSchema: GenMessage<IpOverrideRequest>;

/**
 * @generated from message kevel.advertisement.v1.IpOverrideResponse
 */
export declare type IpOverrideResponse = Message<"kevel.advertisement.v1.IpOverrideResponse"> & {
  /**
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;
};

/**
 * Describes the message kevel.advertisement.v1.IpOverrideResponse.
 * Use `create(IpOverrideResponseSchema)` to create a new message.
 */
export declare const IpOverrideResponseSchema: GenMessage<IpOverrideResponse>;

/**
 * ForgetParameters holds parameters to Forget
 *
 * @generated from message kevel.advertisement.v1.ForgetRequest
 */
export declare type ForgetRequest = Message<"kevel.advertisement.v1.ForgetRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: string user_key = 2;
   */
  userKey: string;
};

/**
 * Describes the message kevel.advertisement.v1.ForgetRequest.
 * Use `create(ForgetRequestSchema)` to create a new message.
 */
export declare const ForgetRequestSchema: GenMessage<ForgetRequest>;

/**
 * @generated from message kevel.advertisement.v1.ForgetResponse
 */
export declare type ForgetResponse = Message<"kevel.advertisement.v1.ForgetResponse"> & {
};

/**
 * Describes the message kevel.advertisement.v1.ForgetResponse.
 * Use `create(ForgetResponseSchema)` to create a new message.
 */
export declare const ForgetResponseSchema: GenMessage<ForgetResponse>;

/**
 * GdprConsentParameters holds parameters to GdprConsent
 *
 * @generated from message kevel.advertisement.v1.GdprConsentRequest
 */
export declare type GdprConsentRequest = Message<"kevel.advertisement.v1.GdprConsentRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: kevel.advertisement.v1.ConsentRequest consent_request = 2;
   */
  consentRequest?: ConsentRequest;
};

/**
 * Describes the message kevel.advertisement.v1.GdprConsentRequest.
 * Use `create(GdprConsentRequestSchema)` to create a new message.
 */
export declare const GdprConsentRequestSchema: GenMessage<GdprConsentRequest>;

/**
 * @generated from message kevel.advertisement.v1.GdprConsentResponse
 */
export declare type GdprConsentResponse = Message<"kevel.advertisement.v1.GdprConsentResponse"> & {
  /**
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;
};

/**
 * Describes the message kevel.advertisement.v1.GdprConsentResponse.
 * Use `create(GdprConsentResponseSchema)` to create a new message.
 */
export declare const GdprConsentResponseSchema: GenMessage<GdprConsentResponse>;

/**
 * MatchUserParameters holds parameters to MatchUser
 *
 * @generated from message kevel.advertisement.v1.MatchUserRequest
 */
export declare type MatchUserRequest = Message<"kevel.advertisement.v1.MatchUserRequest"> & {
  /**
   * @generated from field: int32 network_id = 1;
   */
  networkId: number;

  /**
   * @generated from field: string user_key = 2;
   */
  userKey: string;

  /**
   * @generated from field: int32 partner_id = 3;
   */
  partnerId: number;

  /**
   * @generated from field: int32 user_id = 4;
   */
  userId: number;
};

/**
 * Describes the message kevel.advertisement.v1.MatchUserRequest.
 * Use `create(MatchUserRequestSchema)` to create a new message.
 */
export declare const MatchUserRequestSchema: GenMessage<MatchUserRequest>;

/**
 * @generated from message kevel.advertisement.v1.MatchUserResponse
 */
export declare type MatchUserResponse = Message<"kevel.advertisement.v1.MatchUserResponse"> & {
  /**
   * @generated from field: platform.spec.v2.SpecResponseContext spec_context = 1;
   */
  specContext?: SpecResponseContext;
};

/**
 * Describes the message kevel.advertisement.v1.MatchUserResponse.
 * Use `create(MatchUserResponseSchema)` to create a new message.
 */
export declare const MatchUserResponseSchema: GenMessage<MatchUserResponse>;

/**
 * @generated from service kevel.advertisement.v1.DecisionService
 */
export declare const DecisionService: GenService<{
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.GetDecisions
   */
  getDecisions: {
    methodKind: "unary";
    input: typeof GetDecisionsRequestSchema;
    output: typeof GetDecisionsResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.AddCustomProperties
   */
  addCustomProperties: {
    methodKind: "unary";
    input: typeof AddCustomPropertiesRequestSchema;
    output: typeof AddCustomPropertiesResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.AddInterests
   */
  addInterests: {
    methodKind: "unary";
    input: typeof AddInterestsRequestSchema;
    output: typeof AddInterestsResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.AddRetargetingSegment
   */
  addRetargetingSegment: {
    methodKind: "unary";
    input: typeof AddRetargetingSegmentRequestSchema;
    output: typeof AddRetargetingSegmentResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.OptOut
   */
  optOut: {
    methodKind: "unary";
    input: typeof OptOutRequestSchema;
    output: typeof OptOutResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.Read
   */
  read: {
    methodKind: "unary";
    input: typeof ReadRequestSchema;
    output: typeof ReadResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.IpOverride
   */
  ipOverride: {
    methodKind: "unary";
    input: typeof IpOverrideRequestSchema;
    output: typeof IpOverrideResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.Forget
   */
  forget: {
    methodKind: "unary";
    input: typeof ForgetRequestSchema;
    output: typeof ForgetResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.GdprConsent
   */
  gdprConsent: {
    methodKind: "unary";
    input: typeof GdprConsentRequestSchema;
    output: typeof GdprConsentResponseSchema;
  },
  /**
   * @generated from rpc kevel.advertisement.v1.DecisionService.MatchUser
   */
  matchUser: {
    methodKind: "unary";
    input: typeof MatchUserRequestSchema;
    output: typeof MatchUserResponseSchema;
  },
}>;

