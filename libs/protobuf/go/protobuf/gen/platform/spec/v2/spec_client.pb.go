// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: platform/spec/v2/spec_client.proto

package specv2pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "libs/protobuf/go/protobuf/gen/platform/options/v2"
	v2 "libs/protobuf/go/protobuf/gen/platform/type/v2"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pki struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ca            string                 `protobuf:"bytes,1,opt,name=ca,proto3" json:"ca,omitempty"`
	Cert          string                 `protobuf:"bytes,2,opt,name=cert,proto3" json:"cert,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pki) Reset() {
	*x = Pki{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pki) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pki) ProtoMessage() {}

func (x *Pki) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pki.ProtoReflect.Descriptor instead.
func (*Pki) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{0}
}

func (x *Pki) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

func (x *Pki) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *Pki) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type StaticHostMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Map           []string               `protobuf:"bytes,2,rep,name=map,proto3" json:"map,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticHostMap) Reset() {
	*x = StaticHostMap{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticHostMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticHostMap) ProtoMessage() {}

func (x *StaticHostMap) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticHostMap.ProtoReflect.Descriptor instead.
func (*StaticHostMap) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{1}
}

func (x *StaticHostMap) GetMap() []string {
	if x != nil {
		return x.Map
	}
	return nil
}

type Punchy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Punch         bool                   `protobuf:"varint,1,opt,name=punch,proto3" json:"punch,omitempty"`
	Respond       bool                   `protobuf:"varint,2,opt,name=respond,proto3" json:"respond,omitempty"`
	Delay         string                 `protobuf:"bytes,3,opt,name=delay,proto3" json:"delay,omitempty"`
	RespondDelay  string                 `protobuf:"bytes,4,opt,name=respond_delay,json=respondDelay,proto3" json:"respond_delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Punchy) Reset() {
	*x = Punchy{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Punchy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Punchy) ProtoMessage() {}

func (x *Punchy) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Punchy.ProtoReflect.Descriptor instead.
func (*Punchy) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{2}
}

func (x *Punchy) GetPunch() bool {
	if x != nil {
		return x.Punch
	}
	return false
}

func (x *Punchy) GetRespond() bool {
	if x != nil {
		return x.Respond
	}
	return false
}

func (x *Punchy) GetDelay() string {
	if x != nil {
		return x.Delay
	}
	return ""
}

func (x *Punchy) GetRespondDelay() string {
	if x != nil {
		return x.RespondDelay
	}
	return ""
}

type Lighthouse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []string               `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Interval      uint32                 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lighthouse) Reset() {
	*x = Lighthouse{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lighthouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lighthouse) ProtoMessage() {}

func (x *Lighthouse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lighthouse.ProtoReflect.Descriptor instead.
func (*Lighthouse) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{3}
}

func (x *Lighthouse) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *Lighthouse) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type SpecSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description   string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Platform      *SpecSettingsPlatform `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`
	Context       *SpecSettingsContext  `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
	Systems2      []*SpecSystem         `protobuf:"bytes,6,rep,name=systems2,proto3" json:"systems2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpecSettings) Reset() {
	*x = SpecSettings{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSettings) ProtoMessage() {}

func (x *SpecSettings) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSettings.ProtoReflect.Descriptor instead.
func (*SpecSettings) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{4}
}

func (x *SpecSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpecSettings) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SpecSettings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SpecSettings) GetPlatform() *SpecSettingsPlatform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *SpecSettings) GetContext() *SpecSettingsContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *SpecSettings) GetSystems2() []*SpecSystem {
	if x != nil {
		return x.Systems2
	}
	return nil
}

type SpecSettingsMesh struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Insecure      bool                   `protobuf:"varint,3,opt,name=insecure,proto3" json:"insecure,omitempty"`
	DnsEndpoint   string                 `protobuf:"bytes,4,opt,name=dns_endpoint,json=dnsEndpoint,proto3" json:"dns_endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpecSettingsMesh) Reset() {
	*x = SpecSettingsMesh{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecSettingsMesh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSettingsMesh) ProtoMessage() {}

func (x *SpecSettingsMesh) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSettingsMesh.ProtoReflect.Descriptor instead.
func (*SpecSettingsMesh) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{5}
}

func (x *SpecSettingsMesh) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SpecSettingsMesh) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *SpecSettingsMesh) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *SpecSettingsMesh) GetDnsEndpoint() string {
	if x != nil {
		return x.DnsEndpoint
	}
	return ""
}

type SpecSettingsPlatform struct {
	state               protoimpl.MessageState    `protogen:"open.v1"`
	Endpoint            string                    `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Insecure            bool                      `protobuf:"varint,2,opt,name=insecure,proto3" json:"insecure,omitempty"`
	DnsEndpoints        []string                  `protobuf:"bytes,3,rep,name=dns_endpoints,json=dnsEndpoints,proto3" json:"dns_endpoints,omitempty"`
	Mesh                *SpecSettingsMesh         `protobuf:"bytes,4,opt,name=mesh,proto3" json:"mesh,omitempty"`
	Pki                 *Pki                      `protobuf:"bytes,5,opt,name=pki,proto3" json:"pki,omitempty"`
	Punchy              *Punchy                   `protobuf:"bytes,6,opt,name=punchy,proto3" json:"punchy,omitempty"`
	Lighthouse          *Lighthouse               `protobuf:"bytes,7,opt,name=lighthouse,proto3" json:"lighthouse,omitempty"`
	StaticHostMap       map[string]*StaticHostMap `protobuf:"bytes,8,rep,name=static_host_map,json=staticHostMap,proto3" json:"static_host_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DynamicConfigReload bool                      `protobuf:"varint,9,opt,name=dynamic_config_reload,json=dynamicConfigReload,proto3" json:"dynamic_config_reload,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SpecSettingsPlatform) Reset() {
	*x = SpecSettingsPlatform{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecSettingsPlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSettingsPlatform) ProtoMessage() {}

func (x *SpecSettingsPlatform) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSettingsPlatform.ProtoReflect.Descriptor instead.
func (*SpecSettingsPlatform) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{6}
}

func (x *SpecSettingsPlatform) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *SpecSettingsPlatform) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *SpecSettingsPlatform) GetDnsEndpoints() []string {
	if x != nil {
		return x.DnsEndpoints
	}
	return nil
}

func (x *SpecSettingsPlatform) GetMesh() *SpecSettingsMesh {
	if x != nil {
		return x.Mesh
	}
	return nil
}

func (x *SpecSettingsPlatform) GetPki() *Pki {
	if x != nil {
		return x.Pki
	}
	return nil
}

func (x *SpecSettingsPlatform) GetPunchy() *Punchy {
	if x != nil {
		return x.Punchy
	}
	return nil
}

func (x *SpecSettingsPlatform) GetLighthouse() *Lighthouse {
	if x != nil {
		return x.Lighthouse
	}
	return nil
}

func (x *SpecSettingsPlatform) GetStaticHostMap() map[string]*StaticHostMap {
	if x != nil {
		return x.StaticHostMap
	}
	return nil
}

func (x *SpecSettingsPlatform) GetDynamicConfigReload() bool {
	if x != nil {
		return x.DynamicConfigReload
	}
	return false
}

type SpecSettingsContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The API key associated with this request
	ApiKey        string       `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Headers       []*v2.Header `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpecSettingsContext) Reset() {
	*x = SpecSettingsContext{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecSettingsContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSettingsContext) ProtoMessage() {}

func (x *SpecSettingsContext) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSettingsContext.ProtoReflect.Descriptor instead.
func (*SpecSettingsContext) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{7}
}

func (x *SpecSettingsContext) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *SpecSettingsContext) GetHeaders() []*v2.Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

type DependencyRegistry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Git           *v2.GitRepository      `protobuf:"bytes,1,opt,name=git,proto3" json:"git,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Registry      string                 `protobuf:"bytes,3,opt,name=registry,proto3" json:"registry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DependencyRegistry) Reset() {
	*x = DependencyRegistry{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DependencyRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyRegistry) ProtoMessage() {}

func (x *DependencyRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyRegistry.ProtoReflect.Descriptor instead.
func (*DependencyRegistry) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{8}
}

func (x *DependencyRegistry) GetGit() *v2.GitRepository {
	if x != nil {
		return x.Git
	}
	return nil
}

func (x *DependencyRegistry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DependencyRegistry) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

type SpecSystem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Protocols     []v2.Protocol          `protobuf:"varint,3,rep,packed,name=protocols,proto3,enum=platform.type.v2.Protocol" json:"protocols,omitempty"`
	Registry      *DependencyRegistry    `protobuf:"bytes,4,opt,name=registry,proto3" json:"registry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpecSystem) Reset() {
	*x = SpecSystem{}
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSystem) ProtoMessage() {}

func (x *SpecSystem) ProtoReflect() protoreflect.Message {
	mi := &file_platform_spec_v2_spec_client_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSystem.ProtoReflect.Descriptor instead.
func (*SpecSystem) Descriptor() ([]byte, []int) {
	return file_platform_spec_v2_spec_client_proto_rawDescGZIP(), []int{9}
}

func (x *SpecSystem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpecSystem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SpecSystem) GetProtocols() []v2.Protocol {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *SpecSystem) GetRegistry() *DependencyRegistry {
	if x != nil {
		return x.Registry
	}
	return nil
}

var File_platform_spec_v2_spec_client_proto protoreflect.FileDescriptor

var file_platform_spec_v2_spec_client_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f,
	0x76, 0x32, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x1a, 0x25, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x32, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76,
	0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x25, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x76, 0x32, 0x2f, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x03, 0x50, 0x6b, 0x69, 0x12, 0x0e, 0x0a,
	0x02, 0x63, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x21, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x48, 0x6f, 0x73,
	0x74, 0x4d, 0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x22, 0x73, 0x0a, 0x06, 0x50, 0x75, 0x6e, 0x63, 0x68, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x75, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x70, 0x75, 0x6e, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x3e, 0x0a, 0x0a, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xa5, 0x02, 0x0a, 0x0c,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x3f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x32, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x32, 0x3a, 0x06, 0xfa, 0xb6, 0x18,
	0x02, 0x08, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x4d, 0x65, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6e,
	0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xc6, 0x04,
	0x0a, 0x14, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6e, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x65, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x4d, 0x65, 0x73, 0x68, 0x52, 0x04, 0x6d, 0x65, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x03, 0x70,
	0x6b, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6b, 0x69, 0x52,
	0x03, 0x70, 0x6b, 0x69, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x75, 0x6e, 0x63, 0x68, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x6e, 0x63, 0x68, 0x79, 0x52, 0x06,
	0x70, 0x75, 0x6e, 0x63, 0x68, 0x79, 0x12, 0x3c, 0x0a, 0x0a, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x0a, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x48, 0x6f, 0x73, 0x74,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x48, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x61, 0x0a, 0x12, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x48, 0x6f, 0x73, 0x74,
	0x4d, 0x61, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x06,
	0xfa, 0xb6, 0x18, 0x02, 0x08, 0x01, 0x22, 0x6a, 0x0a, 0x13, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x3a, 0x06, 0xfa, 0xb6, 0x18, 0x02,
	0x08, 0x01, 0x22, 0x77, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x03, 0x67, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x03, 0x67, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0xb6, 0x01, 0x0a, 0x0a,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x42, 0x39, 0x5a, 0x37, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73,
	0x70, 0x65, 0x63, 0x2f, 0x76, 0x32, 0x3b, 0x73, 0x70, 0x65, 0x63, 0x76, 0x32, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_platform_spec_v2_spec_client_proto_rawDescOnce sync.Once
	file_platform_spec_v2_spec_client_proto_rawDescData []byte
)

func file_platform_spec_v2_spec_client_proto_rawDescGZIP() []byte {
	file_platform_spec_v2_spec_client_proto_rawDescOnce.Do(func() {
		file_platform_spec_v2_spec_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_spec_v2_spec_client_proto_rawDesc), len(file_platform_spec_v2_spec_client_proto_rawDesc)))
	})
	return file_platform_spec_v2_spec_client_proto_rawDescData
}

var file_platform_spec_v2_spec_client_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_platform_spec_v2_spec_client_proto_goTypes = []any{
	(*Pki)(nil),                  // 0: platform.spec.v2.Pki
	(*StaticHostMap)(nil),        // 1: platform.spec.v2.StaticHostMap
	(*Punchy)(nil),               // 2: platform.spec.v2.Punchy
	(*Lighthouse)(nil),           // 3: platform.spec.v2.Lighthouse
	(*SpecSettings)(nil),         // 4: platform.spec.v2.SpecSettings
	(*SpecSettingsMesh)(nil),     // 5: platform.spec.v2.SpecSettingsMesh
	(*SpecSettingsPlatform)(nil), // 6: platform.spec.v2.SpecSettingsPlatform
	(*SpecSettingsContext)(nil),  // 7: platform.spec.v2.SpecSettingsContext
	(*DependencyRegistry)(nil),   // 8: platform.spec.v2.DependencyRegistry
	(*SpecSystem)(nil),           // 9: platform.spec.v2.SpecSystem
	nil,                          // 10: platform.spec.v2.SpecSettingsPlatform.StaticHostMapEntry
	(*v2.Header)(nil),            // 11: platform.type.v2.Header
	(*v2.GitRepository)(nil),     // 12: platform.type.v2.GitRepository
	(v2.Protocol)(0),             // 13: platform.type.v2.Protocol
}
var file_platform_spec_v2_spec_client_proto_depIdxs = []int32{
	6,  // 0: platform.spec.v2.SpecSettings.platform:type_name -> platform.spec.v2.SpecSettingsPlatform
	7,  // 1: platform.spec.v2.SpecSettings.context:type_name -> platform.spec.v2.SpecSettingsContext
	9,  // 2: platform.spec.v2.SpecSettings.systems2:type_name -> platform.spec.v2.SpecSystem
	5,  // 3: platform.spec.v2.SpecSettingsPlatform.mesh:type_name -> platform.spec.v2.SpecSettingsMesh
	0,  // 4: platform.spec.v2.SpecSettingsPlatform.pki:type_name -> platform.spec.v2.Pki
	2,  // 5: platform.spec.v2.SpecSettingsPlatform.punchy:type_name -> platform.spec.v2.Punchy
	3,  // 6: platform.spec.v2.SpecSettingsPlatform.lighthouse:type_name -> platform.spec.v2.Lighthouse
	10, // 7: platform.spec.v2.SpecSettingsPlatform.static_host_map:type_name -> platform.spec.v2.SpecSettingsPlatform.StaticHostMapEntry
	11, // 8: platform.spec.v2.SpecSettingsContext.headers:type_name -> platform.type.v2.Header
	12, // 9: platform.spec.v2.DependencyRegistry.git:type_name -> platform.type.v2.GitRepository
	13, // 10: platform.spec.v2.SpecSystem.protocols:type_name -> platform.type.v2.Protocol
	8,  // 11: platform.spec.v2.SpecSystem.registry:type_name -> platform.spec.v2.DependencyRegistry
	1,  // 12: platform.spec.v2.SpecSettingsPlatform.StaticHostMapEntry.value:type_name -> platform.spec.v2.StaticHostMap
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_platform_spec_v2_spec_client_proto_init() }
func file_platform_spec_v2_spec_client_proto_init() {
	if File_platform_spec_v2_spec_client_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_spec_v2_spec_client_proto_rawDesc), len(file_platform_spec_v2_spec_client_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_platform_spec_v2_spec_client_proto_goTypes,
		DependencyIndexes: file_platform_spec_v2_spec_client_proto_depIdxs,
		MessageInfos:      file_platform_spec_v2_spec_client_proto_msgTypes,
	}.Build()
	File_platform_spec_v2_spec_client_proto = out.File
	file_platform_spec_v2_spec_client_proto_goTypes = nil
	file_platform_spec_v2_spec_client_proto_depIdxs = nil
}
