// Code generated by protoc-gen-platform go/cli-methods-v2beta. DO NOT EDIT.
// source: platform/ecosystem/v2alpha/ecosystem.proto

package ecosystemv2alphapbcli

import (
	"connectrpc.com/connect"
	"encoding/json"
	clog "github.com/charmbracelet/log"
	sdkv2betalib "github.com/openecosystems/ecosystem/go/oeco-sdk/v2beta"
	"github.com/spf13/cobra"
	"google.golang.org/protobuf/encoding/protojson"
	"os"

	adinosdkv2beta "github.com/adino/platform/go/adino-sdk/v2beta"

	"github.com/openecosystems/ecosystem/go/oeco-sdk/v2beta/gen/platform/ecosystem/v2alpha"
)

var (
	deleteEcosystemRequest      string
	deleteEcosystemFieldMask    string
	deleteEcosystemValidateOnly bool
)

var DeleteEcosystemV2AlphaCmd = &cobra.Command{
	Use:   "delete",
	Short: ``,
	Long:  `[]`,
	Run: func(cmd *cobra.Command, args []string) {
		log := cmd.Context().Value(sdkv2betalib.LoggerContextKey).(*clog.Logger)
		log.Debug("Calling deleteEcosystem ecosystem")
		//settings := cmd.Root().Context().Value(sdkv2betalib.SettingsContextKey).(*sdkv2betalib.CLIConfiguration)

		_, err := cmd.Flags().GetString("field-mask")
		if err != nil {
			log.Error(err)
			os.Exit(1)
		}

		_, err = cmd.Flags().GetBool("validate-only")
		if err != nil {
			log.Error(err)
			os.Exit(1)
		}

		_request, err := cmd.Flags().GetString("request")
		if err != nil {
			log.Error(err)
			os.Exit(1)
		}

		if _request == "" {
			_request = "{}"
		}

		_r := ecosystemv2alphapb.DeleteEcosystemRequest{}
		err = protojson.Unmarshal([]byte(_request), &_r)
		if err != nil {
			log.Error(err)
			os.Exit(1)
		}

		request := connect.NewRequest[ecosystemv2alphapb.DeleteEcosystemRequest](&_r)
		adino, err := adinosdkv2beta.NewAdinoClient()
		if err != nil {
			log.Error(err)
			os.Exit(1)
		}

		response, err := adino.Ecosystem.EcosystemService.DeleteEcosystem(cmd.Context(), request)
		if err != nil {
			log.Error(err)
			os.Exit(1)
		}

		val, _ := json.MarshalIndent(&response, "", "    ")
		log.Info(string(val))
	},
}

func init() {
	DeleteEcosystemV2AlphaCmd.PersistentFlags().StringVarP(&deleteEcosystemRequest, "request", "r", "{}", "Request for api call")
	DeleteEcosystemV2AlphaCmd.PersistentFlags().BoolVar(&deleteEcosystemValidateOnly, "validate-only", false, "Only validate this request without modifying the resource")
	DeleteEcosystemV2AlphaCmd.PersistentFlags().StringVarP(&deleteEcosystemFieldMask, "field-mask", "m", "", "Limit the returned response fields")
}
