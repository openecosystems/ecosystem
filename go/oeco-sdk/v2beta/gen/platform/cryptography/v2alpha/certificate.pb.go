// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: platform/cryptography/v2alpha/certificate.proto

package cryptographyv2alphapb

import (
	_ "github.com/openecosystems/ecosystem/go/oeco-sdk/v2beta/gen/platform/options/v2"
	v21 "github.com/openecosystems/ecosystem/go/oeco-sdk/v2beta/gen/platform/spec/v2"
	v2 "github.com/openecosystems/ecosystem/go/oeco-sdk/v2beta/gen/platform/type/v2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The current status of a certificate
type EventCertificateStatus int32

const (
	EventCertificateStatus_EVENT_CERTIFICATE_STATUS_UNSPECIFIED EventCertificateStatus = 0 // Unspecified or unknown status.
	EventCertificateStatus_EVENT_CERTIFICATE_STATUS_VERIFYING   EventCertificateStatus = 1 // Certificate is being verified.
	EventCertificateStatus_EVENT_CERTIFICATE_STATUS_SIGNING     EventCertificateStatus = 2 // Certificate is being signed.
	EventCertificateStatus_EVENT_CERTIFICATE_STATUS_ERROR       EventCertificateStatus = 3 // Error.
)

// Enum value maps for EventCertificateStatus.
var (
	EventCertificateStatus_name = map[int32]string{
		0: "EVENT_CERTIFICATE_STATUS_UNSPECIFIED",
		1: "EVENT_CERTIFICATE_STATUS_VERIFYING",
		2: "EVENT_CERTIFICATE_STATUS_SIGNING",
		3: "EVENT_CERTIFICATE_STATUS_ERROR",
	}
	EventCertificateStatus_value = map[string]int32{
		"EVENT_CERTIFICATE_STATUS_UNSPECIFIED": 0,
		"EVENT_CERTIFICATE_STATUS_VERIFYING":   1,
		"EVENT_CERTIFICATE_STATUS_SIGNING":     2,
		"EVENT_CERTIFICATE_STATUS_ERROR":       3,
	}
)

func (x EventCertificateStatus) Enum() *EventCertificateStatus {
	p := new(EventCertificateStatus)
	*p = x
	return p
}

func (x EventCertificateStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCertificateStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_cryptography_v2alpha_certificate_proto_enumTypes[0].Descriptor()
}

func (EventCertificateStatus) Type() protoreflect.EnumType {
	return &file_platform_cryptography_v2alpha_certificate_proto_enumTypes[0]
}

func (x EventCertificateStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCertificateStatus.Descriptor instead.
func (EventCertificateStatus) EnumDescriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{0}
}

type CertificateCommands int32

const (
	CertificateCommands_CERTIFICATE_COMMANDS_UNSPECIFIED        CertificateCommands = 0 // Unspecified or unknown command
	CertificateCommands_CERTIFICATE_COMMANDS_VERIFY_CERTIFICATE CertificateCommands = 1
	CertificateCommands_CERTIFICATE_COMMANDS_SIGN_CERTIFICATE   CertificateCommands = 2
)

// Enum value maps for CertificateCommands.
var (
	CertificateCommands_name = map[int32]string{
		0: "CERTIFICATE_COMMANDS_UNSPECIFIED",
		1: "CERTIFICATE_COMMANDS_VERIFY_CERTIFICATE",
		2: "CERTIFICATE_COMMANDS_SIGN_CERTIFICATE",
	}
	CertificateCommands_value = map[string]int32{
		"CERTIFICATE_COMMANDS_UNSPECIFIED":        0,
		"CERTIFICATE_COMMANDS_VERIFY_CERTIFICATE": 1,
		"CERTIFICATE_COMMANDS_SIGN_CERTIFICATE":   2,
	}
)

func (x CertificateCommands) Enum() *CertificateCommands {
	p := new(CertificateCommands)
	*p = x
	return p
}

func (x CertificateCommands) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CertificateCommands) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_cryptography_v2alpha_certificate_proto_enumTypes[1].Descriptor()
}

func (CertificateCommands) Type() protoreflect.EnumType {
	return &file_platform_cryptography_v2alpha_certificate_proto_enumTypes[1]
}

func (x CertificateCommands) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CertificateCommands.Descriptor instead.
func (CertificateCommands) EnumDescriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{1}
}

type CertificateEvents int32

const (
	// Unspecified or unknown event.
	CertificateEvents_CERTIFICATE_EVENTS_UNSPECIFIED          CertificateEvents = 0
	CertificateEvents_CERTIFICATE_EVENTS_VERIFIED_CERTIFICATE CertificateEvents = 1
	CertificateEvents_CERTIFICATE_EVENTS_SIGNED_CERTIFICATE   CertificateEvents = 2
)

// Enum value maps for CertificateEvents.
var (
	CertificateEvents_name = map[int32]string{
		0: "CERTIFICATE_EVENTS_UNSPECIFIED",
		1: "CERTIFICATE_EVENTS_VERIFIED_CERTIFICATE",
		2: "CERTIFICATE_EVENTS_SIGNED_CERTIFICATE",
	}
	CertificateEvents_value = map[string]int32{
		"CERTIFICATE_EVENTS_UNSPECIFIED":          0,
		"CERTIFICATE_EVENTS_VERIFIED_CERTIFICATE": 1,
		"CERTIFICATE_EVENTS_SIGNED_CERTIFICATE":   2,
	}
)

func (x CertificateEvents) Enum() *CertificateEvents {
	p := new(CertificateEvents)
	*p = x
	return p
}

func (x CertificateEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CertificateEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_cryptography_v2alpha_certificate_proto_enumTypes[2].Descriptor()
}

func (CertificateEvents) Type() protoreflect.EnumType {
	return &file_platform_cryptography_v2alpha_certificate_proto_enumTypes[2]
}

func (x CertificateEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CertificateEvents.Descriptor instead.
func (CertificateEvents) EnumDescriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{2}
}

type CertificateConfiguration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pki           string                 `protobuf:"bytes,1,opt,name=pki,proto3" json:"pki,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertificateConfiguration) Reset() {
	*x = CertificateConfiguration{}
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateConfiguration) ProtoMessage() {}

func (x *CertificateConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateConfiguration.ProtoReflect.Descriptor instead.
func (*CertificateConfiguration) Descriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{0}
}

func (x *CertificateConfiguration) GetPki() string {
	if x != nil {
		return x.Pki
	}
	return ""
}

// Request for VerifyCertificate
type VerifyCertificateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Certificate   *v2.File               `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCertificateRequest) Reset() {
	*x = VerifyCertificateRequest{}
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCertificateRequest) ProtoMessage() {}

func (x *VerifyCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCertificateRequest.ProtoReflect.Descriptor instead.
func (*VerifyCertificateRequest) Descriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{1}
}

func (x *VerifyCertificateRequest) GetCertificate() *v2.File {
	if x != nil {
		return x.Certificate
	}
	return nil
}

// Response to VerifyCertificate
type VerifyCertificateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The response context
	SpecContext   *v21.SpecResponseContext `protobuf:"bytes,1,opt,name=spec_context,json=specContext,proto3" json:"spec_context,omitempty"`
	Certificate   *Certificate             `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCertificateResponse) Reset() {
	*x = VerifyCertificateResponse{}
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCertificateResponse) ProtoMessage() {}

func (x *VerifyCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCertificateResponse.ProtoReflect.Descriptor instead.
func (*VerifyCertificateResponse) Descriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyCertificateResponse) GetSpecContext() *v21.SpecResponseContext {
	if x != nil {
		return x.SpecContext
	}
	return nil
}

func (x *VerifyCertificateResponse) GetCertificate() *Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

// Request for SignCertificate
type SignCertificateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Certificate   *v2.File               `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignCertificateRequest) Reset() {
	*x = SignCertificateRequest{}
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignCertificateRequest) ProtoMessage() {}

func (x *SignCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignCertificateRequest.ProtoReflect.Descriptor instead.
func (*SignCertificateRequest) Descriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{3}
}

func (x *SignCertificateRequest) GetCertificate() *v2.File {
	if x != nil {
		return x.Certificate
	}
	return nil
}

// Response to VerifyCertificate
type SignCertificateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The response context
	SpecContext   *v21.SpecResponseContext `protobuf:"bytes,1,opt,name=spec_context,json=specContext,proto3" json:"spec_context,omitempty"`
	Certificate   *Certificate             `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignCertificateResponse) Reset() {
	*x = SignCertificateResponse{}
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignCertificateResponse) ProtoMessage() {}

func (x *SignCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignCertificateResponse.ProtoReflect.Descriptor instead.
func (*SignCertificateResponse) Descriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{4}
}

func (x *SignCertificateResponse) GetSpecContext() *v21.SpecResponseContext {
	if x != nil {
		return x.SpecContext
	}
	return nil
}

func (x *SignCertificateResponse) GetCertificate() *Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type Certificate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier for this Certificate Authority
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Timestamp indicating when this event subscription was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp indicating when this event subscription was last updated.
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Duration      *durationpb.Duration   `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Certificate   *v2.File               `protobuf:"bytes,7,opt,name=certificate,proto3" json:"certificate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_platform_cryptography_v2alpha_certificate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP(), []int{5}
}

func (x *Certificate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Certificate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Certificate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Certificate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Certificate) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Certificate) GetCertificate() *v2.File {
	if x != nil {
		return x.Certificate
	}
	return nil
}

var File_platform_cryptography_v2alpha_certificate_proto protoreflect.FileDescriptor

const file_platform_cryptography_v2alpha_certificate_proto_rawDesc = "" +
	"\n" +
	"/platform/cryptography/v2alpha/certificate.proto\x12\x1dplatform.cryptography.v2alpha\x1a\x1cgoogle/api/annotations.proto\x1a%platform/options/v2/annotations.proto\x1a\x1bplatform/spec/v2/spec.proto\x1a\x1bplatform/type/v2/file.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\",\n" +
	"\x18CertificateConfiguration\x12\x10\n" +
	"\x03pki\x18\x01 \x01(\tR\x03pki\"\\\n" +
	"\x18VerifyCertificateRequest\x128\n" +
	"\vcertificate\x18\x01 \x01(\v2\x16.platform.type.v2.FileR\vcertificate:\x06\xfa\xb6\x18\x02\b\x01\"\xbb\x01\n" +
	"\x19VerifyCertificateResponse\x12H\n" +
	"\fspec_context\x18\x01 \x01(\v2%.platform.spec.v2.SpecResponseContextR\vspecContext\x12L\n" +
	"\vcertificate\x18\x02 \x01(\v2*.platform.cryptography.v2alpha.CertificateR\vcertificate:\x06\xfa\xb6\x18\x02\b\x02\"Z\n" +
	"\x16SignCertificateRequest\x128\n" +
	"\vcertificate\x18\x01 \x01(\v2\x16.platform.type.v2.FileR\vcertificate:\x06\xfa\xb6\x18\x02\b\x01\"\xb9\x01\n" +
	"\x17SignCertificateResponse\x12H\n" +
	"\fspec_context\x18\x01 \x01(\v2%.platform.spec.v2.SpecResponseContextR\vspecContext\x12L\n" +
	"\vcertificate\x18\x02 \x01(\v2*.platform.cryptography.v2alpha.CertificateR\vcertificate:\x06\xfa\xb6\x18\x02\b\x02\"\xa8\x02\n" +
	"\vCertificate\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06ʷ\x18\x02\b\x01R\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x125\n" +
	"\bduration\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\bduration\x128\n" +
	"\vcertificate\x18\a \x01(\v2\x16.platform.type.v2.FileR\vcertificate:\x06\xfa\xb6\x18\x02\b\x02*\xb4\x01\n" +
	"\x16EventCertificateStatus\x12(\n" +
	"$EVENT_CERTIFICATE_STATUS_UNSPECIFIED\x10\x00\x12&\n" +
	"\"EVENT_CERTIFICATE_STATUS_VERIFYING\x10\x01\x12$\n" +
	" EVENT_CERTIFICATE_STATUS_SIGNING\x10\x02\x12\"\n" +
	"\x1eEVENT_CERTIFICATE_STATUS_ERROR\x10\x03*\x9b\x01\n" +
	"\x13CertificateCommands\x12$\n" +
	" CERTIFICATE_COMMANDS_UNSPECIFIED\x10\x00\x12+\n" +
	"'CERTIFICATE_COMMANDS_VERIFY_CERTIFICATE\x10\x01\x12)\n" +
	"%CERTIFICATE_COMMANDS_SIGN_CERTIFICATE\x10\x02\x1a\x06\x92\xb8\x18\x02\b\x03*\x97\x01\n" +
	"\x11CertificateEvents\x12\"\n" +
	"\x1eCERTIFICATE_EVENTS_UNSPECIFIED\x10\x00\x12+\n" +
	"'CERTIFICATE_EVENTS_VERIFIED_CERTIFICATE\x10\x01\x12)\n" +
	"%CERTIFICATE_EVENTS_SIGNED_CERTIFICATE\x10\x02\x1a\x06\x92\xb8\x18\x02\b\x042\xc8\x03\n" +
	"\x12CertificateService\x12\xdd\x01\n" +
	"\x11VerifyCertificate\x127.platform.cryptography.v2alpha.VerifyCertificateRequest\x1a8.platform.cryptography.v2alpha.VerifyCertificateResponse\"U\xa2\xb6\x18\b2\x06verify\xaa\xb6\x18\x02\b\x03\xb2\xb6\x18\f\n" +
	"\x06verify\x12\x02\xcd\x01\x82\xd3\xe4\x93\x02-:\x01*\"(/v2alpha/cryptography/certificate/verify\x12\xd1\x01\n" +
	"\x0fSignCertificate\x125.platform.cryptography.v2alpha.SignCertificateRequest\x1a6.platform.cryptography.v2alpha.SignCertificateResponse\"O\xa2\xb6\x18\x062\x04sign\xaa\xb6\x18\x02\b\x03\xb2\xb6\x18\n" +
	"\n" +
	"\x04sign\x12\x02\xcd\x01\x82\xd3\xe4\x93\x02+:\x01*\"&/v2alpha/cryptography/certificate/signB\xbb\x01\x82\xc4\x13\x02\b\x02\x82\xb5\x18\x06\b\x03\x10\x01\x18\x06\x8a\xb5\x18$\n" +
	"\vcertificate\x12\fcertificates\"\x03jan(\x028\x01\x92\xb5\x18\x03\n" +
	"\x01\x03\x9a\xb5\x18\x02\b\x01\xa2\xb5\x18\x02\b\x01Zngithub.com/openecosystems/ecosystem/go/oeco-sdk/v2beta/gen/platform/cryptography/v2alpha;cryptographyv2alphapbb\x06proto3"

var (
	file_platform_cryptography_v2alpha_certificate_proto_rawDescOnce sync.Once
	file_platform_cryptography_v2alpha_certificate_proto_rawDescData []byte
)

func file_platform_cryptography_v2alpha_certificate_proto_rawDescGZIP() []byte {
	file_platform_cryptography_v2alpha_certificate_proto_rawDescOnce.Do(func() {
		file_platform_cryptography_v2alpha_certificate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_cryptography_v2alpha_certificate_proto_rawDesc), len(file_platform_cryptography_v2alpha_certificate_proto_rawDesc)))
	})
	return file_platform_cryptography_v2alpha_certificate_proto_rawDescData
}

var file_platform_cryptography_v2alpha_certificate_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_platform_cryptography_v2alpha_certificate_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_platform_cryptography_v2alpha_certificate_proto_goTypes = []any{
	(EventCertificateStatus)(0),       // 0: platform.cryptography.v2alpha.EventCertificateStatus
	(CertificateCommands)(0),          // 1: platform.cryptography.v2alpha.CertificateCommands
	(CertificateEvents)(0),            // 2: platform.cryptography.v2alpha.CertificateEvents
	(*CertificateConfiguration)(nil),  // 3: platform.cryptography.v2alpha.CertificateConfiguration
	(*VerifyCertificateRequest)(nil),  // 4: platform.cryptography.v2alpha.VerifyCertificateRequest
	(*VerifyCertificateResponse)(nil), // 5: platform.cryptography.v2alpha.VerifyCertificateResponse
	(*SignCertificateRequest)(nil),    // 6: platform.cryptography.v2alpha.SignCertificateRequest
	(*SignCertificateResponse)(nil),   // 7: platform.cryptography.v2alpha.SignCertificateResponse
	(*Certificate)(nil),               // 8: platform.cryptography.v2alpha.Certificate
	(*v2.File)(nil),                   // 9: platform.type.v2.File
	(*v21.SpecResponseContext)(nil),   // 10: platform.spec.v2.SpecResponseContext
	(*timestamppb.Timestamp)(nil),     // 11: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),       // 12: google.protobuf.Duration
}
var file_platform_cryptography_v2alpha_certificate_proto_depIdxs = []int32{
	9,  // 0: platform.cryptography.v2alpha.VerifyCertificateRequest.certificate:type_name -> platform.type.v2.File
	10, // 1: platform.cryptography.v2alpha.VerifyCertificateResponse.spec_context:type_name -> platform.spec.v2.SpecResponseContext
	8,  // 2: platform.cryptography.v2alpha.VerifyCertificateResponse.certificate:type_name -> platform.cryptography.v2alpha.Certificate
	9,  // 3: platform.cryptography.v2alpha.SignCertificateRequest.certificate:type_name -> platform.type.v2.File
	10, // 4: platform.cryptography.v2alpha.SignCertificateResponse.spec_context:type_name -> platform.spec.v2.SpecResponseContext
	8,  // 5: platform.cryptography.v2alpha.SignCertificateResponse.certificate:type_name -> platform.cryptography.v2alpha.Certificate
	11, // 6: platform.cryptography.v2alpha.Certificate.created_at:type_name -> google.protobuf.Timestamp
	11, // 7: platform.cryptography.v2alpha.Certificate.updated_at:type_name -> google.protobuf.Timestamp
	12, // 8: platform.cryptography.v2alpha.Certificate.duration:type_name -> google.protobuf.Duration
	9,  // 9: platform.cryptography.v2alpha.Certificate.certificate:type_name -> platform.type.v2.File
	4,  // 10: platform.cryptography.v2alpha.CertificateService.VerifyCertificate:input_type -> platform.cryptography.v2alpha.VerifyCertificateRequest
	6,  // 11: platform.cryptography.v2alpha.CertificateService.SignCertificate:input_type -> platform.cryptography.v2alpha.SignCertificateRequest
	5,  // 12: platform.cryptography.v2alpha.CertificateService.VerifyCertificate:output_type -> platform.cryptography.v2alpha.VerifyCertificateResponse
	7,  // 13: platform.cryptography.v2alpha.CertificateService.SignCertificate:output_type -> platform.cryptography.v2alpha.SignCertificateResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_platform_cryptography_v2alpha_certificate_proto_init() }
func file_platform_cryptography_v2alpha_certificate_proto_init() {
	if File_platform_cryptography_v2alpha_certificate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_cryptography_v2alpha_certificate_proto_rawDesc), len(file_platform_cryptography_v2alpha_certificate_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_platform_cryptography_v2alpha_certificate_proto_goTypes,
		DependencyIndexes: file_platform_cryptography_v2alpha_certificate_proto_depIdxs,
		EnumInfos:         file_platform_cryptography_v2alpha_certificate_proto_enumTypes,
		MessageInfos:      file_platform_cryptography_v2alpha_certificate_proto_msgTypes,
	}.Build()
	File_platform_cryptography_v2alpha_certificate_proto = out.File
	file_platform_cryptography_v2alpha_certificate_proto_goTypes = nil
	file_platform_cryptography_v2alpha_certificate_proto_depIdxs = nil
}
