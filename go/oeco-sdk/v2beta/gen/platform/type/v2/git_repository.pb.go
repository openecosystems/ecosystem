// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: platform/type/v2/git_repository.proto

package typev2pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GitRepository struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Tag           string                 `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Rev           string                 `protobuf:"bytes,3,opt,name=rev,proto3" json:"rev,omitempty"`
	Branch        string                 `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	Path          string                 `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitRepository) Reset() {
	*x = GitRepository{}
	mi := &file_platform_type_v2_git_repository_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepository) ProtoMessage() {}

func (x *GitRepository) ProtoReflect() protoreflect.Message {
	mi := &file_platform_type_v2_git_repository_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepository.ProtoReflect.Descriptor instead.
func (*GitRepository) Descriptor() ([]byte, []int) {
	return file_platform_type_v2_git_repository_proto_rawDescGZIP(), []int{0}
}

func (x *GitRepository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GitRepository) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GitRepository) GetRev() string {
	if x != nil {
		return x.Rev
	}
	return ""
}

func (x *GitRepository) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *GitRepository) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_platform_type_v2_git_repository_proto protoreflect.FileDescriptor

const file_platform_type_v2_git_repository_proto_rawDesc = "" +
	"\n" +
	"%platform/type/v2/git_repository.proto\x12\x10platform.type.v2\"q\n" +
	"\rGitRepository\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x12\x10\n" +
	"\x03rev\x18\x03 \x01(\tR\x03rev\x12\x16\n" +
	"\x06branch\x18\x04 \x01(\tR\x06branch\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04pathBVZTgithub.com/openecosystems/ecosystem/go/oeco-sdk/v2beta/gen/platform/type/v2;typev2pbb\x06proto3"

var (
	file_platform_type_v2_git_repository_proto_rawDescOnce sync.Once
	file_platform_type_v2_git_repository_proto_rawDescData []byte
)

func file_platform_type_v2_git_repository_proto_rawDescGZIP() []byte {
	file_platform_type_v2_git_repository_proto_rawDescOnce.Do(func() {
		file_platform_type_v2_git_repository_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_type_v2_git_repository_proto_rawDesc), len(file_platform_type_v2_git_repository_proto_rawDesc)))
	})
	return file_platform_type_v2_git_repository_proto_rawDescData
}

var file_platform_type_v2_git_repository_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_platform_type_v2_git_repository_proto_goTypes = []any{
	(*GitRepository)(nil), // 0: platform.type.v2.GitRepository
}
var file_platform_type_v2_git_repository_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_platform_type_v2_git_repository_proto_init() }
func file_platform_type_v2_git_repository_proto_init() {
	if File_platform_type_v2_git_repository_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_type_v2_git_repository_proto_rawDesc), len(file_platform_type_v2_git_repository_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_platform_type_v2_git_repository_proto_goTypes,
		DependencyIndexes: file_platform_type_v2_git_repository_proto_depIdxs,
		MessageInfos:      file_platform_type_v2_git_repository_proto_msgTypes,
	}.Build()
	File_platform_type_v2_git_repository_proto = out.File
	file_platform_type_v2_git_repository_proto_goTypes = nil
	file_platform_type_v2_git_repository_proto_depIdxs = nil
}
