// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: platform/type/v2/semantic_version.proto

package typev2pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SemanticVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Major version: incremented for breaking changes.
	Major uint64 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	// Minor version: incremented for new backward-compatible features.
	Minor uint64 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	// Patch version: incremented for backward-compatible bug fixes.
	Patch uint64 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	// Optional prerelease identifier, e.g., "alpha.1", "beta", "rc.1"
	Prerelease string `protobuf:"bytes,4,opt,name=prerelease,proto3" json:"prerelease,omitempty"`
	// Optional build metadata, e.g., "build.1234"
	Build         string `protobuf:"bytes,5,opt,name=build,proto3" json:"build,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SemanticVersion) Reset() {
	*x = SemanticVersion{}
	mi := &file_platform_type_v2_semantic_version_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SemanticVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemanticVersion) ProtoMessage() {}

func (x *SemanticVersion) ProtoReflect() protoreflect.Message {
	mi := &file_platform_type_v2_semantic_version_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemanticVersion.ProtoReflect.Descriptor instead.
func (*SemanticVersion) Descriptor() ([]byte, []int) {
	return file_platform_type_v2_semantic_version_proto_rawDescGZIP(), []int{0}
}

func (x *SemanticVersion) GetMajor() uint64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *SemanticVersion) GetMinor() uint64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *SemanticVersion) GetPatch() uint64 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *SemanticVersion) GetPrerelease() string {
	if x != nil {
		return x.Prerelease
	}
	return ""
}

func (x *SemanticVersion) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

var File_platform_type_v2_semantic_version_proto protoreflect.FileDescriptor

const file_platform_type_v2_semantic_version_proto_rawDesc = "" +
	"\n" +
	"'platform/type/v2/semantic_version.proto\x12\x10platform.type.v2\"\x89\x01\n" +
	"\x0fSemanticVersion\x12\x14\n" +
	"\x05major\x18\x01 \x01(\x04R\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\x04R\x05minor\x12\x14\n" +
	"\x05patch\x18\x03 \x01(\x04R\x05patch\x12\x1e\n" +
	"\n" +
	"prerelease\x18\x04 \x01(\tR\n" +
	"prerelease\x12\x14\n" +
	"\x05build\x18\x05 \x01(\tR\x05buildBVZTgithub.com/openecosystems/ecosystem/go/oeco-sdk/v2beta/gen/platform/type/v2;typev2pbb\x06proto3"

var (
	file_platform_type_v2_semantic_version_proto_rawDescOnce sync.Once
	file_platform_type_v2_semantic_version_proto_rawDescData []byte
)

func file_platform_type_v2_semantic_version_proto_rawDescGZIP() []byte {
	file_platform_type_v2_semantic_version_proto_rawDescOnce.Do(func() {
		file_platform_type_v2_semantic_version_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_type_v2_semantic_version_proto_rawDesc), len(file_platform_type_v2_semantic_version_proto_rawDesc)))
	})
	return file_platform_type_v2_semantic_version_proto_rawDescData
}

var file_platform_type_v2_semantic_version_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_platform_type_v2_semantic_version_proto_goTypes = []any{
	(*SemanticVersion)(nil), // 0: platform.type.v2.SemanticVersion
}
var file_platform_type_v2_semantic_version_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_platform_type_v2_semantic_version_proto_init() }
func file_platform_type_v2_semantic_version_proto_init() {
	if File_platform_type_v2_semantic_version_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_type_v2_semantic_version_proto_rawDesc), len(file_platform_type_v2_semantic_version_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_platform_type_v2_semantic_version_proto_goTypes,
		DependencyIndexes: file_platform_type_v2_semantic_version_proto_depIdxs,
		MessageInfos:      file_platform_type_v2_semantic_version_proto_msgTypes,
	}.Build()
	File_platform_type_v2_semantic_version_proto = out.File
	file_platform_type_v2_semantic_version_proto_goTypes = nil
	file_platform_type_v2_semantic_version_proto_depIdxs = nil
}
