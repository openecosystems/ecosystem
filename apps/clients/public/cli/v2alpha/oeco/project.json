{
  "name": "apps-clients-public-cli-v2alpha-oeco",
  "$schema": "../../../../../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/clients/public/cli/v2alpha/oeco",
  "targets": {
    "build": {
      "executor": "nx:run-commands",
      "dependsOn": [
        {
          "target": "generate",
          "projects": ["libs-partner-go-nebula-v1"]
        }
      ],
      "outputs": [
        "{workspaceRoot}/dist/apps/clients/public/cli/v2alpha/oeco"
      ],
      "defaultConfiguration": "production",
      "options": {
        "command": "go build -o ../../../../../../dist/apps/clients/public/cli/v2alpha/oeco/oeco && cp package.json ../../../../../../dist/apps/clients/public/cli/v2alpha/oeco/.",
        "cwd": "apps/clients/public/cli/v2alpha/oeco"
      },
      "configurations": {
        "production": {
          "command": "GOOS=linux GOARCH=amd64 go build -o ../../../../../../dist/apps/clients/public/cli/v2alpha/oeco/oeco && cp package.json ../../../../../../dist/apps/clients/public/cli/v2alpha/oeco/."
        }
      }
    },
    "test": {
      "executor": "nx:run-commands",
      "options": {
        "command": "mkdir -p ../../../../../../coverage/apps/clients/public/cli/v2alpha && go test -v ./... -cover -race -coverprofile=../../../../../../coverage/apps/clients/public/cli/v2alpha/coverage.txt",
        "cwd": "apps/clients/public/cli/v2alpha/oeco"
      }
    },
    "clean": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go clean",
        "cwd": "apps/clients/public/cli/v2alpha/oeco"
      }
    },
    "lint": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["gofumpt -l .", "golangci-lint run ./..."],
        "parallel": false,
        "cwd": "apps/clients/public/cli/v2alpha/oeco"
      }
    },
    "format": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["go mod tidy", "gofumpt -l -w .", "golangci-lint run ./... --timeout=5m --fix"],
        "parallel": false,
        "cwd": "apps/clients/public/cli/v2alpha/oeco"
      }
    },
    "version": {
      "outputs": ["{options.packageJson}"],
      "executor": "@ecosystem/nx-version:bump",
      "options": {
        "packageJson": "apps/clients/public/cli/v2alpha/oeco/package.json"
      }
    },
    "vulnerability": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["govulncheck ./..."],
        "parallel": false,
        "cwd": "apps/clients/public/cli/v2alpha/oeco"
      }
    },
    "distribute": {
      "executor": "nx:run-commands",
      "dependsOn": ["build"],
      "outputs": ["{workspaceRoot}/dist/apps/clients/public/cli/v2alpha/oeco"],
      "options": {
        "commands": [
          "cp LICENSE.md dist/apps/clients/public/cli/v2alpha/oeco/LICENSE.md",
          "cp apps/clients/public/cli/v2alpha/oeco/README.md dist/apps/clients/public/cli/v2alpha/oeco/README.md",
          "rm -rf dist/apps/clients/public/cli/v2alpha/oeco/completions",
          "mkdir -p dist/apps/clients/public/cli/v2alpha/oeco/completions",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'bash' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.bash",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'zsh' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.zsh",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'fish' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.fish",
          "goreleaser release --config apps/clients/public/cli/v2alpha/oeco/.goreleaser.yaml --clean --verbose"
        ],
        "parallel": false
      }
    },
    "snapshot": {
      "executor": "nx:run-commands",
      "dependsOn": ["build"],
      "outputs": ["{workspaceRoot}/dist/apps/clients/public/cli/v2alpha/oeco"],
      "options": {
        "commands": [
          "cp LICENSE.md dist/apps/clients/public/cli/v2alpha/oeco/LICENSE.md",
          "cp apps/clients/public/cli/v2alpha/oeco/README.md dist/apps/clients/public/cli/v2alpha/oeco/README.md",
          "rm -rf dist/apps/clients/public/cli/v2alpha/oeco/completions",
          "mkdir -p dist/apps/clients/public/cli/v2alpha/oeco/completions",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'bash' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.bash",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'zsh' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.zsh",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'fish' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.fish",
          "goreleaser release --config apps/clients/public/cli/v2alpha/oeco/.goreleaser.yaml --snapshot --clean --skip=sign,sbom"
        ],
        "parallel": false
      }
    },
    "nightly": {
      "executor": "nx:run-commands",
      "dependsOn": ["build"],
      "outputs": ["{workspaceRoot}/dist/apps/clients/public/cli/v2alpha/oeco"],
      "options": {
        "commands": [
          "cp LICENSE.md dist/apps/clients/public/cli/v2alpha/oeco/LICENSE.md",
          "cp apps/clients/public/cli/v2alpha/oeco/README.md dist/apps/clients/public/cli/v2alpha/oeco/README.md",
          "rm -rf dist/apps/clients/public/cli/v2alpha/oeco/completions",
          "mkdir -p dist/apps/clients/public/cli/v2alpha/oeco/completions",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'bash' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.bash",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'zsh' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.zsh",
          "go run apps/clients/public/cli/v2alpha/oeco completion 'fish' >dist/apps/clients/public/cli/v2alpha/oeco/completions/oeco.fish",
          "goreleaser release --config apps/clients/public/cli/v2alpha/oeco/.goreleaser.yaml --nightly --clean --verbose"
        ],
        "parallel": false
      }
    }
  },
  "tags": [
    "type:app",
    "type:client",
    "cycle:public",
    "type:cli",
    "system:cli",
    "version:v2alpha",
    "exposure:internal",
    "language:golang"
  ]
}
